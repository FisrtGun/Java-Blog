/*
SQLyog Ultimate v12.09 (64 bit)
MySQL - 5.7.16 : Database - firstgun
*********************************************************************
*/

/*!40101 SET NAMES utf8 */;

/*!40101 SET SQL_MODE=''*/;

/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
CREATE DATABASE /*!32312 IF NOT EXISTS*/`firstgun` /*!40100 DEFAULT CHARACTER SET utf8 */;

USE `firstgun`;

/*Table structure for table `chat` */

DROP TABLE IF EXISTS `chat`;

CREATE TABLE `chat` (
  `cid` int(10) NOT NULL AUTO_INCREMENT COMMENT 'GitChat id',
  `cwid` int(10) DEFAULT NULL COMMENT '作者id',
  `ctid` int(10) DEFAULT NULL COMMENT 'Chat主题id',
  `chattitle` varchar(50) DEFAULT NULL COMMENT 'Chat标题',
  `chathits` int(10) DEFAULT NULL COMMENT 'Chat点击量',
  `chattag` varchar(10) DEFAULT NULL COMMENT 'Chat标签',
  `chatprice` int(10) DEFAULT NULL COMMENT 'Chat价格',
  `chatcreatetime` datetime DEFAULT NULL COMMENT 'Chat创建时间',
  `cwjoinid` int(10) DEFAULT NULL COMMENT '已参与的知名用户id',
  PRIMARY KEY (`cid`),
  KEY `writer_chat_cwid` (`cwid`),
  KEY `writer_chat_cwjoinid` (`cwjoinid`),
  KEY `topic_chat_ctid` (`ctid`),
  CONSTRAINT `topic_chat_ctid` FOREIGN KEY (`ctid`) REFERENCES `chattopic` (`tid`),
  CONSTRAINT `writer_chat_cwid` FOREIGN KEY (`cwid`) REFERENCES `chatwriter` (`wid`),
  CONSTRAINT `writer_chat_cwjoinid` FOREIGN KEY (`cwjoinid`) REFERENCES `chatwriter` (`wid`)
) ENGINE=InnoDB AUTO_INCREMENT=17 DEFAULT CHARSET=utf8;

/*Data for the table `chat` */

insert  into `chat`(`cid`,`cwid`,`ctid`,`chattitle`,`chathits`,`chattag`,`chatprice`,`chatcreatetime`,`cwjoinid`) values (1,1,10,'如何用 Python 爬取网页制作电子书',390,'读者圈',1,'2018-03-09 00:00:00',NULL),(2,2,17,'提升 PPT 逼格的秘诀——善用圆角矩形',97,'读者圈',0,'2018-03-01 00:00:00',NULL),(3,3,11,'让你一场 Chat 学会 Git',297,'读者圈',2,'2018-03-05 00:00:00',NULL),(4,4,9,'Linux 内存管理之内核态剖析',58,'读者圈',2,'2018-03-10 00:00:00',NULL),(5,5,7,'初探 ZooKeeper 技术内幕',71,'读者圈',10,'2018-03-08 00:00:00',NULL),(6,6,17,'别让网络知识成为你跳槽时的瓶颈',125,'读者圈',5,'2018-03-02 00:00:00',NULL),(7,7,20,'如何写一手好文章：练习、技巧，以及艺术',220,NULL,4,'2018-03-03 00:00:00',NULL),(8,8,17,'一条挨踢老狗的 2017 年终总结',425,'读者圈',0,'2018-03-09 00:00:00',NULL),(9,1,17,'如何掌握苹果发布会 PPT 制作要点',197,NULL,2,'2018-03-07 00:00:00',NULL),(10,2,17,'程序员如何进行职业规划？',114,'读者圈',3,'2018-03-02 00:00:00',NULL),(11,3,9,'手把手教你如何向 Linux 内核提交代码',91,NULL,5,'2018-03-05 00:00:00',NULL),(12,4,7,'ZooKeeper 基本概念、使用方法、实践场景',156,NULL,10,'2018-03-09 00:00:00',NULL),(13,5,17,'程序员跳槽时，如何优雅地谈薪水',420,'读者圈',0,'2018-03-11 00:00:00',NULL),(14,6,7,'如何基于 Redis 构建应用程序组件',133,NULL,5,'2018-03-03 00:00:00',NULL),(15,7,19,'程序员与养生',161,'读者圈',0,'2018-03-15 00:00:00',NULL),(16,8,8,'从点线面体谈开发到架构师的转型',188,NULL,10,'2018-03-13 00:00:00',NULL);

/*Table structure for table `chatbanner` */

DROP TABLE IF EXISTS `chatbanner`;

CREATE TABLE `chatbanner` (
  `bid` int(10) NOT NULL COMMENT '轮播图图片id',
  `bannerimage` varchar(100) DEFAULT NULL COMMENT '轮播图路径',
  `bannerlink` varchar(100) DEFAULT NULL COMMENT '轮播图链接',
  PRIMARY KEY (`bid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `chatbanner` */

insert  into `chatbanner`(`bid`,`bannerimage`,`bannerlink`) values (1,'../../statics/picture/gitchat/475d2c24a7414ed994255268da9c1ddb.gif',NULL),(2,'../../statics/picture/gitchat/2322701fdd994c809de8399744d06e0f.gif',NULL),(3,'../../statics/picture/gitchat/e207b4392c904250bcd70d5b81660899.gif',NULL),(4,'../../statics/picture/gitchat/9f3c4f2bf96440318d5d0891b670181f.gif',NULL),(5,'../../statics/picture/gitchat/c23ddd46d0644e46bec3a907aeb85946.gif',NULL);

/*Table structure for table `chatclass` */

DROP TABLE IF EXISTS `chatclass`;

CREATE TABLE `chatclass` (
  `ccid` int(10) NOT NULL AUTO_INCREMENT COMMENT '达人课id',
  `cwid` int(10) DEFAULT NULL COMMENT '作者id',
  `chatclasshour` varchar(10) DEFAULT NULL COMMENT '达人课课时',
  `chatclassprice` int(10) DEFAULT NULL COMMENT '达人课价格',
  `chatclassbought` int(10) DEFAULT NULL COMMENT '购买人数',
  `chatclassprofile` varchar(255) DEFAULT NULL COMMENT '课程简介',
  `chatclassmenuid` int(10) DEFAULT NULL COMMENT '课程内容id',
  `chatclasssuitable` varchar(200) DEFAULT NULL COMMENT '适宜人群',
  `chatclassnotice` varchar(200) DEFAULT NULL COMMENT '购买须知',
  `chatclasstitle` varchar(50) DEFAULT NULL COMMENT '达人课标题',
  PRIMARY KEY (`ccid`),
  KEY `writer_class_cwid` (`cwid`),
  CONSTRAINT `writer_class_cwid` FOREIGN KEY (`cwid`) REFERENCES `chatwriter` (`wid`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;

/*Data for the table `chatclass` */

insert  into `chatclass`(`ccid`,`cwid`,`chatclasshour`,`chatclassprice`,`chatclassbought`,`chatclassprofile`,`chatclassmenuid`,`chatclasssuitable`,`chatclassnotice`,`chatclasstitle`) values (1,9,'9',10,131,'2009 年 AngularJS 第一个把“依赖注入”机制引入到了前端开发中，开创了用后端设计思想大规模入侵前端领域的先河。',NULL,'已经熟悉 Angular 基础知识的开发者','本课程为图文内容课程，共计 9 篇。\r\n付费用户可享受文章永久阅读权限。\r\n付费用户可获取读者圈 PASS 权限，与讲师进一步互动。\r\n本课程为虚拟产品，一经付费概不退款，敬请谅解。','Angular 小专题：玩转注射器'),(2,10,'9',10,192,'本课程是一个系列基础教程，目标是带领读者上手实战 Django Web 开发，课程以 Django 1.10 为基础，通过一个在线视频网站的构建，实战化的介绍 Django Web 开发中涉及的各大基本功能，从项目的创建和配置、到视图函数的创建和 URL 映射设置、到数据模型的创建使用和 Django 模板的运用，再到用户认证系统的实现，最后完成 Django 项目在 Ubuntu 上的部署。',NULL,'Python 的初学者\r\n对使用 Django 进行 Python Web 开发感兴趣的读者','本课程为图文内容课程，共计 9 篇。\r\n付费用户可享受文章永久阅读权限。\r\n付费用户可获取读者圈 PASS 权限，与讲师进一步互动。\r\n本课程为虚拟产品，一经付费概不退款，敬请谅解。','Django Web 开发极简实战'),(3,11,'13',10,311,'现代语言大部分会有 Runtime，类似在操作系统以外再抽象出一层虚拟机，它接管着很多东西，比如内存、垃圾回收、甚至包含现在的并发调度任务执行。内存管理、垃圾回收、并发调度是 Go 语言的 Runtime 中最核心的东西，本系列课程内容将深入剖析 Runtime 三大组件，内存分配器、垃圾回收器、Goroutine 调度。\r\n\r\n相关联的系列达人课：《编程语言底层之数据结构》和《编程语言底层之函数执行》。',NULL,'对语言实现感兴趣的开发人员 应用开发想转系统开发的开发人员 从事服务端架构设计的架构师、开发人员','本课程为图文内容课程，共计 13 篇。\r\n本课程限时特价 9.99 元，2018.3.25 零时恢复至原价 19.99 元。\r\n付费用户可享受文章永久阅读权限。\r\n付费用户可获取读者圈 PASS 权限，与讲师进一步互动。\r\n本课程为虚拟产品，一经付费概不退款，敬请谅解。','编程语言底层之系统和并发');

/*Table structure for table `chattopic` */

DROP TABLE IF EXISTS `chattopic`;

CREATE TABLE `chattopic` (
  `tid` int(10) NOT NULL AUTO_INCREMENT COMMENT 'Chat主题id',
  `chattopic` varchar(10) DEFAULT NULL COMMENT 'Chat主题',
  `topicimage` varchar(200) DEFAULT NULL COMMENT '主题图片路径',
  PRIMARY KEY (`tid`)
) ENGINE=InnoDB AUTO_INCREMENT=23 DEFAULT CHARSET=utf8;

/*Data for the table `chattopic` */

insert  into `chattopic`(`tid`,`chattopic`,`topicimage`) values (1,'前端','../../statics/images/gitchat/dd53cb80-1c05-11e7-8187-65a30c956cd7'),(2,'移动开发','../../statics/images/gitchat/4b807350-348a-11e7-8728-a9cb89af1d5d'),(3,'硬件与物联网','../../statics/images/gitchat/d5c726d0-b635-11e7-955b-b55efdfa1bf6'),(4,'区块链','../../statics/images/gitchat/45741e20-5bdc-11e7-a916-3bc36c078bd8'),(5,'人工智能','../../statics/images/gitchat/be039710-1c05-11e7-9d4d-1121a99bb498'),(6,'数学与算法','../../statics/images/gitchat/c0082920-b3f1-11e7-9e2f-8367361a88f2'),(7,'大数据','../../statics/images/gitchat/d5a56510-1c05-11e7-9d4d-1121a99bb498'),(8,'架构','../../statics/images/gitchat/cc8a9d60-1c05-11e7-8187-65a30c956cd7'),(9,'开源软件','../../statics/images/gitchat/29d250c0-bc89-11e7-a513-09587bc95d13'),(10,'编程语言','../../statics/images/gitchat/8c17e090-9f4e-11e7-b002-c1f7ed467750'),(11,'软件工程实践','../../statics/images/gitchat/064d9590-5179-11e7-8f9d-e1a46a00e053'),(12,'测试','../../statics/images/gitchat/b4495b10-1c05-11e7-8187-65a30c956cd7'),(13,'运维','../../statics/images/gitchat/fa6cb380-2b2d-11e7-93f9-893e15f43873'),(14,'安全','../../statics/images/gitchat/10953840-3ca3-11e7-9a83-95fed495c599'),(15,'技术管理','../../statics/images/gitchat/aa5b64e0-1c05-11e7-ba87-1ba9759a0caa'),(16,'敏捷','../../statics/images/gitchat/c5c3fee0-1c05-11e7-8187-65a30c956cd7'),(17,'职场','../../statics/images/gitchat/99722ba0-1c05-11e7-b2fd-1d704832d7d1'),(18,'产品与运营','../../statics/images/gitchat/a11dfa00-1c05-11e7-b2fd-1d704832d7d1'),(19,'生活','../../statics/images/gitchat/8d3f9ca0-1c05-11e7-ba87-1ba9759a0caa'),(20,'写作与翻译','../../statics/images/gitchat/17bbd190-9d0d-11e7-be01-51f282d58fd1'),(21,'教育','../../statics/images/gitchat/0186a7c0-2831-11e7-a4f0-afdbe5283f35'),(22,'其它','../../statics/images/gitchat/85241c80-1c05-11e7-9d4d-1121a99bb498');

/*Table structure for table `chatwriter` */

DROP TABLE IF EXISTS `chatwriter`;

CREATE TABLE `chatwriter` (
  `wid` int(10) NOT NULL AUTO_INCREMENT COMMENT '作者id',
  `writername` varchar(10) DEFAULT NULL COMMENT '作者昵称',
  `writerhead` varchar(100) DEFAULT NULL COMMENT '作者头像',
  `writerimage` varchar(100) DEFAULT NULL COMMENT '作者照片',
  `writertag` varchar(20) DEFAULT NULL COMMENT '作者标签',
  `writerdesc` varchar(200) DEFAULT NULL COMMENT '作者描述',
  PRIMARY KEY (`wid`)
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8;

/*Data for the table `chatwriter` */

insert  into `chatwriter`(`wid`,`writername`,`writerhead`,`writerimage`,`writertag`,`writerdesc`) values (1,'孙亖','../../statics/picture/gitchat/6f1d56e5109544d0a8af38bff1ec7797.gif',NULL,'开发工程师','软件工程师，长期从事企业信息化系统的研发工作，主要擅长后台业务功能的设计开发。'),(2,'肃肃其羽','../../statics/picture/gitchat/4c618bba8b4a4091bec5a181fa9723e0.gif',NULL,'UI设计/平面设计/Python','目前已研究5年平面设计 + UI设计，积累一定设计经验，一只认真的00后小白。同时做过python开发，有若干开发经验。目前也涉猎机器学习等领域。微信suyu031117。'),(3,'王俊生','../../statics/picture/gitchat/111a9e862b56469d98f9e1838b3ebd46.gif',NULL,'新时代程序员','曾上线运营平台；报表自定义；养老护理中心信息化平台等项目。此外负责公司项目从svn到gitlab的迁移和公司十亿级数据迁移工作。日常喜欢运动、旅游、读书，励志做一个热衷技术、享受生活的新时代程序员。'),(4,'刘盼','../../statics/picture/gitchat/efcce6af3390443abfffaa09dbc24b53.gif',NULL,'高级研发工程师','Linux内核贡献者，CSDN博客专家，活跃于各大创客社区，精通ARM＋Linux＋Android的嵌入式开发，个人公众号《人人都是极客》。智道科技联合创始人，目前专注于嵌入式领域的人工智能研究。'),(5,'100offer','../../statics/picture/gitchat/4b10098221c94ac99277fdebc127deb7.gif',NULL,'100offer','100offer 严格筛选来自世界各地的优质公司，打造了一个优秀人才和公司的平台，致力于帮最好的人才发现更好的工作机会。使用 100offer ，互联网人可在一周内收到来自中国、美国、新加坡等数千家优质企业的工作机会。'),(6,'阿福','../../statics/picture/gitchat/060a824d699c4cb1812ccdf42b32e8f6.gif',NULL,'资深研发工程师','于电商行业的一家独角兽公司任职，专注于代码，热衷于分享'),(7,'宋璐','../../statics/picture/gitchat/02252f0c4cff463a933c0a50e0864556.gif',NULL,'今日头条架构组研发工程师','在传统IT做过基于网络IP层和链路层的协议优化; 目前在互联网公司做基于应用层和传输层的网络优化; 也写一些业务代码,主要开发语言还是C/C++以及Golang; 熟悉chromium内核,喜欢阅读各类开源代码;'),(8,'加兴','../../statics/picture/gitchat/e22c25519df441a2b28f9b4d87ae0e32.gif',NULL,'Agilean事业合伙人','中国敏捷精益领先咨询服务商Agilean事业合伙人，专注在金融数字化转型领域咨询和创新，目前是数家金融组织整体转型的首席顾问。曾主导过多家顶级企业的IT部门敏捷转型、产品一体化运作以及重大创新产品开发。'),(9,'大漠穷秋',NULL,'../../statics/picture/gitchat/10c86a4b518845a48d184edd55655e9f.gif','前端恶棍','大漠穷秋，10 年开发经验，其中 5 年后端、5 年前端。熟悉 Java 相关的技术体系：SpringMVC、MyBatis、Ehcache、ELK、MySQL 等。在前端技术方面尤其有深入的研究，先后使用并研究过 Flex、jQuery、Extjs、Backbone、Bootstrap、Angular 等常见的前端技术体系。'),(10,'杨健',NULL,'../../statics/picture/gitchat/8fd704a866994f34ab12175085ee3428.gif','Python 独立博客“州的先生”作者','杨健，新三板某电商企业技术部 Python 开发工程师，负责公司数据挖掘项目的构建，Python 独立教程博客主：州的先生，对 Python 多领域的运用（Web 开发、数据采集、数据分析和挖掘等）均有所研究和涉及。'),(11,'李永京',NULL,'../../statics/picture/gitchat/e7859936361747e29561149b6fcbf27a.gif','博客园知名博主','李永京，从事互联网后端系统开发，擅长高并发分布式系统，熟悉 Go、C、C#、Python 等语言。架构龙珠直播平台基础框架，开发过道具、任务、红包、直播、聊天、调度系统等。曾任职阿里妈妈，开发过移动广告 DMP、DSP、广告数据人群分析等。个人博客 积分排名前 30，300万 PV。');

/*Table structure for table `front` */

DROP TABLE IF EXISTS `front`;

CREATE TABLE `front` (
  `fid` int(6) NOT NULL,
  `ftitle` varchar(30) DEFAULT NULL,
  `fnum` varchar(30) DEFAULT NULL,
  `fauthor` varchar(30) DEFAULT NULL,
  `ftime` varchar(20) DEFAULT NULL,
  `fcomment` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`fid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `front` */

insert  into `front`(`fid`,`ftitle`,`fnum`,`fauthor`,`ftime`,`fcomment`) values (1,'欢迎使用CSDN-markdown编辑器真是实用','988','liizhao','2月17','14'),(2,'页面居中、响应式布局的总结','1178','fujiawei','2月18','26'),(3,'python总结25 django 富文本编辑器加入项目中','581','wangxiyuan','2月19','65'),(4,'阿里巴巴矢量图的使用方法','898','nainiu','2月20','5'),(5,'js绘制抛物线','727','jiaming','2月21','4'),(6,'Java面板基础中的JPanel和JScrollpane','546','laotie','2月22','89'),(7,'JQuery选择器','908','yuze','2月23','10');

/*Table structure for table `genius` */

DROP TABLE IF EXISTS `genius`;

CREATE TABLE `genius` (
  `aid` int(20) NOT NULL AUTO_INCREMENT,
  `atype` int(4) DEFAULT NULL COMMENT '类型',
  `alogo` varchar(255) DEFAULT NULL COMMENT '头像logo',
  `author` varchar(255) DEFAULT NULL COMMENT '作者',
  `atitle` varchar(255) DEFAULT NULL COMMENT '标题',
  PRIMARY KEY (`aid`)
) ENGINE=InnoDB AUTO_INCREMENT=120 DEFAULT CHARSET=utf8;

/*Data for the table `genius` */

insert  into `genius`(`aid`,`atype`,`alogo`,`author`,`atitle`) values (1,1,'../../statics/cstoImages/1339070880758454.png','xiuyuanyihe2012',''),(2,1,'../../statics/cstoImages/1369299219958478.png','u010619512',''),(3,1,'../../statics/cstoImages/1400733263878254.png','zimasys',''),(4,1,'../../statics/cstoImages/1382880580266943.png','tianliang0309',NULL),(5,1,'../../statics/cstoImages/1405049268378702.png','conris',NULL),(6,1,'../../statics/cstoImages/1385622877259808.png','微点科技',NULL),(7,1,'../../statics/cstoImages/1369489070546227.png','djx54545',NULL),(8,1,'../../statics/cstoImages/1470879091602473.png','东软集团',NULL),(9,1,'../../statics/cstoImages/1459996669768492.png','uibekt0821',NULL),(10,1,'../../statics/cstoImages/1359348352694647.png','高手软件',NULL),(11,2,'../../statics/cstoImages/1459603620630558.png','haohantech',NULL),(12,2,'../../statics/cstoImages/1317809568962656.png','wspscucs',NULL),(13,2,'../../statics/cstoImages/1414133494466632.png','qq_22470473',NULL),(14,2,'../../statics/cstoImages/1365005851567786.png','手机APP开发',NULL),(15,2,'../../statics/cstoImages/1398827539132679.png','huahansoft',NULL),(16,2,'../../statics/cstoImages/1413913775261454.png','qq_21375497',NULL),(17,2,'../../statics/cstoImages/1386131891401192.png','千与千寻2015',NULL),(18,2,'../../statics/cstoImages/1444360090300738.png','微克信息',NULL),(19,2,'../../statics/cstoImages/1_sanqishuju.jpg','三七数据',NULL),(20,2,'../../statics/cstoImages/1_kellor118.jpg','kellor118',NULL),(21,3,'../../statics/cstoImages/1383191909704323.png','u012649615',NULL),(22,3,'../../statics/cstoImages/1354718688698046.png','sigil2011',NULL),(23,3,'../../statics/cstoImages/1517320357864909.png','聚力设计工作室',NULL),(24,3,'../../statics/cstoImages/1352097075343551.png','红橘子科技-九九',NULL),(25,3,'../../statics/cstoImages/1325121624929360.png','浮云-8年程序及设计经验',NULL),(26,3,'../../statics/cstoImages/1419647691508519.png','tcwangwenping',NULL),(27,3,'../../statics/cstoImages/1372913998950105.png','手机软件开发公司',NULL),(28,3,'../../statics/cstoImages/1325723329587132.png','发哥',NULL),(29,3,'../../statics/cstoImages/1392823460212154.png','larkim82',NULL),(30,3,'../../statics/cstoImages/1365406802547376.png',NULL,NULL),(31,4,'../../statics/cstoImages/1_sitongqdl.jpg','非凡软件',NULL),(32,4,'../../statics/cstoImages/1370764514799764.png','u011013524',NULL),(33,4,'../../statics/cstoImages/1359776020565033.png','码农帮',NULL),(34,4,'../../statics/cstoImages/1_qq_16272049.jpg','Legendary灬',NULL),(35,4,'../../statics/cstoImages/1_maredays.jpg','maredays',NULL),(36,4,'../../statics/cstoImages/1_milankaka22.jpg','milankaka22',NULL),(37,4,'../../statics/cstoImages/1_u013607631.jpg','u013607631',NULL),(38,4,'../../statics/cstoImages/1383204244234906.png','james1207',NULL),(39,4,'../../statics/cstoImages/1325124919929690.png','中科爱普',NULL),(40,4,'../../statics/cstoImages/1351050110843605.png','facedge',NULL),(41,5,'../../statics/cstoImages/1430991906597668.png','luofeng4213',NULL),(42,5,'../../statics/cstoImages/1382868118506086.png','fawen18',NULL),(43,5,'../../statics/cstoImages/1_alexsunmiu.jpg','alexsunmiu',NULL),(44,5,'../../statics/cstoImages/1_volye.jpg','volye',NULL),(45,5,'../../statics/cstoImages/1317809568962656.png','CSTO会员_dream1066',NULL),(46,5,'../../statics/cstoImages/1_xuezhi1001.jpg','Halostudio',NULL),(47,5,'../../statics/cstoImages/1359034401620113.png','loophop',NULL),(48,5,'../../statics/cstoImages/1317809568962656.png','奋斗并快乐着',NULL),(49,5,'../../statics/cstoImages/1_softwarese.jpg','SoftwareSE',NULL),(50,5,'../../statics/cstoImages/1_quickembed_sh.jpg','quickembed_sh',NULL),(51,6,'../../statics/cstoImages/1356831974230837.png','laonanhai2008',NULL),(52,6,'../../statics/cstoImages/1371436690373932.png','feiyangqingyun',NULL),(53,6,'../../statics/cstoImages/1439558523539890.png','dsfg',NULL),(54,6,'../../statics/cstoImages/1_fanck.jpg','dhgfnj',NULL),(55,6,'../../statics/cstoImages/1375947875309398.png','ngfhnghm,',NULL),(56,6,'../../statics/cstoImages/1401249141918918.png','mhj',NULL),(57,6,'../../statics/cstoImages/1370181085233800.png','ndfgnh',NULL),(58,6,'../../statics/cstoImages/1317809568962656.png','nfgnyt',NULL),(59,6,'../../statics/cstoImages/1440646791784223.png','ngfmj',NULL),(60,6,'../../statics/cstoImages/1511844463925700.png','ntynmh',NULL),(61,7,'../../statics/cstoImages/1491788583365640.png','ngdhg',NULL),(62,7,'../../statics/cstoImages/1363772762909302.png','resth',NULL),(63,7,'../../statics/cstoImages/1489996470737296.png','bsdfgbf',NULL),(64,7,'../../statics/cstoImages/1359348352694647.png','dsfgb',NULL),(65,7,'../../statics/cstoImages/1445243878627280.png','etgs',NULL),(66,7,'../../statics/cstoImages/1_newcad0000.jpg','hntyhn',NULL),(67,7,'../../statics/cstoImages/1333516824313859.png','ngfn',NULL),(68,7,'../../statics/cstoImages/1373267332773143.png','edrg',NULL),(69,7,'../../statics/cstoImages/1494914986922541.png','sersed',NULL),(70,7,'../../statics/cstoImages/1385622877259808.png','drt',NULL),(71,8,'../../statics/cstoImages/1354718688698046.png','bdbf',NULL),(72,8,'../../statics/cstoImages/1_zmk523.jpg','bsdd',NULL),(73,8,'../../statics/cstoImages/1432285495705905.png','aer',NULL),(74,8,'../../statics/cstoImages/1_bb0536.jpg','vdfb',NULL),(75,8,'../../statics/cstoImages/1458604539853458.png','dsfbe',NULL),(76,8,'../../statics/cstoImages/1478579892783913.png','bdfvd',NULL),(77,8,'../../statics/cstoImages/1494914986922541.png','vsdvf',NULL),(78,8,'../../statics/cstoImages/1382880580266943.png','vsdfv',NULL),(79,8,'../../statics/cstoImages/1435152868530453.png','dcfb df',NULL),(80,8,'../../statics/cstoImages/1_shijin525.jpg','bgfb',NULL),(81,9,'../../statics/cstoImages/1514441330587019.png','b fsgb',NULL),(82,9,'../../statics/cstoImages/1359348352694647.png','bsebe',NULL),(83,9,'../../statics/cstoImages/1317809568962656.png','aqegr',NULL),(84,9,'../../statics/cstoImages/1481181039745959.png','ge4rer',NULL),(85,9,'../../statics/cstoImages/1414133494466632.png','grtg65',NULL),(86,9,'../../statics/cstoImages/1385622877259808.png','rg56grt',NULL),(87,9,'../../statics/cstoImages/1392890074655566.png','gryhnjt',NULL),(88,9,'../../statics/cstoImages/1348630465520174.png','hbyhj',NULL),(89,9,'../../statics/cstoImages/1395633728810215.png','h5trh',NULL),(90,9,'../../statics/cstoImages/1385622877259808.png','hjuyj',NULL),(91,10,'../../statics/cstoImages/1352097075343551.png','miu,',NULL),(92,10,'../../statics/cstoImages/1489821621436415.png','nmytj',NULL),(93,10,'../../statics/cstoImages/1397611367444235.png','fndn',NULL),(94,10,'../../statics/cstoImages/1444628981786310.png','nfdgnhtr',NULL),(95,10,'../../statics/cstoImages/1409816524118745.png','nfgnh',NULL),(96,10,'../../statics/cstoImages/1408514652192175.png','n56nfgn',NULL),(97,10,'../../statics/cstoImages/1334153479205301.png','fnt5rfn',NULL),(98,10,'../../statics/cstoImages/1392823460212154.png','fntyrhn6y',NULL),(99,10,'../../statics/cstoImages/1481805881393291.png','n6t5rhrt',NULL),(100,10,'../../statics/cstoImages/1511844463925700.png','nfg',NULL),(101,11,'../../statics/cstoImages/1514441330587019.png','nt54n',NULL),(102,11,'../../statics/cstoImages/1516608555774957.png','nfgnf',NULL),(103,11,'../../statics/cstoImages/1510277205527651.png','nfgne',NULL),(104,11,'../../statics/cstoImages/1_prosperity1006.jpg','nrtnss',NULL),(105,11,'../../statics/cstoImages/1468225125181208.png','bhsdfbzb',NULL),(106,11,'../../statics/cstoImages/1467521034633672.png','bzdber',NULL),(107,11,'../../statics/cstoImages/1459996669768492.png','mh',NULL),(108,11,'../../statics/cstoImages/1385622877259808.png','kltl',NULL),(109,11,'../../statics/cstoImages/1461305694837147.png','ktyjrt',NULL),(110,11,'../../statics/cstoImages/1510277205527651.png','bzdfdbz',NULL),(111,12,'../../statics/cstoImages/1317809568962656.png','rgawergr',NULL),(112,12,'../../statics/cstoImages/1445448597101493.png','htrr6t',NULL),(113,12,'../../statics/cstoImages/1455368980973479.png','rhtr',NULL),(114,12,'../../statics/cstoImages/1489821621436415.png','gwgfer',NULL),(115,12,'../../statics/cstoImages/1397611367444235.png','gerg43',NULL),(116,12,'../../statics/cstoImages/1444628981786310.png','gerger',NULL),(117,12,'../../statics/cstoImages/1404967363446578.png','reg43',NULL),(118,12,'../../statics/cstoImages/1432285495705905.png','gerg',NULL),(119,12,'../../statics/cstoImages/1334153479205301.png','rh',NULL);

/*Table structure for table `informationtitle` */

DROP TABLE IF EXISTS `informationtitle`;

CREATE TABLE `informationtitle` (
  `iid` int(20) NOT NULL AUTO_INCREMENT,
  `ititle` text COMMENT '新闻标题',
  `iconten` text COMMENT '新闻内容',
  `iauthor` varchar(255) DEFAULT NULL COMMENT '新闻作者',
  `itab` varchar(255) DEFAULT NULL COMMENT '标签',
  `icreateTime` datetime DEFAULT NULL COMMENT '创建时间',
  `ireads` int(24) DEFAULT NULL COMMENT '阅读量',
  `iimg` varchar(255) DEFAULT NULL COMMENT '图片地址',
  `iarticle` varchar(50) DEFAULT NULL COMMENT '文章来源',
  `ifollower` int(20) DEFAULT NULL COMMENT '粉丝',
  `ilike` int(20) DEFAULT NULL COMMENT '喜欢',
  `idiscuss` int(20) DEFAULT NULL COMMENT '评论',
  `ithumb` int(20) DEFAULT NULL COMMENT '点赞',
  `igrade` varchar(50) DEFAULT NULL COMMENT '等级',
  `iview` int(20) DEFAULT NULL COMMENT '访问量',
  `iintegration` int(20) DEFAULT NULL COMMENT '积分',
  `iranking` int(30) DEFAULT NULL COMMENT '排名',
  `ipicture` varchar(255) DEFAULT NULL COMMENT '广告图片',
  PRIMARY KEY (`iid`)
) ENGINE=InnoDB AUTO_INCREMENT=17 DEFAULT CHARSET=utf8;

/*Data for the table `informationtitle` */

insert  into `informationtitle`(`iid`,`ititle`,`iconten`,`iauthor`,`itab`,`icreateTime`,`ireads`,`iimg`,`iarticle`,`ifollower`,`ilike`,`idiscuss`,`ithumb`,`igrade`,`iview`,`iintegration`,`iranking`,`ipicture`) values (1,'12000 颗卫星为地球织网！马斯克昨夜踏上改变世界的第6个征程','关于函数增量(Δy)与微分（dy）的思考  (此文于2013-07-28发表)\r\n7月28日，J. Keisler《基础微积分》的第2.1节导数、第2.2节微分与切线、第2.3节有理函数的导数、第2.4节反函数和第2.5节超越函数已经上传互联网完毕有感。\r\n        在传统微积分学里面，有一个著名的公式：\r\n（*）     Δy =AΔx + o（Δx)\r\n在（*）式中，A是一个常数。“o（Δx)”这一项是什么意思呢？“十一五”国家级规划教材宣称：“o（Δx)”是所谓“高阶无穷小”（在Δx →0条件下）。也就是说，在Δx →0条件下，o（Δx)/Δx →0。此时，将表达式AΔx定义为函数y在x处的微分。\r\n我们问：（*）式成立与否是不是一定要以”Δx →0“为前提？当然不需要这一前提条件。但是，“十一五”国家级规划教材同济大学《高等数学》则不认为是这样的，在微分定义中，编者绑定了前提条件”Δx →0“，多年来，培育出不少小糊涂虫。\r\n在第2.2节微分与切线里面，J. Keisler给出函数微分定义如下：\r\nDEFINITION\r\nSuppose y dependson x, y=f(x).\r\n         (i) The differential ofx is the independent variable dx =Δx.\r\n         (ii) The differential ofy is the dependent variable dy given by\r\n           dy = f′(x)dx.\r\nWhen dx≠ 0, the equationabove may be rewritten as\r\n           dy/dx = f’(x)           \r\n\r\n        在《无穷小微积分基础》教学辅导电子书里面，J. Keisler给出了该定义与（*）式等价的证明。在超实数*R里面，函数的微分原来就是无穷小表达式f\'(x)dx，两个无穷小dy与dx之比等于函数在该处的导数f\'(x)。微分是什么函数增量的“线性主部”说教统统不要了。\r\n\r\n\r\n\r\n\r\n        在超实数*R世界里面，我们的思维可以自由飞翔。在其背后有严格的数学链条牢牢地铆钉在传统微积分本体之上。反对无穷小微积分就是挑战传统微积分，只有现代唐吉歌徳先生才会干这种傻事情。我们不断地转录、上传这些无穷小微积分的文字、图片资料，就是希望它们能够长时间地释放能量，把无穷小方法渗透进学生们的脑壳中，使其终生受益。无穷小是数数学家的一项伟大智慧发明，完善了微积分学的概念体系。（全文完）\r\n','硅谷密探','AAAAA','2018-03-01 00:00:00',5442,'../../statics/picture/1_zlj925.jpg','ZA',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(2,'Java学习笔记（第3天）','对于开发的网站，如果网站的访问量非常大，那么我们应该考虑相关的、并发访问问题，并发是绝大部分程序员头疼的问题；\r\n \r\n为了更好的理解并发和同步，先明白两个重要的概念：异步和同步；\r\n \r\n 1、同步和异步的区别和联系\r\n \r\n所谓同步就是执行完一个函数后方法后，一直等待系统返回值或消息，这是程序是阻塞的，只有接受到返回值或者消息才会往下执行其他命令\r\n \r\n异步，执行完函数或方法后，不必阻塞的等待系统返回值或消息，只需向系统委托一个异步过程，那么当系统接受到返回值或者消息，系统会\r\n \r\n自动触发异步过程，完成一个完整的流程\r\n \r\n同步在一定程度上可以看成单线程，线程请求一个方法后就等待这个方法给回复，否则不会继续执行下去（死心眼）；\r\n \r\n异步在一定程度上可以看成多线程，请求一个方法后就不管了，继续执行其他的方法\r\n \r\n同步就是事情一件一件的做，异步就是做一件事，不影响做其他事情。\r\n \r\n例：吃饭和说话是同步的，只能一件一件的做，因为只有一张嘴\r\n \r\n吃饭和听音乐是异步的，吃饭和听音乐互不影响\r\n \r\n      \r\n \r\n     对于java程序员，我们经常会听到同步关键字synchronized，假如这个同步的监视对象是类，那么如果一个对象访问类里面的同步方法是，另一个对象\r\n \r\n也访问这个类里面的同步方法，这是就会进入阻塞状态，只有等前一个对象执行完同步方法后，后一个对象才能继续执行该方法，这就是同步。相反，\r\n \r\n如果没有被同步关键字synchronize修饰，两个对象可以在同一时间访问同一方法，这就是异步。\r\n \r\n    脏数据\r\n \r\n脏读就是指当一个事物正在访问数据，并且对数据做了修改，但是数据修改并未提交到数据库，而另一个事物也在访问这个数据，然后使用数据，因为\r\n \r\n这个数据是还没提交的数据，所以另一个事务读取的数据就是脏数据（dirty data），依据脏数据做的操作是不正确的\r\n \r\n不可重复读\r\n \r\n不可重复读是指一个事务内多次读取同一个数据，在这个事务还没有结束的时候，另一个事务也访问同一数据并做了修改，这时第一个事务中两次读取的\r\n \r\n数据可能是不一样的，这样就发生在  一个事务内读取的数据不一样，因此成为不可重复读\r\n','游骑兵HM','BBBBB','2018-03-07 00:00:00',2541,'../../statics/picture/1_woodcorpse.jpg','ZB',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(3,'陌陌7亿美元收购探探的深意，值否？','但是，字体设计工作室 Oh No Type 最近发现，如今科技公司的 logo 变得越来越相似了，这多少违背了从前人们对 logo “要独特，有代表性”的认知。\r\n从上图看来，无论是“o”上带着电波小曲线的 Spotify，还是首字母长得像图钉一般的 Pinterest，最后都抛开这些小细节，跟着大队，为自己的 logo 换上了相似的中性无衬线字体。\r\n\r\n\r\n\r\n（Instagram 也将原本的花体 logo 改为中性无衬线字体了，图自推特）\r\n\r\n在这些看似偶然的现象背后，又是否存在潜在的共同诱因？\r\n\r\n信息大爆炸时代里的减法\r\n\r\n\r\n\r\n（图自 Omni Hotels）\r\n\r\n无论是走在街上，或是对着电脑或手机，消费者每天都被大量视觉信息轰炸。在这一片视觉混乱中，冲击力以及清晰性，几乎成为了所有品牌的关键词。\r\n\r\nThierry Brunfaut 说道，他是 Base Design 的联合创始人和创意总监，他们曾为潘通、纽约现代艺术博物馆等进行品牌设计。\r\n在他看来，那些以加粗中性无衬线字体做 logo 的公司，它们都想在茫茫信息流中明确地传达出一个信息：\r\n\r\n\r\n我们的品牌和服务都非常简单直接又明确。\r\n\r\n\r\n\r\n（图自 Giphy）\r\n\r\n与此同时，Siegel+Gale 设计公司的创意总监 Howard Belk 则认为，大多数公司都在寻找更简洁直接的交互方式，而变成无衬线字体的 logo 只是改变的一部分。\r\n\r\n他们想要一致性极高的品牌形象，一套紧密相连的体验、形象和调性。当他们在审视 app、网站或是交互界面的设计时，会尽量将其简化。\r\n\r\n这样一来，你就会逐渐将 logo 里更独特的细节去掉。\r\n','老胡说科技\r\n','CCCCC','2018-03-02 00:00:00',563,'../../statics/picture/1_weixin_37909391.jpg','ZC',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(4,'对比美国电影市场，国内春节票房爆发的思考','上一周，硅谷周边方圆 300 英里内，共有 18 家初创公司获得总计 5.56 亿美元融资。具体详情，让我们一起回顾下上周硅谷的一些动态。\r\n\r\n大公司动态方面，值得关注的事件有：谷歌试图收购物联网公司Xively，谷歌再推新利器与苹果争锋AR；亚马逊市值水涨船高已等于2.5个沃尔玛，亚马逊计划今年再增开6家无人超市；苹果AirPower充电垫或3月发售，价格可能超过1000块；特斯拉2017年亏损近20亿美元，特斯拉的“云”被黑客入侵去“挖矿”了；\r\n\r\n现象方面，值得关注的有：2017年Google和Facebook继续称霸移动广告商排行榜；谷歌YouTube对原创影视态度趋冷，一年仅投数亿美元；\r\n\r\n分析方面，值得关注的动态有：谷歌软件和AI太优秀，它的硬件也能做到伟大吗？无人车地图激战正酣 谷歌能否再次笑到最后？2018年，硅谷必须做出9大改变。\r\n硅谷一周融资速报\r\n\r\n18 家公司获总计超 5.56 亿美元融资\r\n\r\n大公司\r\n•\r\n谷歌\r\n\r\n\r\n又是AI+IoT！谷歌试图收购物联网公司Xively\r\n\r\nAI+IoT，最近联姻不断。\r\n\r\n2月18日谷歌高调宣布，打算出手5000万美元从软件公司LogMeIn手中收购物联网平台Xively。作为首个在传感器数据方面独立公开的平台，Xively对开发者开放网络API，帮他们将自己的设备连接到Xively的网络平台，继而发布应用，储存和展示设备的实时数据。\r\n','36kr\r\n','DDDDD','2018-03-17 00:00:00',4752,'../../statics/picture/1_bkmk01mz3w.jpg','ZD',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(5,'2018年人工智能领域的5个趋势','在本届大会上，华为发布了号称是全球首款“全面屏”笔记本电脑MateBook X Pro。这款电脑B面屏占比达到91%，采用13.9英寸3000×2000分辨率的触摸屏，机身厚度最薄处达到4.9mm，重1.33公斤，有灰色、银色两种颜色可选，金属材质机身。\r\n\r\nMateBook X Pro的电池容量可达57.4瓦时，华为称播放视频可达12小时，Office办公可达14小时，浏览网页可达15个小时。\r\n\r\n在配置上，这款笔记本采用英特尔8代酷睿i7-8550U处理器，机身中安放有4个扬声器，支持杜比全景声。此外，华为还将摄像头做成了弹出式，使用的时候轻按弹出。\r\n\r\n\r\n\r\n\r\n\r\n这款笔记本定价1499、1699和1899欧，今年第二季度上市将在中国大陆首先上市。\r\n\r\n除了这款“全面屏”笔记本，华为还推出了一款MediaPad M5，分为10.8英寸和8.4英寸两个版本，内置麒麟960处理器。产品同样将会在今年3月开始陆续上市，但首发地区在欧洲和美国。\r\n\r\n\r\n\r\n除此之外，华为还发布了首款3GPP标准（全球权威通信标准）的5G商用芯片——巴龙5G01（Balong 5G01）和基于该芯片的首款3GPP标准5G商用终端——华为5G CPE（Consumer Premise Equipment，5G用户终端）。\r\n\r\nBalong 5G01支持全球主流的5G频段，包括Sub6GHz（低频）和mmWave（高频），理论上可实现最高2.3Gbps的数据下载速率, 支持NSA（Non Standalone，5G非独立组网，即5G网络架构在LTE上）和SA（Standalone ，5G独立组网）两种组网方式。\r\n\r\n\r\n\r\n目前华为与中国移动、中国电信、中国联通、Vodafone、SoftBank、T-Mobile、英国电信、Telefonica等全球30余家运营商在5G方面建立了合作。\r\n','36kr\r\n','EEEEE','2018-03-12 00:00:00',1245,'../../statics/picture/1_bkmk01mz3w.jpg','ZE',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(6,'春节收心大法，专治各种不想学习','第一节 英国请中国订立邦交\r\n\r\n十九世纪以前，中西没有邦交，反映在西洋没有派遣驻华的使节，中国也没有派大使到外国去。原因有：1、交通不便；2、没有刚需。西方来中国买的都是丝茶及奢侈品，中国的经济自给自足；3、中国的“优越感”。不承认别国的平等，以天朝上国自居，将外国人看做“蛮貊之邦”，“不知礼义廉耻”。\r\n\r\n中国特别的通商制度\r\n\r\n1、西洋商人被限制在广州活动。在广州，他们是不自由的，春秋季节在十三行里买卖，之后到澳门过冬。他们不能随便出游，不能带军器进广州，不能带女人进广州，不得买中国书，学中文。\r\n\r\n2、海关自主，虽然清政府不看重这一部分海关收入，但官吏随意暗中加税。\r\n\r\n3、不看重法权。在中国境内，外国人与外国人的案子中国官吏不愿过问，即放弃了境内的法权。\r\n\r\n那时的英国\r\n\r\n十八世纪末期，工业革命开始，手工业转为机械制造，英国越来越重视海外市场，在亚东区域，英国以印度为根据地，发展商业。中国对通商的限制，阻碍了英国的海外商业发展，由此，英国前后主动与中国进行了两次交涉。\r\n\r\n两次交涉\r\n\r\n第一次交涉：1791年乾隆八十大寿，英国派Macartney到中国向乾隆祝寿。交涉的目的有：1、允许英国派全权大使常驻北京；2、希望中国加开通商口岸；3、希望关税公开、固定；4、希望中国向英国提供一个小岛，供商人居住贮货。然而乾隆将他当藩属的贡使看待，要求其行跪拜礼。然而Macartney希望中英平等，下次中国的使节到英国面见英王的时候也行跪拜礼。这使得乾隆不高兴，中国拒绝了这次交涉的所有要求，交涉彻底失败。\r\n\r\n第二次交涉：经过了法兰西革命和拿破仑战争，英国第二次派使节来华，目的与第一次相同，然而嘉庆给英国使节的待遇远不及乾隆，英使不但外交失败，个人对中国也颇有意见。\r\n\r\n中西的关系很特别，鸦片战争以前，我们不肯给外国平等待遇；之后，他们不肯给我们平等待遇。\r\n','kangxidagege\r\n','FFFFF','2018-03-07 00:00:00',854,'../../statics/picture/1_wireless_com.jpg','ZF',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(7,'2018旗舰大PK！三星和华为你更偏爱谁？','今天早上好心市民王先生（公众号：hxsmwxs）在翻看App Store榜单的时候，发现今天凌晨（25号0：00分）榜单更新后有三款应用刷榜，乍一看是两款游戏，一款应用，但好心市民王先生（公众号：hxsmwxs）在下载之后发现了其中一款的秘密，就是下面这款【战舰世界】\r\n下面我们一步步的分析这款应用\r\n\r\n所有用户点开从名称到截图乍一看就是一款游戏，但从描述中不难发现，他就是一款【直播软件】\r\n\r\n\r\n虽然不知道这款直播平台的具体玩法是什么，但这种方法XXXXX，不做评价！\r\n\r\n为什么苹果的审核越来越严格，用户抱怨App Store市场太乱，纵使iOS 11是最差的系统，但好心市民王先生（公众号：hxsmwxs）想说的是：\r\n\r\n公平竞争的时代已经过去，现在的ASO已经不是以前的ASO了\r\n','比特网','GGGGG','2018-03-06 00:00:00',2347,'../../statics/picture/1_kangxidagege.jpg','ZG',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(8,'马斯克成功发射了互联网卫星，又一项疯狂计划的开端','摩拜ofo均取消月卡优惠\r\n\r\n\r\n\r\n\r\n2月23日,摩拜、ofo的价格战悄然结束，双方都取消了月卡优惠，恢复到了20元/月，此次价格的调整，可能预示着共享单车企业要结束盲目的价格战，回归理性收费。\r\n\r\n\r\n\r\n\r\n2017年7月，摩拜、ofo大战升级，摩拜推出月卡和季卡优惠活动，售价低至1折，其中，月卡2元，季卡5元。2017年8月，ofo也推出了“1元包月”活动，1块钱骑行30天，比摩拜的2元还便宜一半。对于普通用户来说，这个价格几乎相当于免费骑车。此外，双方还相继推出了充返优惠活动，包括摩拜推出的充100送100、ofo推出的充100送100等。\r\n\r\n\r\n\r\n\r\n经历过去年的行业大洗牌，目前共享单车行业格局基本确定，摩拜、ofo现将月卡收费恢复到20元/月的原价，除了表明他们欲结束盲目的价格战之外，也与两家企业的现金流吃紧和融资前景不明朗不无关系。\r\n','36kr\r\n','HHHHH','2018-03-09 00:00:00',532,'../../statics/picture/1_bkmk01mz3w.jpg','ZH',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(9,'康师傅和旺旺们失去的，正是达利和周黑鸭们拥有的','这些年，一家外企想要在中国的政企市场中站稳脚跟，并不是那么容易，强如VMware，也要费尽九牛二虎之力。\r\n\r\n\r\n\r\n\r\n在2016年的时候，VMware就和曙光成立了一家合资公司，并希望以此为跳板，在中国市场发力。但这并不够，想要在中国的大客户市场中占据一席之地，除了满足最基本的政策外，安全问题是首要考虑的因素。\r\n\r\n\r\n\r\n\r\n从这个角度来看，VMware必须找到国内的网络安全供应商来承担“监管方”这一角色，并且不能有外资背景。\r\n\r\n\r\n\r\n\r\n所以，VMware接连与三家中国的网络安全厂商签署了战略合作协议，这三家企业分别是：天融信、山石网科和360企业安全。\r\n\r\n\r\n\r\n\r\n1\r\n\r\n\r\n\r\n\r\n从表面上来看，全球范围内云计算的快速普及、Azure Stack以及容器化趋势，对于VMware这样的传统虚拟化巨头并不算太好的消息，其官方也曾公开承认VMware传统意义上的核心业务vSphere业务正处于长期下滑态势。\r\n\r\n\r\n\r\n\r\n但出人意料的是，从2018财年VMware的财报来看，其表现却出人意料的强势：Q1营收17.4亿美元，增长9%，GAAP净利润为2.32亿美元，增长48%；Q2营收总额为19亿美元，增长12.2%，GAAP净利为3.34亿美元，增长30%；Q3营收19.8亿美元，增长11%，GAAP净利为4.43亿美元，增长43％；预计2018财年总额将达到78.30亿美元，较上年全年增长约10%。\r\n\r\n\r\n\r\n\r\n这些财报数据的背后，显示出了VMware的战略转型取得了不错的成绩。有一点，在过去几年中，VMware在构建云服务领域倾注了大量的资源，其中最大的成就是与AWS达成合作提供混合云服务。该混合云服务使得VMware用户能够在AWS公有云中使用相同的VMware软件堆栈来运行其工作负载。\r\n\r\n\r\n\r\n\r\n这个模式的成功，让VMware想要如法炮制，迅速占领中国这块未来潜力云计算市场，所以VMware想到了要利用和中资背景的网络安全供应商合作这个办法。\r\n','36kr\r\n','IIIII','2018-03-02 00:00:00',145,'../../statics/picture/1_bkmk01mz3w.jpg','ZI',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(10,'美国 GAFA 四大巨头分析（四）：苹果，消费级硬件的主宰','JJJ36氪获悉，印度牛奶生鲜配送商「Doodhwala」获种子轮220万美元融资，本轮资方为Omnivore Partners。据Inc42报道，本轮资金将用于将其服务拓展到更多市场、招聘更多人才并对技术进行升级。此前，Doodhwala于2017年年初从美国投资人Tom Varkey处获得融资。\r\n\r\n位于班加罗尔的Doodhwala成立于2015年，创始人为Aakash Agarwal和Ebrahim Akbari，以牛奶配送切入，后发展成为生鲜配送商。除了牛奶外，公司还提供超过10万种产品，如鸡蛋、烘焙食品、肉类、蔬果、各类杂货，饮料，个人护理用品等，甚至还有宗教用品。\r\nDoodhwala网页版界面\r\n\r\n不过，Doodhwala的配送服务为预订式，配送时间为每天的早上5点至7点。目前，Doodhwala在班加罗尔和浦那两个城市提供服务，称其一个月订单量可达400万。\r\n\r\n\r\n在配送方面，Doodhwala采用兼职员工+与牛奶供应商合作的模式；费用方面，Doodhwala称其已将单次配送费降低至3卢比（约为0.3元人民币），业务以稳定的速度增长，复购率达85%。\r\n\r\n在上一轮融资时，Agarwal表示该公司拥有80％的客户保留率，并预计在2017年底将实现盈利。\r\n\r\n印度的同一赛道中，Doodhwala面临的牛奶配送竞争对手有Milkbasket、DailyNinja、Town Essentials和RainCan，类似的生鲜配送商还有Supr Daily。\r\n\r\n据英国《金融时报》，印度的营养问题较为严重，不少青少年儿童面临营养不良的问题。印度政府于去年12月通过了一项为期三年的全国营养计划，计划投资14亿美元。而另一方面，人们对营养问题也愈加重视。据摩根士丹利估计，未来在线生鲜电商市场将达150亿美元，复合年增长率将达141%。由此可见，未来的印度的生鲜市场潜力不小。\r\n','36kr\r\n','JJJJJ','2018-03-07 00:00:00',421,'../../statics/picture/1_bkmk01mz3w.jpg','ZJ',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(11,'小米和Google搞大事！米粉大呼：有了它，麻麻再也不用担心我迷路了…','NO.1   一个好的通信工程师，就是那种就算只是要穿越单行道，也会看两边再走的人。\r\n\r\nNO.2   不要担心网络有问题，因为如果它一切正常，那你就失业了。\r\n\r\nNO.3   一种新的通信技术一旦开始流行，你要么坐上压路机，要么成为铺路石。\r\n\r\nNO.4   所有的通信工程师都是好导演，所有的网络都是烂演员。\r\n\r\nNO.5   任何通信原理，超过三个月不去看它，当你再度开始时，看起来都会和一开始那么陌生。\r\n\r\nNO.6   做通信就像做爱。一次犯错，可能需要你用剩下的一生来弥补。\r\n\r\nNO.7   工作完成后写个报告，就像是清扫厕所，你虽然不想干，但如果你做了，这绝对会为你和你的客户带来更愉悦的体验。\r\n\r\nNO.8   理论上，理论和实践是没有差异的。但实践中，是有的！\r\n\r\nNO.9   预备，瞄准，开火：这是一个射手的流程。预备，预备，预备，瞄准，瞄准，瞄准：这是一个通信工程师的工作流程。\r\n\r\nNO.10 搞通信是10%的科学，20%天分，加上70%的让天分符合科学。\r\n\r\nNO.11 评估一项网络指标比理解你评估了什么更容易。\r\n\r\nNO.12 网络指标不会说谎，但是制定他们的人会。\r\n\r\nNO.13 培养员工，即使他们有跳槽的风险。什么都不做而留他们在公司，这样的风险更大。\r\n\r\nNO.14 网络善于遵循指令，但不善于理解你的思维。\r\n\r\nNO.15 性能指标最好的网络，就是那些不存在的网络。\r\n\r\nNO.16 机房和教堂非常相似，建成之后我们就开始祈祷。\r\n\r\nNO.17 通信工作永远没有完成的那一天，除非最后一个使用者死了。\r\n\r\nNO.18 一个通信网很像埃及的金字塔，由成千上万的石块堆积而成，有良好的架构，但要靠暴力法则和成千上万的奴隶去完成。 ','比特网','KKKKK','2018-03-05 00:00:00',152,'../../statics/picture/1_kangxidagege.jpg','ZK',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(12,'十大Wifi芯片原厂简述','6亿美元现金，外加265万股新发行的ADS股票，华兴资本担任FA，陌陌拿下了探探100%的股权。在36氪发布独家收购新闻之后，陌陌以一纸公告披露本次收购的细节，也给外界留下了更多悬念。\r\n\r\n陌陌为什么要在这个节点，花自身市值的约十分之一，买下看起来业务重合度极高的探探？收购完成之后，探探是融入陌陌体系，还是获得资源扶持后继续独立发展？陌陌之后是将回归初心重新发力社交，还是将探探打造成另一个类比直播的商业王国？以及最有悬念的，陌陌是如何从探探老股东，同时也是泛娱乐领域竞争对手YY手中抢到探探？\r\n\r\n为了找到这些问题的答案，36氪第一时间对陌陌CEO唐岩进行了独家专访。得到的答案，有一些在我们的意料之中，更多的回答，在我们的意料之外。\r\n\r\n\r\n控股一开始就是目标，YY不是阻力\r\n\r\n36氪：这笔大交易做了多长时间？\r\n\r\n唐岩：一个多月。\r\n\r\n36氪：这是一个紧张的过程吗？我们之前听说还有其他的公司，比如今日头条对探探其实也是有兴趣的。\r\n\r\n唐岩：对，当然是一个紧张的过程。在我们刚开始接触的时候会认为难度会比较大，因为探探的股东结构比较复杂，股东特别多。但是整个进行过程中觉得，整体来说还算顺利。\r\n\r\n36氪：觉得交易会困难一方面因为股东结构复杂，另一方面是不是跟你们的目标有关系？因为你们追求的目标是百分之百，全资收购。\r\n\r\n唐岩：也没有。但是它的股东结构比较复杂，这个有这个意见，那个有那个意见。哪怕主要的目的达成了，在具体的过程中，比如SPA（股权认购协议）文件里面各方面可能都会（有不同的意见），原来我们觉得要做起来是一个比较漫长的过程，但是实际上在短时间里面就完成了。所以这当中既有双方公司团队的合作，也有股东的配合，还有和FA机构的努力都分不开。\r\n\r\n36氪：你的意思是说，其实你们如果控股或者参股你都是可以接受的吗？\r\n\r\n唐岩：控股可能是我们比较主要的目标。\r\n\r\n36氪：YY是上一轮探探的股东，它的存在会不会让这个事情变得稍微难一些，很难搞定的股东是指YY吗？\r\n\r\n唐岩：实际上还好。我说的股东结构复杂，主要还是指的股东多，并不是指某个特定角色的问题。整个过程中间其实是很顺利的，至于为什么顺利，我看到好像外界对这个也有疑问，其实这个问题主要应该在YY那边，你们可以去问问他们的想法。我们在实际的过程当中并没有遭遇到额外的阻力，并没有很多的说服过程。\r\n\r\n36氪：6亿美金的现金，再加260多万ADS股。这个价钱是怎么敲定下来的，为什么你认为探探值这么多钱？\r\n\r\n唐岩：买卖就是双方讨价还价的一个结果，这个肯定不能单方说了算。我们觉得能够接受这个价格，对方也愿意出售，那最终的交易价格就会锁定在这个上面。\r\n\r\n36氪：我们知道探探上一轮的估值是3.2亿美金，相当于在半年的时间里翻了差不多一倍？\r\n\r\n唐岩：也不能说半年，融资的话一般过程都会拉得比较长。他们在谈的时候肯定是公布时倒推半年前，所以一年多的时间这个说法是比较合适的。\r\n\r\n36氪：你们最看中探探的什么东西？\r\n\r\n唐岩：两块，如果你说他们跟YY的业务协同性强的话，那跟我们肯定就是一个更加天然协同性强的东西了。它的用户年龄结构、跟我们的重合度，以及他们对用户隐私的保护度上面，跟我们都有一个非常强的互补性。我只能这么说，我们的用户重合度是不高的，但是我没有办法告诉你确切的数字。\r\n\r\n36氪：探探的女性用户比例比较大是一个你们会考虑的重点吗？\r\n\r\n唐岩：会考虑，但这不是全部的重点。\r\n\r\n36氪：另一块考虑的重点是什么？\r\n\r\n唐岩：我们从几年前开始就更加侧重于场景化的社交领域，点对点的，异性的社交从两三年前这一块就已经不是我们最核心的侧重点了。包括我们从两年前的一些重要的商业变现手段行为来看，我们也会更看重社区氛围这块。所以我们两家公司，我自己感觉互补性非常强。\r\n\r\n36氪：大家可能会觉得探探更像非常早期的陌陌，你的意思是说两家公司的业务方向已经分得很开了，能这么理解吗？\r\n\r\n唐岩：如果你仔细观察两家公司的产品的话，可能我们是在一个大盘子里面，但是各自的侧重点其实是完全不一样的，确实是这样。\r\n\r\n 36氪：收购探探之后，两家公司的业务打算怎么协同？\r\n\r\n唐岩：存在非常多业务的协同点，但是我们还是希望保持它一个独立发展的趋势。我们更多的会在大的战略协同上来提供他们所需要的支持。可能有一些路，比如他们商业化的一些路我们原来已经走过，我们可以给他们一些建议，可以有一些共同探讨的东西。\r\n\r\n36氪：既然你说他们走过的路你们已经走过了，那你们对探探收会员费的业务怎么看？\r\n\r\n唐岩：很稳定的一块业务。通过会员费来商业化，对用户体验的损害其实是非常低的，特别是对于这种陌生人社交的产品而言，而且早做晚做关系不大。\r\n\r\n36氪：我们从一些第三方的数据可以看到，探探从去年到现在从DAU来看可能没有太大的变化，就是从600万到700万，DAU增长没有那么快，作为一个有经验的过来人，你们觉得如果探探这个业务用户要继续增长的……\r\n\r\n唐岩：那肯定会继续增长的，它卖不卖给我们都会增长，毫无疑问。\r\n\r\n36氪：有什么新的办法没有？比如它是继续沿着现在的这条路，还是你们觉得有一些其它方法可以去试一下？\r\n\r\n唐岩：我不明白这个问题的实质是什么，是你们认为它去年一年这个公司没有成长吗？其实更多的还是看探探管理层的意愿，他们在用户增长各方面做得都是相当保守和克制的。而且我不觉得他们的做法是错误的。\r\n\r\n36氪：你说保守和克制是指？\r\n\r\n唐岩：整体来说其实对于社交软件或者社交平台里面，最重要的是生态的问题，不是一个简单的用户数的问题。他们对社交生态的看重是我最欣赏的。所以这家公司如果在管理层的用心经营下，我是相当看好的。我不在乎它短期内一些所谓表面的用户数据或者一些什么样的东西，我对它生态的健康度会更看重，它只要维持着比较好的一个社交生态，这家公司一定会成长的。可能有些时候在外界看起来会稍微慢一点，甚至有些时候可能快一点，我觉得这都不是那么重要。\r\n\r\n 36氪：看一家公司的社交生态好还是不好，您会看重什么指标，拿什么来判断比较好？\r\n\r\n唐岩：主要是spam比例，污染度。\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n探探将独立运营，投资和并购我们不是2018年才开始做\r\n\r\n36氪：探探现在是会员制的收费方式，陌陌入局之后，你们会有一些新的商业化的变现手段吗？\r\n\r\n唐岩：我们可能也会比较保守和克制，我们并没有在这一块有太多急功近利的想法和做法，基本上都没有。\r\n\r\n36氪：很多人说你们可以把探探的用户导量到直播上来变现。\r\n\r\n唐岩：这是一个想当然的事情，但是这个事情会不会做，或者什么时候会去做，主要还是看它给用户到底带来一些什么样的东西，而不是简单的强行追求一个商业变现。我觉得对我们这个收购行为来说，战略意义要更加大的多，而不是在一个短期内能够马上让收入发生一个什么样的变化。做这个我们是做的比较大的价值投资，肯定不是一个短期内的算术的做法。\r\n\r\n两家公司的品牌各方面，都是有一定知名度的。用户如果有一个选择，或者两个都想玩一玩，其实我们以前也没有造成任何的障碍。我们短期未必会对用户做引导，希望它保持一个比较独立的发展。\r\n\r\n36氪：你把这次看得战略意义很重大，主要体现在哪里？\r\n\r\n唐岩：我们公司一直都是立足在社交这个层面的，我们希望在社交层面上有更多符合不同类型的，或者符合不同需求的社交产品提供给大家。其实陌陌和探探在目前的产品形态其实是各有侧重的。他们对于非熟人之间的信息交换为社交目的的人群来说，都提供了比较大的社交价值。\r\n\r\n我们希望我们的公司在社交层面上是有多种类型的产品提供给用户的，收购对于我们来说，不管是对内对外，都是一个非常明确的信号，我们是立足社交为本，然后在泛社交和泛娱乐上能够扮演更重要的角色。\r\n\r\n可能在未来，我们不光会有陌陌、探探这样的产品提供给受众，有可能还会有更多的泛社交的产品提供给我们的目标受众。泛社交这个领域很难会有一个东西是满足所有泛社交需求的。\r\n\r\n36氪：今日头条有抖音、火山、西瓜，未来在陌陌集团的旗下，比如探探是独立的，还会有很多新的独立的产品出来？\r\n\r\n唐岩：可以这么理解。\r\n\r\n 36氪：所以像探探这样的收购，也不会是唯一的一个可能性？\r\n\r\n 唐岩：那当然了。\r\n\r\n 36氪：2018年，对外投资和收购是陌陌的重点工作之一？\r\n\r\n唐岩：其实一直都是，我们不是2018年才开始的。但是很多东西，特别是并购这种事，尤其是稍微大一点的并购，完全是讲天时地利人和的，它不是一个单方面的事情，得有“郎情妾意”。因为公司的股权结构，发展在一个什么样的时期，这些都非常重要。\r\n\r\n36氪：您刚刚提到泛娱乐和泛社交里有很多类型的功能，比如视频群聊，包括陌陌现在在做的一些功能，包括声音、同城等等，在这些里面，哪个会相对最容易跑出来，最容易成为下一个探探？\r\n\r\n唐岩：这个我真的不知道。我要知道的话早就让公司去做了。因为这个说不清楚的，要说产品的设计到底是不是合适，是否满足了一个很刚性的需求，它的颗粒度够不够大，运营团队的能力到底怎么样。有时候我们在创业聊项目的时候也在聊，你说一个事情的时候好像说起来是这么回事儿，但是做起来的时候就不是这么回事了。它必须要很多因素都满足之后，才有可能发展到一个比较好的情况。\r\n\r\n探探这个公司三年的时间发展到现在，其实已经证明这些因素都是吻合的，其他的东西会不会跑出来，我觉得这些都是非常关键的。任何一个条件不满足的话，可能都跑不出来。\r\n\r\n36氪：探探到现在还是一种所谓的图片社交，大家是看一张图，然后来匹配。去年还有一波潮流是视频匹配，你认为视频社交会不会更有效率，或者更代表未来方向？\r\n\r\n唐岩：有可能，但是目前肯定还是有很多的环境欠成熟，或者用户接受度欠成熟的一些因素在制约。这种东西我也不觉得它一定会是一个新的公司促成的，有可能现有产品的更新换代或者怎样，也有可能促成这个事情，不一定。\r\n\r\n36氪：陌陌的股价在2015年和2016年涨得非常快，到2017年年中到高点之后，去年下半年在跌，大概从40多块跌到了20多块，你们的活跃用户量也维持在一个水准上，没有涨得特别快。您自己会觉得这是公司增长到了瓶颈期了吗？   \r\n\r\n唐岩：股票市场这个很难说得清楚的，我们从6块到40多块的时候也没看见怎么着，它不能反映一个公司就发生了一个天翻地覆的变化。外界来看，跟公司内部来看公司，一定会存在一个（差异），也很难说哪个客观，但是它肯定还是有区别的。比如我们涨得非常猛的时候，我们也不觉得这个事情反映了公司内真实的一个情况，下跌的时候也不觉得公司会所谓的遇到了一个什么瓶颈。\r\n\r\n我记得2014年也有一个媒体来采访，那时候我还没上市呢，他第一个问题就是说好像这一年你们没什么动静，快死了？这跟我们内部的感受完全不一样，所以这很难说的。\r\n\r\n你刚才提这个问题，好像外界认为探探这一年怎样怎样，我们完全不这么看，我们觉得它发展其实挺好的。\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n快手、今日头条都不是竞争关系，只看重同质化竞争\r\n\r\n36氪：就陌陌自己的主App，你们接下来会有什么转变吗？\r\n\r\n唐岩：我们其实一直在变。我们对内部的产品研发人员，就是希望大家不要有任何的包袱，不要觉得自己是一个上市公司，好像就不敢做什么，甚至不敢做一些颠覆性的改变，在我这儿都不存在。版本从4.0到8.0每一个前面那个数字的改变，产品的改变不能说革命性和颠覆性，但是至少我们改动的幅度是比较大。\r\n\r\n就方向来说，我们是希望引进更多的社交场景，在这个场景化里面来达成这个社交。比如说像一些用看直播的方式来结成好友关系，来形成群组关系。比如说在玩《狼人杀》的过程里面达成这样的东西，比如说用快聊的方式，就希望引入更多社交的场景来促进陌生人的社交关系的达成，而不是说非常单一的，非常要求高效率化的达成。这两三年我们都是在做这样的一些工作。\r\n\r\n36氪：除了直播，其它场景下的变现能力都是怎么样的？\r\n\r\n唐岩：如果你只是指商业变现的话，我对这个人群的变现是没有丝毫疑问的。2016年前，你哪知道我们会变现这么强呢？\r\n\r\n36氪：你们变现的时候是出现了直播，产品的形态有了一个非常大的变化。\r\n\r\n唐岩：那你也不知道2019年或者2020年会出现什么样的变化，只要这个人群在，变现是不愁的。互联网里面拥有海量的用户，最终因为商业变现没有完成而死掉的公司，我好像是没有见到过。\r\n\r\n36氪：对整体的陌生人社交这件事，您应该是最有发言权的人之一，你觉得这个东西会往哪里走？\r\n\r\n唐岩：如果说它能够消耗大家的空余时间，这是第一个条件；第二个条件，这种消耗的时间并不是纯粹在消费一个已经产生好的内容，而是通过跟陌生人的互动来达成的内容产生，我觉得这个会很有价值。探探也是这样的，我们现在在做的事情也是这样的。\r\n\r\n但是具体是什么我真的说不好，各种可能性都有，这是一个很大、很宽泛的一个市场，而且尤其是在中国这样一个社会环境下，是有非常大的空间的。\r\n\r\n如果我们以后还要进行一些这种并购或者什么行为，我们主要方向都是基于这个来考虑的。\r\n\r\n打个比方，它并不是说我写了一个东西在那，给很多陌生人来读的，这种互动的形式会比较小一点，可能跟我们的战略方向不是很匹配。我们需要的是，同时哪怕是写一个东西，它都是即时的，两个人或者一群人在相互产生的这样一个东西。\r\n\r\n36氪：现在我们发现所有内容类的东西，比如今日头条，他们还挺看重社交的，都在向社交去转，从形态上看有很多东西很像，比如视频、直播、内容、互动，问答，大家的边界越来越模糊，好像存在很多交互以及竞争的可能性。\r\n\r\n唐岩：我一般只看重一些特别同质化的竞争，其他的其实都是有所谓的边界的。跟今日头条我觉得真的没有太大竞争的，可能外界看起来产品形态认为好像都差不多，但是实际上差距非常大。\r\n\r\n不要说我们跟今日头条，我们跟探探之间感受到的竞争都很小，哪怕同质化到这个地步都不大。\r\n\r\n因为它只要不是一个完全同质化的产品，就是产品结构都一模一样的，其实竞争不大的。很多人都问快手跟我们的竞争，很小，不是一个东西来的。可能大范围里面能放到一块，但实际上整个的市场，就有点像银河系和仙女座，我们这两个星系迟早会被统一到一起，会发生星系的碰撞。但是那么多几千亿颗恒星相互是撞不到一块的，空间很大。每一个创业公司就挺像这星系里面的恒星一样，但我们的整个宇宙是极其大的，每个公司都是其中极小的一点，它真正发生碰撞，就是那种特别同质化的竞争，（发生的）可能性其实是只有在一些完全一致的，比如像58、赶集、摩拜和OFO这种是完全同质化竞争的公司之间。\r\n\r\n但是你说在占据用户的时间上，有没有一些相似性，有没有竞争？肯定有。在互联网行业现在这么带光环的一个行业里面，你要这样的竞争都没有，那这个行业也太爽了，不可能。\r\n\r\n','一叶知秋dong','LLLLL','2018-03-08 00:00:00',158,'../../statics/picture/1_dxpqxb.jpg','ZL',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(13,'巴菲特年度致股东信：经济下滑正是赚钱良机，将继续负责投资业务','摩拜ofo均取消月卡优惠\r\n\r\n\r\n\r\n\r\n2月23日,摩拜、ofo的价格战悄然结束，双方都取消了月卡优惠，恢复到了20元/月，此次价格的调整，可能预示着共享单车企业要结束盲目的价格战，回归理性收费。\r\n\r\n\r\n\r\n\r\n2017年7月，摩拜、ofo大战升级，摩拜推出月卡和季卡优惠活动，售价低至1折，其中，月卡2元，季卡5元。2017年8月，ofo也推出了“1元包月”活动，1块钱骑行30天，比摩拜的2元还便宜一半。对于普通用户来说，这个价格几乎相当于免费骑车。此外，双方还相继推出了充返优惠活动，包括摩拜推出的充100送100、ofo推出的充100送100等。\r\n\r\n\r\n\r\n\r\n经历过去年的行业大洗牌，目前共享单车行业格局基本确定，摩拜、ofo现将月卡收费恢复到20元/月的原价，除了表明他们欲结束盲目的价格战之外，也与两家企业的现金流吃紧和融资前景不明朗不无关系。\r\n','36kr\r\n','MMMMM','2018-03-09 00:00:00',326,'../../statics/picture/1_bkmk01mz3w.jpg','ZM',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(14,'要不是爱玩帆船，什么VR游戏他们早就不干了','02月23日，钛博士机器人侦测到 19 起发生在科技和互联网行业的投融资或并购事件，其中 7 起发生在中国境内，12 起发生在海外，总计交易额超过28.7亿人民币。\r\n\r\n\r\n\r\n\r\n\r\n中国境内科技行业投融资总额约18.33亿人民币，单笔最大交易事件发生在生活服务行业，获得融资的企业为万得信息技术股份有限公司，交易金额高达13.68亿人民币。\r\n\r\n\r\n\r\n\r\n据钛媒体Pro分析，从行业分布上看，生活服务占总投融资额的 74.74%，约13.7亿，其次分别是互联网应用与服务（14.84%，约2.72亿）、医疗健康（8.97%，约1.64亿）、游戏（0.82%，约1500万）、广告营销（0.52%，约960万）、交通出行（0.11%，约200万）。\r\n\r\n\r\n\r\n\r\n海外科技行业的投融资总额约1.53亿美元，单笔最大交易事件发生在金融行业，获得融资的企业为Wealthsimple，交易金额高达5100万美元。\r\n\r\n\r\n\r\n\r\n从领域分布上看，金融占总投融资额的47.61%，约7300万美元，其次分别是生活服务（46.30%，约7100万美元）、互联网应用与服务（37.19%，约5702.4万美元）、智能硬件（19.56%，约3000万美元）、广告营销（1.63%，约250万美元）、旅游（0.53%，约81.7万美元）。\r\n\r\n\r\n\r\n\r\n据钛媒体Pro分析，从地区分布上看，加拿大是投融资交易最多的国家，有 2 起，总额约5300万美元，第二第三名分别是爱尔兰（1 起，约3000万美元）和巴西（1 起，约2200万美元）。\r\n','36kr\r\n','NNNNN','2018-03-07 00:00:00',865,'../../statics/picture/1_bkmk01mz3w.jpg','ZN',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(15,'中国有13亿人，人民每天需要获得566亿-3206亿人民币...','这些年，一家外企想要在中国的政企市场中站稳脚跟，并不是那么容易，强如VMware，也要费尽九牛二虎之力。\r\n\r\n\r\n\r\n\r\n在2016年的时候，VMware就和曙光成立了一家合资公司，并希望以此为跳板，在中国市场发力。但这并不够，想要在中国的大客户市场中占据一席之地，除了满足最基本的政策外，安全问题是首要考虑的因素。\r\n\r\n\r\n\r\n\r\n从这个角度来看，VMware必须找到国内的网络安全供应商来承担“监管方”这一角色，并且不能有外资背景。\r\n\r\n\r\n\r\n\r\n所以，VMware接连与三家中国的网络安全厂商签署了战略合作协议，这三家企业分别是：天融信、山石网科和360企业安全。\r\n\r\n\r\n\r\n\r\n1\r\n\r\n\r\n\r\n\r\n从表面上来看，全球范围内云计算的快速普及、Azure Stack以及容器化趋势，对于VMware这样的传统虚拟化巨头并不算太好的消息，其官方也曾公开承认VMware传统意义上的核心业务vSphere业务正处于长期下滑态势。\r\n\r\n\r\n\r\n\r\n但出人意料的是，从2018财年VMware的财报来看，其表现却出人意料的强势：Q1营收17.4亿美元，增长9%，GAAP净利润为2.32亿美元，增长48%；Q2营收总额为19亿美元，增长12.2%，GAAP净利为3.34亿美元，增长30%；Q3营收19.8亿美元，增长11%，GAAP净利为4.43亿美元，增长43％；预计2018财年总额将达到78.30亿美元，较上年全年增长约10%。\r\n\r\n\r\n\r\n\r\n这些财报数据的背后，显示出了VMware的战略转型取得了不错的成绩。有一点，在过去几年中，VMware在构建云服务领域倾注了大量的资源，其中最大的成就是与AWS达成合作提供混合云服务。该混合云服务使得VMware用户能够在AWS公有云中使用相同的VMware软件堆栈来运行其工作负载。\r\n\r\n\r\n\r\n\r\n这个模式的成功，让VMware想要如法炮制，迅速占领中国这块未来潜力云计算市场，所以VMware想到了要利用和中资背景的网络安全供应商合作这个办法。\r\n','fkzxf','OOOOO','2018-03-12 00:00:00',1652,'../../statics/picture/1_fkzxf.jpg','ZO',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL),(16,'壹佰大咖说丨想做互联网金融平台产品经理，你懂风控、通道吗？','JJJ36氪获悉，印度牛奶生鲜配送商「Doodhwala」获种子轮220万美元融资，本轮资方为Omnivore Partners。据Inc42报道，本轮资金将用于将其服务拓展到更多市场、招聘更多人才并对技术进行升级。此前，Doodhwala于2017年年初从美国投资人Tom Varkey处获得融资。\r\n\r\n位于班加罗尔的Doodhwala成立于2015年，创始人为Aakash Agarwal和Ebrahim Akbari，以牛奶配送切入，后发展成为生鲜配送商。除了牛奶外，公司还提供超过10万种产品，如鸡蛋、烘焙食品、肉类、蔬果、各类杂货，饮料，个人护理用品等，甚至还有宗教用品。\r\nDoodhwala网页版界面\r\n\r\n不过，Doodhwala的配送服务为预订式，配送时间为每天的早上5点至7点。目前，Doodhwala在班加罗尔和浦那两个城市提供服务，称其一个月订单量可达400万。\r\n\r\n\r\n在配送方面，Doodhwala采用兼职员工+与牛奶供应商合作的模式；费用方面，Doodhwala称其已将单次配送费降低至3卢比（约为0.3元人民币），业务以稳定的速度增长，复购率达85%。\r\n\r\n在上一轮融资时，Agarwal表示该公司拥有80％的客户保留率，并预计在2017年底将实现盈利。\r\n\r\n印度的同一赛道中，Doodhwala面临的牛奶配送竞争对手有Milkbasket、DailyNinja、Town Essentials和RainCan，类似的生鲜配送商还有Supr Daily。\r\n\r\n据英国《金融时报》，印度的营养问题较为严重，不少青少年儿童面临营养不良的问题。印度政府于去年12月通过了一项为期三年的全国营养计划，计划投资14亿美元。而另一方面，人们对营养问题也愈加重视。据摩根士丹利估计，未来在线生鲜电商市场将达150亿美元，复合年增长率将达141%。由此可见，未来的印度的生鲜市场潜力不小。\r\n','周兰君','PPPPP','2018-03-15 00:00:00',548,'../../statics/picture/1_arpospf.jpg','ZP',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);

/*Table structure for table `iteyediscussiongroup` */

DROP TABLE IF EXISTS `iteyediscussiongroup`;

CREATE TABLE `iteyediscussiongroup` (
  `gid` int(20) NOT NULL AUTO_INCREMENT,
  `gname` text COMMENT '组名',
  `gnum` int(11) DEFAULT NULL COMMENT '组人数',
  `gtopic` text COMMENT '讨论的话题',
  `gcreateTime` date DEFAULT NULL COMMENT '创建时间',
  `nview` int(11) DEFAULT NULL COMMENT '浏览量',
  `gRecoveryTime` date DEFAULT NULL COMMENT '回复时间',
  PRIMARY KEY (`gid`)
) ENGINE=InnoDB AUTO_INCREMENT=13 DEFAULT CHARSET=utf8;

/*Data for the table `iteyediscussiongroup` */

insert  into `iteyediscussiongroup`(`gid`,`gname`,`gnum`,`gtopic`,`gcreateTime`,`nview`,`gRecoveryTime`) values (1,'灌水乐园',25,'学习Java开发中的关键技术 ','2018-03-15',23,'2018-03-15'),(2,'JBPM @net',112,'Hystrix浅入浅出：（一）背景与功能初探 ','2018-03-14',555,'2018-03-14'),(3,'solr交流圈',254,'Vue-rap 构建基于 Vue 的流应用 ','2018-03-13',962,'2018-03-13'),(4,'Activiti',652,'技术架构演进过程中的思考点 ','2018-03-12',132,'2018-03-12'),(5,'站务讨论',157,'Ruby短信验证码接口调用文档','2018-03-11',345,'2018-03-11'),(6,'\r\n\r\nspringMVC',754,'pycharm将本地代码上传到码云 ','2018-03-10',12,'2018-03-10'),(7,'CMMI与敏捷',458,'Spring事务的传播特性和隔离级别','2018-03-09',44,'2018-03-09'),(8,'lucene爱好者',254,'\r\n为什么使用IP代理 \r\n','2018-02-10',233,'2018-03-01'),(9,'Scala圈子',157,'\r\n基于Spring Boot 2.0 后台的页面开发原型交流 \r\n','2018-02-03',23,'2018-03-02'),(10,'云计算学习',566,'单例模式 ','2018-02-02',154,'2018-03-01'),(11,'初学者',982,'java基础 ','2018-02-10',344,'2018-03-03'),(12,'系统架构与架构应用',524,'Java 8 简明教程 ','2018-02-01',232,'2018-03-01');

/*Table structure for table `iteyeinformation` */

DROP TABLE IF EXISTS `iteyeinformation`;

CREATE TABLE `iteyeinformation` (
  `iid` int(20) NOT NULL AUTO_INCREMENT,
  `ititle` text COMMENT '资讯标题',
  `iconten` text COMMENT '资讯内容',
  `iauthor` varchar(255) DEFAULT NULL COMMENT '资讯作者',
  `icreateTime` date DEFAULT NULL COMMENT '创建时间',
  PRIMARY KEY (`iid`)
) ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=utf8;

/*Data for the table `iteyeinformation` */

insert  into `iteyeinformation`(`iid`,`ititle`,`iconten`,`iauthor`,`icreateTime`) values (1,'Java 程序员开发常用的工具','作为一名Java程序开发人员,如何选择一款适合自己的集成开发环境，如果选择得当，那么就能够使得开发工作事半功倍；否则事倍而功半。','爱开发V','2018-03-15'),(2,'你真的理解了MVC, MVP, MVVM吗？ ','前言： 准备写这篇文章的时候 ， 我自认为对MVC已经有深刻理解了，可是画图的时候发现，理解还是有漏洞，于是又阅读，思考，整理，加深了理解， 写了这篇文章， 估计还有漏洞，欢迎讨论。\r\n 这再一次说明了写作的好处： 很多时候自以为理解了，实际上脑海中有很多想当然的假设，写作会把这些假设给暴露出来。 \r\n大概是二三十年前， 人类逐渐从命令行界面时代走出来，进化到了GUI时代。 ','代立冬','2018-03-14'),(3,'如何在浏览器上跑深度学习模型？并且一行','2017 年 8 月，华盛顿大学的陈天奇团队发布了 TVM，和 NNVM 一起组成深度学习到各种硬件的完整优化工具链，支持手机、CUDA、OpenCL、Metal、JavaScript 以及其它各种后端，而且用户可以针对这些目标平台用 Python 来进行调优。\r\n \r\n \r\n \r\n那么到底什么是 TVM 呢？\r\n \r\n \r\n \r\n陈天奇在论文中解释到，TVM 其实是一个端到端优化堆栈，可以降低和调整深度学习工作负载，以适应多种硬件后端。TVM 的设计目的是分离算法描述、调度和硬件接口。\r\n \r\n \r\n \r\n此外，TVM 具备两个优化层：计算图优化层；具备新型调度基元的张量优化层。通过结合这两种优化层，TVM 从大部分深度学习框架中获取模型描述，执行高层级和低层级优化，生成特定硬件的后端优化代码，如树莓派、GPU 和基于 FPGA 的专用加速器。\r\n \r\n \r\n \r\n同一小组的刘洪亮在微博上解释到：“TVM 可以把模型部署到不同硬件，比如群众常问的能不能用 AMD 的 GPU，用 FPGA 怎么搞，TVM 提供这个中间层有效解决这个问题”。\r\n \r\n \r\n \r\n总的来说，除了比较明显的多硬件支持，更重要的是 TVM 支持相对方便的自动调优和轻量级部署。\r\n','瞬息之间_','2018-03-13'),(4,'自己手写一个 SpringMVC 框架 ','前端框架很多,但没有一个框架称霸,后端框架现在Spring已经完成大一统.所以学习Spring是Java程序员的必修课. \r\nSpring 框架对于 Java 后端程序员来说再熟悉不过了，以前只知道它用的反射实现的，但了解之后才知道有很多巧妙的设计在里面。如果不看 Spring 的源码，你将会失去一次和大师学习的机会：它的代码规范，设计思想很值得学习。我们程序员大部分人都是野路子，不懂什么叫代码规范。写了一个月的代码，最后还得其他老司机花3天时间重构，相信大部分老司机都很头疼看新手的代码。\r\n 废话不多说，我们进入今天的正题，在Web应用程序设计中，MVC模式已经被广泛使用。SpringMVC以DispatcherServlet为核心，负责协调和组织不同组件以完成请求处理并返回响应的工作，实现了MVC模式。想要实现自己的SpringMVC框架，需要从以下几点入手：\r\n 一、了解 SpringMVC 运行流程及九大组件 \r\n二、自己实现 SpringMVC 的功能分析 \r\n三、手写 SpringMVC 框架 \r\n','老胡说科技','2018-03-12'),(5,'\r\n16个富有创意的HTML5 Canvas动画特效集合\r\n','HTML5 Canvas是一个神奇的网页技术，我们在Canvas画布上可以做任何有趣的事情。今天要分享的这款瀑布动画就是利用了HTML5 Canvas的相关特性实现的。记得我们在很早以前给大家介绍过一个超逼真的HTML5瀑布动画，也是在Canvas上完成的，非常酷。今天的这个瀑布更加美妙，因为它模拟了整个瀑布落入湖面的美妙景象，但是从逼真度上来说，还是稍微有待改进，不过个人觉得已经非常不错了。\r\n \r\n \r\n','Linux知识积累','2018-03-11'),(6,'JavaScript反调试技巧 ','HTML5技术正在不断的发展和更新，越来越多的开发者也正在加入HTML5阵营，甚至在移动开发上HTML5的地位也是越来越重要了。HTML5中的大部分动画都是通过Canvas实现，因为Canvas就像一块画布，我们可以通过调用脚本在Canvas上绘制任意形状，甚至是制作动画。本文就是收集了很多非常富有创意的一些canvas动画特效例子，这些例子都非常适合大家学习。','周兰君','2018-03-06'),(7,'TIOBE 3 月排行榜：Ruby 重回前十，Kotlin 突围 ','TIOBE 刚刚发布了 3 月编程语言排行榜。 Ruby 曾获得 2006 年 TIOBE “年度编程语言” ，并在 2008 年达到了热度巅峰，但之后就被新语言抢去了光芒，人气大幅下滑。但现在似乎正在重新受到关注，排名连续几个月上升，本月位居第 9 名。\r\n \r\nJulia 和 Kotlin ，在本月突围进入了前 40 名，而 Rust 和 Groovy ，则被挤出了前 50 。 \r\n\r\n前 20 名中，涨幅最高的编程语言为 C ，之后分别是 SQL、Python、C++ 、Javascript 和 PHP 。 \r\n\r\n需特别说明的是，SQL 在上个月被重新添加到了 TIOBE 排行榜中，由于之前没有对比参照数据，所以会给人突然暴涨的错觉。 ','瞬息之间_','2018-02-28'),(8,'如何用 Python 从 0 开始创建一个区块链？ ','在数字货币盛行的档口，比特币，这币那币到底值不值得信赖呢？也许你像很多人一样感到新奇，想接近它，但只因背后的区块链技术，阻断了向新领域尝试的步伐。不过，对于程序员来说，想真正搞懂比特币，搞懂区块链，可不是难题，因为他们能边玩边学，通过一行行Pyhton代码，就能真正理解数字货币的底层秘密。能用这么有逼格的方式来学习区块链的，也只有程序员了。\r\n \r\n准备工作 \r\n\r\n本文要求读者对Python有基本的理解，能读写基本的Python，并且需要对HTTP请求有基本的了解。 \r\n\r\n我们知道区块链是由区块的记录构成的不可变、有序的链结构，记录可以是交易、文件或任何你想要的数据，重要的是它们是通过哈希值（hashes）链接起来的。 \r\n','游骑兵HM','2018-03-18'),(9,'3 月全球数据库排名：PostgreSQL 再迎暴涨 ','DB-Engines 发布了 2018 年 3 月份的数据库排名，排名前三的依然是 Oracle、MySQL 和 Microsoft SQL Server 。 \r\n\r\n前 20 名的数据库中，本月排名出现上升的只有 MariaDB ，从上个月的第 17 名上升至第 15 名。SAP Adaptive Server 和 HBase 则分别从第 15 名和第 16 名降至第 16 名和第 17 名。 ','周兰君','2018-03-09'),(10,'Hybris平台Web层现状','众所周知，Hybris平台是一套成熟的电商解决方案，当然也包括Web层的定制化。由于Hybris平台项目至今已经经历过许多版本，对电商的核心流程进行了不同程度上的重组与优化。对于Web层，相对于核心流程来说，升级的速度和频率则显得稍微缓慢。慢慢的我们会发现，在当前前端技术突飞猛进的发展趋势下，Hybris平台Web层的技术体系会变的相对陈旧，比如：缺少了动静分离。因此，在这个技术体系下进行Web层的二次研发，往往还面临着前后端耦合依赖的局面，导致项目进度缓慢。','硅谷密探','2018-03-05'),(11,'iOS微信内存监控 ','FOOM（Foreground Out Of Memory），是指App在前台因消耗内存过多引起系统强杀。对用户而言，表现跟crash一样。Facebook早在2015年8月提出FOOM检测办法，大致原理是排除各种情况后，剩余的情况是FOOM，具体链接：https://code.facebook.com/posts/1146930688654547/reducing-fooms-in-the-facebook-ios-app/。\r\n \r\n微信自15年年底上线FOOM上报，从最初数据来看，每天FOOM次数与登录用户数比例接近3%，同期crash率1%不到。而16年年初某东老大反馈微信频繁闪退，在艰难拉取2G多日志后，才发现kv上报频繁打log引起FOOM。接着16年8月不少外部用户反馈微信启动不久后闪退，分析大量日志还是不能找到FOOM原因。微信急需一个有效的内存监控工具来发现问题。 ','kangxidagege','2018-03-13'),(12,'3 月编程语言排行榜','TIOBE 刚刚发布了 3 月编程语言排行榜。 Ruby 曾获得 2006 年 TIOBE “年度编程语言” ，并在 2008 年达到了热度巅峰，但之后就被新语言抢去了光芒，人气大幅下滑。但现在似乎正在重新受到关注，排名连续几个月上升，本月位居第 9 名。\r\n \r\nJulia 和 Kotlin ，在本月突围进入了前 40 名，而 Rust 和 Groovy ，则被挤出了前 50 。 \r\n\r\n前 20 名中，涨幅最高的编程语言为 C ，之后分别是 SQL、Python、C++ 、Javascript 和 PHP 。 \r\n\r\n需特别说明的是，SQL 在上个月被重新添加到了 TIOBE 排行榜中，由于之前没有对比参照数据，所以会给人突然暴涨的错觉。 ','大数网','2018-03-04'),(13,'Hybris平台Web层架构的不足','Hybris平台Web层基于传统的服务端MVC（Model-View-Controller）设计模式，传统的服务端MVC架构在为我们提供优势的同时也会带来以下不足：\r\n 1.对于简单的页面，严格遵循MVC，会增加结构的复杂性，并可能产生过多的更新操作，降低运行效率\r\n 2.视图与控制器之间过于紧密的连接。视图没有控制器的存在，其应用是很有限的，反之亦然，这样就妨碍了他们的独立重用。\r\n 3.View的渲染通过服务端完成，最终呈现给浏览器的是带有Model的视图页面，性能无法得到很好的优化\r\n 4.控制器会变得复杂，很多人会在Controller（Spring），Action（Struts）中写业务代码已经变得很常见，所有的操作都在控制器中，导致业务与控制器相耦合\r\n 5.对象间接地通过控制器耦合在一起，一个对象在控制器中查询获得，然后复制给另外一个对象，这两个对象就耦合在一起\r\n 6.View通过服务端完成后，视图页面包含CSS, JS等资源，这些资源需要重新请求（虽然可能已经进行了缓存）\r\n','爱开发V','2018-03-13'),(14,'Hybris平台Web架构模式演变：前后端分离 ','前后端分离”显然已不是什么新鲜的话题，表面上看是一场架构模式的变革，但实质上是为了解决以往传统的服务端MVC设计模式的一些诟病和痛点。前后端分离带来的全新的前后端协作方式能够让专业的人做专业的事，无论前端后端都能更专注在自己擅长的方面。那么如何基于一个成熟的Hybris平台进行前后端分离？接下来，我们将会逐一剖析这个演变过程。','程序视界','2018-03-08'),(15,'PostgreSQL 再迎暴涨 ','DB-Engines 发布了 2018 年 3 月份的数据库排名，排名前三的依然是 Oracle、MySQL 和 Microsoft SQL Server 。 \r\n\r\n前 20 名的数据库中，本月排名出现上升的只有 MariaDB ，从上个月的第 17 名上升至第 15 名。SAP Adaptive Server 和 HBase 则分别从第 15 名和第 16 名降至第 16 名和第 17 名。\r\n \r\nPostgreSQL 继续保持上升趋势，本月迎来榜单中最高的涨幅，上涨 10.97 的百分点，远高于其他数据库。 \r\n','老胡说科技','2018-03-03');

/*Table structure for table `latestproject` */

DROP TABLE IF EXISTS `latestproject`;

CREATE TABLE `latestproject` (
  `lid` int(11) NOT NULL AUTO_INCREMENT,
  `ltitle` varchar(255) DEFAULT NULL COMMENT '项目标题',
  `lreleaseTime` datetime DEFAULT NULL COMMENT '发布时间',
  `lprogramBudget` varchar(50) DEFAULT NULL COMMENT '项目预算',
  `ldevelopment` varchar(50) DEFAULT NULL COMMENT '开发周期',
  `lprojectClassification` varchar(255) DEFAULT NULL COMMENT '项目分类',
  `lcompetitive` int(11) DEFAULT NULL COMMENT '竞标人数',
  `ltab` varchar(255) DEFAULT NULL COMMENT '项目标签',
  `llogo` varchar(255) DEFAULT NULL COMMENT '作者头像',
  `lauthor` varchar(255) DEFAULT NULL COMMENT '发布作者',
  `lphone` varchar(18) DEFAULT NULL COMMENT '联系方式',
  `lidentity` varchar(255) DEFAULT NULL COMMENT '身份',
  `liaddress` varchar(255) DEFAULT NULL COMMENT '地址',
  `lstatic` varchar(50) DEFAULT NULL COMMENT '在线状态',
  `lprojectDesc` text COMMENT '项目描述',
  `lterm` varchar(50) DEFAULT NULL COMMENT '项目有效期',
  PRIMARY KEY (`lid`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8;

/*Data for the table `latestproject` */

insert  into `latestproject`(`lid`,`ltitle`,`lreleaseTime`,`lprogramBudget`,`ldevelopment`,`lprojectClassification`,`lcompetitive`,`ltab`,`llogo`,`lauthor`,`lphone`,`lidentity`,`liaddress`,`lstatic`,`lprojectDesc`,`lterm`) values (1,'无效手机号码清楚','2018-03-05 00:00:00','￥10,000-￥20,000',NULL,NULL,12,NULL,'../../statics/cstoImages/33.png',NULL,NULL,NULL,NULL,NULL,NULL,'19天5小时'),(2,'基于百度人脸识别的web程序','2018-02-17 00:00:00','￥5,000-￥10,000',NULL,NULL,31,NULL,'../../statics/cstoImages/35.png',NULL,NULL,NULL,NULL,NULL,NULL,'3天8小时'),(3,'网站后台开发','2018-02-17 00:00:00','￥5,000-￥10,000',NULL,NULL,51,'PHP SQLserver','../../statics/cstoImages/10.png',NULL,NULL,NULL,NULL,NULL,NULL,'3天8小时'),(4,'利用python提取word特定信息并保存入excel','2018-02-17 00:00:00','￥3,000-￥5,000',NULL,NULL,58,NULL,'../../statics/cstoImages/21.png',NULL,NULL,NULL,NULL,NULL,NULL,'3天8小时'),(5,'手游项目全栈开发','2018-02-17 00:00:00','￥30,000-￥50,000',NULL,NULL,9,NULL,'../../statics/cstoImages/7.png',NULL,NULL,NULL,NULL,NULL,NULL,'3天7小时');

/*Table structure for table `mycenter` */

DROP TABLE IF EXISTS `mycenter`;

CREATE TABLE `mycenter` (
  `userId` int(20) NOT NULL,
  `userName` varchar(20) DEFAULT NULL COMMENT '用户名',
  `picture` varchar(255) DEFAULT NULL COMMENT '头像',
  `attention` int(11) DEFAULT NULL COMMENT '关注',
  `fans` int(20) DEFAULT NULL COMMENT '粉丝',
  `industry` varchar(20) DEFAULT NULL COMMENT '行业',
  `job` varchar(30) DEFAULT NULL COMMENT '职位',
  `sex` varchar(3) DEFAULT NULL COMMENT '性别',
  `birthday` varchar(20) DEFAULT NULL COMMENT '生日',
  `address` varchar(50) DEFAULT NULL COMMENT '地址',
  PRIMARY KEY (`userId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `mycenter` */

insert  into `mycenter`(`userId`,`userName`,`picture`,`attention`,`fans`,`industry`,`job`,`sex`,`birthday`,`address`) values (1,'admin',NULL,10,12,'IT','java工程师','男',NULL,'中国'),(2,'admin1',NULL,20,23,'IT','初级Java工程师','男',NULL,'中国'),(3,'admin2',NULL,33,21,'IT','java','女',NULL,'中国');

/*Table structure for table `newstitle` */

DROP TABLE IF EXISTS `newstitle`;

CREATE TABLE `newstitle` (
  `nid` int(20) NOT NULL AUTO_INCREMENT,
  `ntitle` text COMMENT '新闻标题',
  `nconten` text COMMENT '新闻内容',
  `nauthor` varchar(255) DEFAULT NULL COMMENT '新闻作者',
  `ntab` varchar(255) DEFAULT NULL COMMENT '标签',
  `ncreateTime` datetime DEFAULT NULL COMMENT '创建时间',
  `nreads` int(24) DEFAULT NULL COMMENT '阅读量',
  `nimg` varchar(255) DEFAULT NULL COMMENT '图片地址',
  `narticle` varchar(50) DEFAULT NULL COMMENT '文章来源',
  `nfollower` int(20) DEFAULT NULL COMMENT '粉丝',
  `nlike` int(20) DEFAULT NULL COMMENT '喜欢',
  `ndiscuss` int(20) DEFAULT NULL COMMENT '评论',
  `nthumb` int(20) DEFAULT NULL COMMENT '点赞',
  `ngrade` varchar(50) DEFAULT NULL COMMENT '等级',
  `nview` int(20) DEFAULT NULL COMMENT '访问量',
  `nintegration` int(20) DEFAULT NULL COMMENT '积分',
  `nranking` int(30) DEFAULT NULL COMMENT '排名',
  `npicture` varchar(255) DEFAULT NULL COMMENT '广告图片',
  PRIMARY KEY (`nid`)
) ENGINE=InnoDB AUTO_INCREMENT=25 DEFAULT CHARSET=utf8;

/*Data for the table `newstitle` */

insert  into `newstitle`(`nid`,`ntitle`,`nconten`,`nauthor`,`ntab`,`ncreateTime`,`nreads`,`nimg`,`narticle`,`nfollower`,`nlike`,`ndiscuss`,`nthumb`,`ngrade`,`nview`,`nintegration`,`nranking`,`npicture`) values (1,'redis超强超详细的入门教程','\r\n\r\nredis超强超详细的入门教程\r\n\r\n\r\n\r\n\r\nWrite here... \r\n\r\n\r\n--------------------------------------------------------------------------------\r\n\r\n\r\n     Copyright ©2017 . All Rights Reserved. \r\n\r\nhttp://www.cnblogs.com/wt645631686/p/6868845.html \r\n\r\n  PHP结合Redis来限制用户或者IP某个时间段内访问的次数\r\nhttp://www.jb51.net/article/100050.htm \r\n\r\n      php结合redis实现高并发下的抢购、秒杀功能的实例\r\nhttp://blog.csdn.net/u011250882/article/details/48580995 \r\n\r\n    redis实现浏览历史\r\nhttp://www.cnblogs.com/aksir/p/6781250.html \r\n\r\n   redis实现购物车\r\nhttp://www.jb51.net/article/109695.htm \r\n\r\n    php中Redis的应用--消息传递\r\nhttp://blog.csdn.net/u011250882/article/details/48632379 \r\n\r\n   redis实战之使用redis实现排行榜\r\nhttp://www.php.cn/php-weizijiaocheng-354070.html \r\n\r\n     Redis常见7种使用场景(PHP实战)]\r\nhttp://www.jb51.net/article/84803.htm \r\n\r\n\r\n\r\n \r\n\r\nredis面试总结\r\n\r\nhttp://www.cnblogs.com/jiahaoJAVA/p/6244278.html\r\n\r\n和memcache的区别\r\n\r\n\r\nü Redis不仅仅支持简单的key/value类型的数据，同时还提供list，set，sorted set，hash等数据结构的存储。\r\n\r\nü Redis支持master-slave(主—从)模式应用。\r\n\r\nü Redis支持数据的持久化，可以将内存中的数据保持在磁盘中，重启的时候可以再次加载进行使用。\r\n\r\nü Redis单个value的最大限制是1GB， memcached只能保存1MB的数据\r\n\r\n 项目中应用Redis+Php的场景 \r\n【本教程目录】\r\n\r\n1.redis是什么\r\n2.redis的作者何许人也\r\n3.谁在使用redis\r\n4.学会安装redis\r\n5.学会启动redis\r\n6.使用redis客户端\r\n7.redis数据结构 – 简介\r\n8.redis数据结构 – strings\r\n9.redis数据结构 – lists\r\n10.redis数据结构 – 集合\r\n11.redis数据结构 – 有序集合\r\n12.redis数据结构 – 哈希\r\n13.聊聊redis持久化 – 两种方式\r\n14.聊聊redis持久化 – RDB\r\n15.聊聊redis持久化 – AOF\r\n16.聊聊redis持久化 – AOF重写\r\n17.聊聊redis持久化 – 如何选择RDB和AOF\r\n18.聊聊主从 – 用法\r\n19.聊聊主从 – 同步原理\r\n20.聊聊redis的事务处理\r\n21.教你看懂redis配置 – 简介\r\n22.教你看懂redis配置 -通用\r\n23.教你看懂redis配置 – 快照\r\n24.教你看懂redis配置 – 复制\r\n25.教你看懂redis配置 – 安全\r\n26.教你看懂redis配置 -限制\r\n27.教你看懂redis配置 – 追加模式\r\n28.教你看懂redis配置 – LUA脚本\r\n29.教你看懂redis配置 – 慢日志\r\n30.教你看懂redis配置 – 事件通知\r\n31.教你看懂redis配置 – 高级配置\r\n\r\n【redis是什么】\r\n \r\nredis是一个开源的、使用C语言编写的、支持网络交互的、可基于内存也可持久化的Key-Value数据库。\r\n\r\nredis的官网地址，非常好记，是redis.io。（特意查了一下，域名后缀io属于国家域名，是british Indian Ocean territory，即英属印度洋领地）\r\n\r\n目前，Vmware在资助着redis项目的开发和维护。\r\n\r\nredis是一个key-value存储系统。和Memcached类似，它支持存储的value类型相对更多，包括string(字符串)、list(链表)、set(集合)和zset(有序集合)。这些数据类型都支持push/pop、add/remove及取交集并集和差集及更丰富的操作，而且这些操作都是原子性的。在此基础上，redis支持各种不同方式的排序。与memcached一样，为了保证效率，数据都是缓存在内存中。区别的是redis会周期性的把更新的数据写入磁盘或者把修改操作写入追加的记录文件，并且在此基础上实现了master-slave(主从)同步。\r\n\r\n【redis的作者何许人也】\r\n\r\n开门见山，先看照片：\r\n\r\n是不是出乎了你的意料，嗯，高手总会有些地方与众不同的。\r\n\r\n这位便是redis的作者，他叫Salvatore Sanfilippo，来自意大利的西西里岛，现在居住在卡塔尼亚。目前供职于Pivotal公司。\r\n\r\n他使用的网名是antirez，如果你有兴趣，可以去他的博客逛逛，地址是antirez.com，当然也可以去follow他的github，地址是http://github.com/antirez。\r\n\r\n【谁在使用redis】\r\n\r\nBlizzard、digg、stackoverflow、github、flickr …\r\n\r\n【学会安装redis】\r\n\r\n从redis.io下载最新版redis-X.Y.Z.tar.gz后解压，然后进入redis-X.Y.Z文件夹后直接make即可，安装非常简单。\r\n\r\nmake成功后会在src文件夹下产生一些二进制可执行文件，包括redis-server、redis-cli等等：\r\n复制代码 代码如下:\r\n\r\n$ find . -type f -executable\r\n./redis-benchmark //用于进行redis性能测试的工具\r\n./redis-check-dump //用于修复出问题的dump.rdb文件\r\n./redis-cli //redis的客户端\r\n./redis-server //redis的服务端\r\n./redis-check-aof //用于修复出问题的AOF文件\r\n./redis-sentinel //用于集群管理\r\n\r\n【学会启动redis】\r\n\r\n启动redis非常简单，直接./redis-server就可以启动服务端了，还可以用下面的方法指定要加载的配置文件：\r\n复制代码 代码如下:\r\n\r\n./redis-server ../redis.conf\r\n\r\n默认情况下，redis-server会以非daemon的方式来运行，且默认服务端口为6379。\r\n\r\n有关作者为什么选择6379作为默认端口，还有一段有趣的典故，英语好的同学可以看看作者这篇博文中的解释。\r\n\r\n【使用redis客户端】\r\n\r\n我们直接看一个例子：\r\n复制代码 代码如下:\r\n\r\n//这样来启动redis客户端了\r\n$ ./redis-cli\r\n//用set指令来设置key、value\r\n127.0.0.1:6379> set name \"roc\"\r\nOK\r\n//来获取name的值\r\n127.0.0.1:6379> get name\r\n\"roc\"\r\n//通过客户端来关闭redis服务端\r\n127.0.0.1:6379> shutdown\r\n127.0.0.1:6379>\r\n\r\n【redis数据结构 – 简介】\r\n\r\nredis是一种高级的key:value存储系统，其中value支持五种数据类型：\r\n\r\n1.字符串（strings）\r\n2.字符串列表（lists）\r\n3.字符串集合（sets）\r\n4.有序字符串集合（sorted sets）\r\n5.哈希（hashes）\r\n\r\n而关于key，有几个点要提醒大家：\r\n\r\n1.key不要太长，尽量不要超过1024字节，这不仅消耗内存，而且会降低查找的效率；\r\n2.key也不要太短，太短的话，key的可读性会降低；\r\n3.在一个项目中，key最好使用统一的命名模式，例如user:10000:passwd。\r\n\r\n【redis数据结构 – strings】\r\n\r\n有人说，如果只使用redis中的字符串类型，且不使用redis的持久化功能，那么，redis就和memcache非常非常的像了。这说明strings类型是一个很基础的数据类型，也是任何存储系统都必备的数据类型。\r\n\r\n我们来看一个最简单的例子：\r\n复制代码 代码如下:\r\n\r\nset mystr \"hello world!\" //设置字符串类型\r\nget mystr //读取字符串类型\r\n\r\n字符串类型的用法就是这么简单，因为是二进制安全的，所以你完全可以把一个图片文件的内容作为字符串来存储。\r\n\r\n另外，我们还可以通过字符串类型进行数值操作：\r\n复制代码 代码如下:\r\n\r\n127.0.0.1:6379> set mynum \"2\"\r\nOK\r\n127.0.0.1:6379> get mynum\r\n\"2\"\r\n127.0.0.1:6379> incr mynum\r\n(integer) 3\r\n127.0.0.1:6379> get mynum\r\n\"3\"\r\n\r\n看，在遇到数值操作时，redis会将字符串类型转换成数值。\r\n\r\n由于INCR等指令本身就具有原子操作的特性，所以我们完全可以利用redis的INCR、INCRBY、DECR、DECRBY等指令来实现原子计数的效果，假如，在某种场景下有3个客户端同时读取了mynum的值（值为2），然后对其同时进行了加1的操作，那么，最后mynum的值一定是5。不少网站都利用redis的这个特性来实现业务上的统计计数需求。\r\n\r\nredis采用结构sdshdr和sds封装了字符串，字符串相关的操作实现在源文件sds.h/sds.c中。sdshdr数据结构定义如下：\r\n 　　typedef char *sds;\r\n 　　struct sdshdr {\r\n 　　 long len;\r\n 　　 long free;\r\n 　　 char buf[];\r\n 　　};\r\n\r\n【redis数据结构 – lists】\r\n\r\nredis的另一个重要的数据结构叫做lists，翻译成中文叫做“列表”。\r\n\r\n\r\n首先要明确一点，redis中的lists在底层实现上并不是数组，而是链表，也就是说对于一个具有上百万个元素的lists来说，在头部和尾部插入一个新元素，其时间复杂度是常数级别的，比如用LPUSH在10个元素的lists头部插入新元素，和在上千万元素的lists头部插入新元素的速度应该是相同的。\r\n\r\n虽然lists有这样的优势，但同样有其弊端，那就是，链表型lists的元素定位会比较慢，而数组型lists的元素定位就会快得多。\r\n\r\nlists的常用操作包括LPUSH、RPUSH、LRANGE等。我们可以用LPUSH在lists的左侧插入一个新元素，用RPUSH在lists的右侧插入一个新元素，用LRANGE命令从lists中指定一个范围来提取元素。我们来看几个例子：\r\n复制代码 代码如下:\r\n\r\n//新建一个list叫做mylist，并在列表头部插入元素\"1\"\r\n127.0.0.1:6379> lpush mylist \"1\"\r\n//返回当前mylist中的元素个数\r\n(integer) 1\r\n//在mylist右侧插入元素\"2\"\r\n127.0.0.1:6379> rpush mylist \"2\"\r\n(integer) 2\r\n//在mylist左侧插入元素\"0\"\r\n127.0.0.1:6379> lpush mylist \"0\"\r\n(integer) 3\r\n//列出mylist中从编号0到编号1的元素\r\n127.0.0.1:6379> lrange mylist 0 1\r\n1) \"0\"\r\n2) \"1\"\r\n//列出mylist中从编号0到倒数第一个元素\r\n127.0.0.1:6379> lrange mylist 0 -1\r\n1) \"0\"\r\n2) \"1\"\r\n3) \"2\"\r\n','miss_mindada','html','2018-03-05 00:00:00',322,NULL,'sefwe',NULL,NULL,NULL,NULL,NULL,3,NULL,NULL,'../../statics/picture/280574d4ca0f081d2751b723c6efc9c2.png'),(2,'memset使用方法 \r\n','memset(a,0,sizeof(a));前面加上#include<cstring>。中间加的数字可以是0,0x7f,0x3f. ','www54320','fsahdfuiwe','2018-03-01 00:00:00',155,NULL,'kashfw',NULL,NULL,NULL,NULL,NULL,1,NULL,NULL,'../../statics/picture/af8a709a82143a435c2505c1fe9acc97.png'),(3,'Spring：使用动态工厂降低耦合度 \r\n','创建接口：\r\n\r\npublic interface ISomeInterface {\r\n\r\nvoid doSome();\r\n\r\n}\r\n\r\n创建接口实现类：\r\n\r\npublic class SomeServiceIm implements ISomeInterface {\r\n\r\n@Override\r\n\r\npublic void doSome() {\r\n\r\n// TODO Auto-generated method stub\r\n\r\nSystem.out.println(\"执行dosomg方法！！！\");\r\n\r\n}\r\n\r\n}\r\n\r\n创建工厂类：\r\n\r\npublic class SomeFactory {\r\n\r\npublic ISomeInterface getSomeSericeIm(){\r\n\r\nreturn new SomeServiceIm();\r\n\r\n}\r\n\r\n}\r\n\r\n容器配置：\r\n\r\n<bean id=\"factory\" class=\"com.abc.Beans.SomeFactory\"/>\r\n\r\n<bean id=\"someservice\" factory-bean=\"factory\" factory-method=\"getSomeSericeIm\"/>\r\n','weixin_41113108','fsahdfuiwe','2018-03-07 00:00:00',10,NULL,'kashfw',NULL,NULL,NULL,NULL,NULL,1,NULL,NULL,'../../statics/picture/36a508d94ba797fc252b67261cf4fde9.jpg'),(4,'第二周作业','3-3\r\n\r\n\r\n\r\n[html] view plain copy \r\n1.trip_modes = [\'bus\',\'car\',\'bike\',\'subway\',\'plane\']  \r\n2.for trip_mode in trip_modes:  \r\n3.    print(\'I would like to own a \'+ trip_mode)  \r\n\r\n打印所有的出行工具，如下：\r\n\r\nI would like to own a bus\r\nI would like to own a car\r\nI would like to own a bike\r\nI would like to own a subway\r\n\r\n\r\nI would like to own a plane\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n3-4 到 3-7\r\n\r\n\r\n\r\n[html] view plain copy \r\n1.guests = [\'Alice\',\'Julie\',\'Ben\',\'Jim\',\'Nicole\']  \r\n2.print(guests)  \r\n3.print(guests[0]+ \' will not attend the meet !\')  \r\n4.guests[0] = \'Maidanna\'  \r\n5.print(guests)  \r\n6.print(\"There is a big table !\")  \r\n7.guests.insert(0,\'Davie\')  \r\n8.guests.insert(3,\'queen\')  \r\n9.guests.append(\'Amy\')  \r\n10.print(guests)  \r\n11.while True:  \r\n12.    name = guests.pop()  \r\n13.    print(\'sorry \'+name + \' , you can not attend the meet.\')  \r\n14.    if len(guests)<=2:  \r\n15.        break  \r\n16.for guest in guests:  \r\n17.    print(guest+\' are still be invited!\')  \r\n18.while guests:  \r\n19.    del guests[0]  \r\n20.print(guests)  \r\n\r\n测试代码如下：\r\n\r\n[\'Alice\', \'Julie\', \'Ben\', \'Jim\', \'Nicole\']\r\nAlice will not attend the meet !\r\n[\'Maidanna\', \'Julie\', \'Ben\', \'Jim\', \'Nicole\']\r\nThere is a big table !\r\n[\'Davie\', \'Maidanna\', \'Julie\', \'queen\', \'Ben\', \'Jim\', \'Nicole\', \'Amy\']\r\nsorry Amy , you can not attend the meet.\r\nsorry Nicole , you can not attend the meet.\r\nsorry Jim , you can not attend the meet.\r\nsorry Ben , you can not attend the meet.\r\nsorry queen , you can not attend the meet.\r\nsorry Julie , you can not attend the meet.\r\nDavie are still be invited!\r\nMaidanna are still be invited!\r\n\r\n\r\n[]\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n3-8到3-9\r\n\r\n\r\n\r\n[html] view plain copy \r\n1.places = [\'Paris\',\'Tokyo\',\'Beijing\',\'London\',\'Chicago\']  \r\n2.print(places)  \r\n3.print(sorted(places))  \r\n4.print(places)  \r\n5.print(sorted(places,reverse = True))  \r\n6.print(places)  \r\n7.places.reverse()  \r\n8.print(places)  \r\n9.places.reverse()  \r\n10.print(places)  \r\n11.places.sort()  \r\n12.print(places)  \r\n13.places.sort(reverse = True)  \r\n14.print(places)  \r\n15.print(len(places))  \r\n\r\n测试代码如下：\r\n\r\n[\'Paris\', \'Tokyo\', \'Beijing\', \'London\', \'Chicago\']\r\n[\'Beijing\', \'Chicago\', \'London\', \'Paris\', \'Tokyo\']\r\n[\'Paris\', \'Tokyo\', \'Beijing\', \'London\', \'Chicago\']\r\n[\'Tokyo\', \'Paris\', \'London\', \'Chicago\', \'Beijing\']\r\n[\'Paris\', \'Tokyo\', \'Beijing\', \'London\', \'Chicago\']\r\n[\'Chicago\', \'London\', \'Beijing\', \'Tokyo\', \'Paris\']\r\n[\'Paris\', \'Tokyo\', \'Beijing\', \'London\', \'Chicago\']\r\n[\'Beijing\', \'Chicago\', \'London\', \'Paris\', \'Tokyo\']\r\n[\'Tokyo\', \'Paris\', \'London\', \'Chicago\', \'Beijing\']\r\n\r\n\r\n5\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n4-7: 3的倍数\r\n\r\n\r\n\r\n[html] view plain copy \r\n1.multiple_3 = list(range(3,31,3))  \r\n2.print(multiple_3)  \r\n3.for value in multiple_3:  \r\n4.    print(value)  \r\n\r\n测试代码：\r\n\r\n[3, 6, 9, 12, 15, 18, 21, 24, 27, 30]\r\n3\r\n6\r\n9\r\n12\r\n15\r\n18\r\n21\r\n24\r\n27\r\n30\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n4-9：立方解析\r\n\r\n\r\n\r\n[html] view plain copy \r\n1.Cube = [value**3 for value in range(1,11)]  \r\n2.print(Cube)  \r\n\r\n测试代码：\r\n\r\n[1, 8, 27, 64, 125, 216, 343, 512, 729, 1000]\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n4-10 切片\r\n\r\n\r\n\r\n[html] view plain copy \r\n1.places = [\'Paris\',\'Tokyo\',\'Beijing\',\'London\',\'Chicago\']  \r\n2.print(places[1:3])  \r\n3.print(places[:3])  \r\n4.print(places[1:])  \r\n5.print(places[-1:])  \r\n6.print(places[:-1])  \r\n\r\n测试代码如下：\r\n\r\n[\'Tokyo\', \'Beijing\']\r\n[\'Paris\', \'Tokyo\', \'Beijing\']\r\n[\'Tokyo\', \'Beijing\', \'London\', \'Chicago\']\r\n[\'Chicago\']\r\n\r\n\r\n[\'Paris\', \'Tokyo\', \'Beijing\', \'London\']\r\n','qianjq3','fsahdfuiwe','2018-03-09 00:00:00',9,NULL,'kashfw',NULL,NULL,NULL,NULL,NULL,20,NULL,NULL,'../../statics/picture/633575ce3e5cdf77ff89a22e747b5bb3.jpg'),(5,'CentOS7 关闭防火墙','centos 7：systemctl stop firewalld.service #停止systemctl disable firewalld.service #禁用之前的版本：service iptables stop #停止chkconfig iptables off #禁用','旖旎迷梦','fsahdfuiwe','2018-03-02 00:00:00',25,NULL,'kashfw',NULL,NULL,NULL,NULL,NULL,1,NULL,NULL,'../../statics/picture/78796413571a6b082225072853cf3839.jpg'),(6,'Apache Kafka 笔记','Apache Kafka\r\n一个分布式的消息发布-订阅系统,具有可扩展性、数据分区、低延迟、处理大量不同消费者的能力。\r\n12 •消息队列 \r\n•点对点通讯\r\n •多点广播\r\n •发布/订阅（publish/subscribe)模式 \r\n发送接收者耦合关系松散化，只关心主题和内容，无关地址\r\n •集群（cluster) \r\n域内用集群通道通讯，并且自动负载均衡\r\n\r\n •\r\nApache Kafka\r\n•术语 \r\n\r\n\r\n1.broker:kafka集群包含的一个或多个服务器 \r\n2.Topic:每条发布到kafka集群上的消息都有一个类别 \r\n3.Partition:物理上的概念，每个Topic包含多个Partition \r\n4.Producer \r\n5.Consumer \r\n6.Consumer Group:为每个consumer指定Group，否则默认\r\n\r\n•\r\n交互流程\r\n\r\n\r\n1.kafka在主题中保存消息的消息，生产者向主题写入，消费者从主题读出\r\n\r\n2.信息是字节数组，支持string、json、avro.\r\n\r\n3.Kafka 通过给每一个消息绑定一个键值的方式来保证生产者可以把所有的消息发送到指定位置。\r\n\r\n4.属于某一个消费者群组的消费者订阅了一个主题，通过该订阅消费者可以跨节点地接收所有与该主题相关的消息，每一个消息只会发送给群组中的一个消费者，所有拥有相同键值的消息都会被确保发给这一个消费者。\r\n\r\n5.kafka 设计中将每一个主题分区当作一个具有顺序排列的日志。同处于一个分区中的消息都被设置了一个唯一的偏移量。Kafka 只会保持跟踪未读消息，一旦消息被置为已读状态，Kafka 就不会再去管理它了。Kafka 的生产者负责在消息队列中对生产出来的消息保证一定时间的占有，消费者负责追踪每一个主题 (可以理解为一个日志通道) 的消息并及时获取它们。基于这样的设计，Kafka 可以在消息队列中保存大量的开销很小的数据，并且支持大量的消费者订阅。\r\n \r\n•消息被消费后kafka不是立即被删除的 \r\n对于传统的message queue而言，一般会删除已经被消费的消息，而Kafka集群会保留所有的消息，无论其被消费与否。当然，因为磁盘限制，不可能永久保留所有数据（实际上也没必要），因此Kafka提供两种策略删除旧数据。一是基于时间，二是基于Partition文件大小。例如可以通过配置$KAFKA_HOME/config/server.properties，让Kafka删除一周前的数据，也可在Partition文件超过1GB时删除旧数据，配置如下所示。\r\n •\r\ndelivery gurantee\r\n•at most once:消息可能会丢失，但绝对不会重复传播\r\n •at least one:消息绝对不会丢，但可能重复传输 （默认）\r\n •exactly once:消息肯定会被传输，且仅传输一次\r\n •读完消息先commit再处理消息 ->at most once\r\n •读完消息先处理消息再commit ->at least once (默认)\r\n\r\n\r\n','_lemonTree','fsahdfuiwe','2018-03-02 00:00:00',22,NULL,'kashfw',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'../../statics/picture/3248274de2648727b1a677771acf4081.jpg'),(7,'SpringMVC：请求路径问题','前台路径解决方案：\r\n\r\n1、使用${pageContext.request.contextPath }，这种方案后面是加\"/\"的。（提倡使用这种方式）\r\n\r\n例如：\r\n\r\n\r\n\r\n2、针对不加\"/\"的问题，使用base标签（不提倡）：\r\n\r\n\r\n\r\n使用base标签可以为不加\"/\"开头的相对路径自动添加上base标签所代表的路径，不过该方式具有浏览器兼容问题，不建议使用。\r\n\r\n后台路径解决方案：\r\n\r\n相对路径前都加上\"/\"\r\n\r\n但是，有个特例，Response的sendRedirect()方法，这种后台路径的参数路径为当前WEB服务器的根，因此只有这种问题前面不加\"/\"。\r\n\r\n--------------------------------------------------------------------------------\r\n\r\n请求路径问题相关概念：\r\n\r\n■\r\n请求路径构成：\r\n\r\n\r\n客户端提交请求为了访问服务端的指定资源，故而请求路径由两部分构成：1、资源路径 2、资源名称，即：请求路径=资源路径+资源名称。\r\n\r\n例如：http://localhost:8081/SpringMVC/some.do，其中http://localhost:8081/SpringMVC是资源路径，而some.do是资源名称。\r\n\r\n资源路径与资源名称的分水岭：即请求路径最后一个斜杠，斜杠前是资源路径，斜杠后是资源名称。\r\n■\r\n请求路径的分类：\r\n\r\n\r\n根据是否可以唯一的定位（定义）一个资源，可以将路径划分为两类：1、绝对路径 2、相对路径\r\n\r\n绝对路径：可以唯一定位一个资源\r\n\r\n相对路径：仅仅依靠此路径，无法唯一定位一个资源，但若将其再与一个参照路径相结合后，就可以转换为一个定位资源的绝对路径，这样的路径就称为相对路径。\r\n\r\n在web应用中，通常以请求协议开头的路径称为绝对路径，不以请求协议开头的路径称为相对路径。\r\n\r\n因此，\r\n■\r\n转换关系：\r\n\r\n\r\n\r\n由上面的理论可以得出：绝对路径=参照路径+相对路径\r\n■\r\n相对路径分类：\r\n\r\n\r\n以相对路径是否以\"/\"开头为标准，可以划分为两类：1、以斜杠开头的相对路径 2、不以斜杠开头的相对路径\r\n\r\n对于以斜杠开头的相对路径，再根据路径出现的位置的不同，可以分为前台路径和后台路径。\r\n\r\n前台路径：出现在html文件，及jsp文件的静态部分中一斜杠开头的相对路径。前台路径的解析者是浏览器。\r\n\r\n后台路径：出现在java代码、xml、jsp文件中动态部分等。后台路径解析者是服务器。\r\n\r\n注意：对于不以斜杠开头的相对路径，其路径的解析者，根据位置不同可以是浏览器或者服务器：1、出现在页面里解析者就是浏览器，出现在java代码中就是服务器。\r\n■\r\n转换规则（相对路径转绝对路径规则）：\r\n\r\n\r\n不同的路径解析者，对同一个相对路径的解析结果是不同的。当然，所谓的解析结果，指的是将相对路径转换为最终的绝对路径。\r\n\r\n由于绝对路径=参照路径+相对路径，所以这里的解析规则就是指为这个相对路径匹配上一个怎样的对照路径成为参照。\r\n\r\n前台路径：其参照路径为当前web服务器的根。\r\n\r\n后台路径：其参照路径为当前web应用的根。\r\n\r\n不以斜杠开头的相对路径：其参照路径为当前请求路径的资源路径。\r\n\r\n例如：http://localhost:8081/SpringMVC/xxx/some.do\r\n\r\nhttp://localhost:8081当前web服务器的根\r\n\r\nhttp://localhost:8081/SpringMVC当前web应用的根\r\n\r\nhttp://localhost:8081/SpringMVC/xxx是资源路径\r\n','weixin_41113108','fsahdfuiwe','2018-03-10 00:00:00',11,NULL,'kashfw',NULL,NULL,NULL,NULL,NULL,4,NULL,NULL,'../../statics/picture/80f783d3a86393bd2bfa091c9c9d9323.png'),(8,'浅谈final关键字 ','Java中的final关键字非常重要，它可以应用于类、方法以及变量。这篇文章中我将带你看看什么是final关键字？将变量，方法和类声明为final代表了什么？使用final的好处是什么？最后也有一些使用final关键字的实例。final经常和static一起使用来声明常量，你也会看到final是如何改善应用性能的。\r\n\r\nfinal关键字的含义?\r\n\r\nfinal在Java中是一个保留的关键字，可以声明成员变量、方法、类以及本地变量。一旦你将引用声明作final，你将不能改变这个引用了，编译器会检查代码，如果你试图将变量再次初始化的话，编译器会报编译错误。\r\n\r\n什么是final变量？\r\n\r\n凡是对成员变量或者本地变量(在方法中的或者代码块中的变量称为本地变量)声明为final的都叫作final变量。final变量经常和static关键字一起使用，作为常量。下面是final变量的例子：\r\n\r\n\r\n\r\n\r\n\r\n12 \r\n\r\npublic static final String LOAN = \"loan\";LOAN = new String(\"loan\") //invalid compilation error \r\n\r\nfinal变量是只读的。\r\n\r\n什么是final方法?\r\n\r\nfinal也可以声明方法。方法前面加上final关键字，代表这个方法不可以被子类的方法重写。如果你认为一个方法的功能已经足够完整了，子类中不需要改变的话，你可以声明此方法为final。final方法比非final方法要快，因为在编译的时候已经静态绑定了，不需要在运行时再动态绑定。下面是final方法的例子：\r\n\r\n\r\n\r\n\r\n\r\n123456789101112 \r\n\r\nclass PersonalLoan{    public final String getName(){        return \"personal loan\";    }} class CheapPersonalLoan extends PersonalLoan{    @Override    public final String getName(){        return \"cheap personal loan\"; //compilation error: overridden method is final    }} \r\n\r\n什么是final类？\r\n\r\n使用final来修饰的类叫作final类。final类通常功能是完整的，它们不能被继承。Java中有许多类是final的，譬如String, Interger以及其他包装类。下面是final类的实例：\r\n\r\n\r\n\r\n\r\n\r\n1234567 \r\n\r\n    final class PersonalLoan{     }     class CheapPersonalLoan extends PersonalLoan{  //compilation error: cannot inherit from final class } \r\n\r\nfinal关键字的好处\r\n\r\n下面总结了一些使用final关键字的好处\r\n1.final关键字提高了性能。JVM和Java应用都会缓存final变量。\r\n2.final变量可以安全的在多线程环境下进行共享，而不需要额外的同步开销。\r\n3.使用final关键字，JVM会对方法、变量及类进行优化。\r\n\r\n不可变类\r\n\r\n创建不可变类要使用final关键字。不可变类是指它的对象一旦被创建了就不能被更改了。String是不可变类的代表。不可变类有很多好处，譬如它们的对象是只读的，可以在多线程环境下安全的共享，不用额外的同步开销等等。\r\n\r\n相关阅读：为什么String是不可变的以及如何写一个不可变类。\r\n\r\n关于final的重要知识点\r\n1.final关键字可以用于成员变量、本地变量、方法以及类。\r\n2.final成员变量必须在声明的时候初始化或者在构造器中初始化，否则就会报编译错误。\r\n3.你不能够对final变量再次赋值。\r\n4.本地变量必须在声明时赋值。\r\n5.在匿名类中所有变量都必须是final变量。\r\n6.final方法不能被重写。\r\n7.final类不能被继承。\r\n8.final关键字不同于finally关键字，后者用于异常处理。\r\n9.final关键字容易与finalize()方法搞混，后者是在Object类中定义的方法，是在垃圾回收之前被JVM调用的方法。\r\n10.接口中声明的所有变量本身是final的。\r\n11.final和abstract这两个关键字是反相关的，final类就不可能是abstract的。\r\n12.final方法在编译阶段绑定，称为静态绑定(static binding)。\r\n13.没有在声明时初始化final变量的称为空白final变量(blank final variable)，它们必须在构造器中初始化，或者调用this()初始化。不这么做的话，编译器会报错“final变量(变量名)需要进行初始化”。\r\n14.将类、方法、变量声明为final能够提高性能，这样JVM就有机会进行估计，然后优化。\r\n15.按照Java代码惯例，final变量就是常量，而且通常常量名要大写：\r\n\r\n\r\n\r\n\r\n\r\n1 \r\n\r\nprivate final int COUNT = 10; \r\n1.对于集合对象声明为final指的是引用不能被更改，但是你可以向其中增加，删除或者改变内容。譬如：\r\n\r\n\r\n\r\n\r\n\r\n1234 \r\n\r\nprivate final List loans = new ArrayList();loans.add(“home loan”);  //validloans.add(\"personal loan\"); //validloans = new Vector();  //not valid \r\n\r\n我们已经知道final变量、final方法以及final类是什么了。必要的时候使用final，能写出更快、更好的代码的。\r\n','来一杯coffee','grthtr','2018-03-17 00:00:00',22,NULL,'tyjty',NULL,NULL,NULL,NULL,NULL,9,NULL,NULL,'../../statics/picture/62105f7c32ace884d10dbf5d38003607.png'),(9,'JSP--（out数处对象__向客户端输出数据）','out内置对象的print()和println()方法和java API中的（System.out获取）的作用相似：\r\n\r\n（使用HTML语言提供的<pre>标记）\r\n\r\n\r\n\r\n[html] view plain copy \r\n1.<%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\"  \r\n2.    pageEncoding=\"UTF-8\"%>  \r\n3.<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">  \r\n4.<html>  \r\n5.<head>  \r\n6.<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">  \r\n7.<title>Insert title here</title>  \r\n8.</head>  \r\n9.<body>  \r\n10.<pre>  \r\n11.<%   \r\n12.out.println(\"反正青山不老\");  \r\n13.out.println(\"绿水长流\");  \r\n14.%>  \r\n15.</pre>  \r\n16.</body>  \r\n17.</html>  \r\n','我和我的三只猫',NULL,'2018-02-27 00:00:00',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'../../statics/picture/8d7bb8870d928ced9f48c21f9a23fd21.png'),(10,'卡特兰数 ','参见百度百科:https://baike.baidu.com/item/%E5%8D%A1%E7%89%B9%E5%85%B0%E6%95%B0 \r\n卡特兰数的前15项为：1,2,5,14,42,132,429,1430,4862,16796,58786,208012,742900,2674440,9694845 \r\n递推关系为：h(n)=h(n-1)*(4*n-2)/(n+1); \r\n或者：h(n)=c(2n,n)-c(2n,n-1)(n=0,1,2,…) \r\n实现代码：\r\n\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long LL;\r\nconst int maxn=105;\r\nconst LL mod=1e9+9;\r\nLL power(LL a,LL n)\r\n{\r\n    LL ret=1,res=a;\r\n    while(n){\r\n        if(n&1) ret=ret*res%mod;\r\n        res=res*res%mod;\r\n        n>>=1;\r\n    }\r\n    return ret;\r\n}\r\nLL inv(LL a)\r\n{\r\n    return power(a,mod-2);\r\n}\r\nLL catalan[maxn];\r\nint main() {\r\n    ios::sync_with_stdio(false);\r\n    catalan[0]=1,catalan[1]=1;\r\n    int n=100;\r\n    for(int i=2;i<=n;i++){\r\n        catalan[i]=(catalan[i-1]*(4*i-2))%mod*inv(i+1)%mod;\r\n    }\r\n    for(int i=1;i<=n;i++) cout<<catalan[i]<<\',\';\r\n    return 0;\r\n}\r\n\r\n应用： \r\n1，一个无限长的栈，进栈顺序为1，2，3，，，，n，则总共的则又catalan[n]种出栈序列\r\n','半世blue',NULL,'2018-02-25 00:00:00',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,1,NULL,NULL,'../../statics/picture/9b4ea6a8403891f274d3f8b714658744.png'),(11,'SpringMVC：处理器方法的参数问题，中文乱码问题','\r\n\r\n处理器方法中的参数类型有很多，常用的有6种（这些参数值都是由系统自动赋值，程序员只需要在处理器方法中直接使用即可）HttpServletRequest、HttpServletResponse、HttpSession Model、Map<String,Object>，请求中所携带的参数。今天着重说明后两种。\r\n\r\n--------------------------------------------------------------------------------\r\n\r\n一、中文乱码问题：\r\n\r\n\r\n中文乱码问题的解决分get方法和post方法，方法不一样解决思路也不一样，但是最好的解决方法就是使用过滤器，为此，我们的框架已经为我们定义好了，只需要调用就好了。\r\n\r\n在web.xml中注册过滤器：\r\n\r\n\r\n\r\n--------------------------------------------------------------------------------\r\n\r\n二、map作为处理器的参数：\r\n\r\n\r\n\r\n\r\n说明：map.put()相当于request.setAttribute()。\r\n\r\n我们在welcome.jsp页面中${name}${age}就能获取相应的数据。\r\n\r\n--------------------------------------------------------------------------------\r\n\r\n三、逐个接收表单中的数据：\r\n\r\n\r\n\r\n\r\n\r\n\r\n当然也可以通过Map<String,String> map共享数据，如图：\r\n\r\n\r\n\r\n我们在weclcome页面通过${name}、${age}便可获得相应数据。\r\n\r\n注意：逐个接收数据有这样的弊端：\r\n■\r\n面对大量数据需要传递接收时，效率比较低。\r\n\r\n■\r\n不能把数据自动放进请求域里。\r\n\r\n\r\n--------------------------------------------------------------------------------\r\n\r\n四、校正请求参数名称：\r\n\r\n上面逐个接收的例子，我们表单的name和处理器方法中定义的名字一样，倘若不一样怎么解决呢？\r\n\r\n\r\n\r\n表单传过来的是name和age，但是方法里确是sname、sage，为了保证运行，必须通过校正符校正。\r\n\r\n--------------------------------------------------------------------------------\r\n\r\n五、使用map整体接收参数：\r\n\r\n\r\n\r\n注意：\r\n■\r\nmap接收数据不会自动装换类型。\r\n\r\n■\r\n不会自动放到request域里。\r\n\r\n\r\n--------------------------------------------------------------------------------\r\n\r\n六、使用自定义类型对象对请求参数进行整体接收：\r\n\r\n创建student类和school类如图：\r\n\r\n\r\n\r\n\r\n\r\n创建表单：\r\n\r\n\r\n\r\n处理器：\r\n\r\n\r\n\r\n我们在welcome页面通过${student}即可输出表单传过来的所有数据。\r\n\r\n--------------------------------------------------------------------------------\r\n\r\n七、RESTFUL风格，获取路径变量的参数：\r\n\r\n这种方法处理的参数不是来自于表单，而是来自于路径。\r\n\r\n\r\n\r\n\r\n\r\n','weixin_41113108',NULL,'2018-01-02 00:00:00',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'../../statics/picture/45e11476c0acfd7348d4a78218ae75bf.png'),(12,'张宏良：安邦——中国财富黑幕的冰山一角','安邦是什么？安邦是人类历史上最神奇的财富魔方，没有一分钱投资，没有一项专利，没有一个技术，也没生产一件商品，总之两手空空什么都没有，却能十年资产超过万亿，2004年白手起家，到2014年资产超过万亿，这个连北京安贞医院最疯狂的精神病患者都都想像不到的魔幻现象，就是安邦——中国第一家族外孙女女婿操控的集团。　　一万亿资产是个什么概念?是名副其实的富可敌国，并且还不是小国而是大国，当今世界GDP超过一万亿人民币的国家只有十二个，连西班牙等发达国家都排在安邦后面。　　如果纵向比或许大家更清楚，中国第一家族这个外孙女女婿控制的资产，相当于1984年中华人民共和国GDP总和，也就是说，中国历经千年创造的社会总产值，仅相当于安邦十年获取的资产。与之相比较，国民党蒋宋孔陈四大家族的资产，只能算是小商小贩。　　再进行目前流行的经济结构分析，则更加让人震惊。目前中国GDP总额是60万亿，仅中国第一家族一个孙女女婿就占据了1万亿，那么整个家族会是多少?再加上其他家族又会是多少?如果把这道题交给安贞医院的患者，估计所有患者都会被刺激得神经恢复正常。　　这就是中国经济高速增长三十多年，中国生产的商品养活了发达国家每一个家庭，而中国老百姓自己去买不起房、看不起病、上不起学、养不起老、死不起葬的根本原因！按照这个玩法，别说是中国经济连续10%的增长速度，就是达到当年希特勒百分之百的增长速度，老百姓也同样难以摆脱贫困。　　一个孙子，还不是真孙子，而只是外孙女女婿，十年创造的财富就能超过一个发达国家，这就是具有中国特色的财富积累魔术，是自有人类社会以来空前未有的财富魔术，奴隶社会没有过，封建社会没有过，资本主义社会也没有过，如果马克思看到这种财富魔术，肯定会烧掉《资本论》而写一部《财富魔术论》。　　或许读者最感兴趣的是安邦十年获取万亿资产的方法和途经，虽然具体方法眼花缭乱得能够让安贞医院的患者马上出院，但实质却是万变不离其宗得只有一个，又是瓜分国有资产和掠夺百姓财产。第一步，先由上汽和中石化两大国企投资播种，创办安邦公司，弄来一些名扬天下的权势人物做股东；第二步，再把中国保监会变成自己的跟班，安邦需要什么政策，保监会就出台什么政策，由此成为保险业老大，进而成为金融和地产双料老大，完成乌鸡变凤凰的飞跃;第三步，再通过令人眼花缭乱的一系列复杂的产权改革，让上汽和中石化等国企出局，完成由国有企业向私人控制的飞跃。　　看了安邦集团令人目不暇接、匪夷所思的产权变化的迷宫，就明白了有些人为什么要对国企120万亿资产进行混合所有制改革了。一方面，可以把国有资产变成公司资产，2011年，安邦集团以区区56亿元，收购了拥有1600多亿资产的成都农业银行控股权，安邦资产一夜之间增加四倍。另一方面，又可以把公司资产变成个人资产，安邦属下一个注册资本9亿元的公司，花近15亿元买下了安邦公司的部分股份，然后连同9亿元注册资本，转手卖给了一家注册资本只有100万的小公司。就是这样一混合，国家的变成了公司的，公司的又变成了个人的。中国的富豪就是这样产生的。目前，中国金融领域的财富黑幕，终于露出了冰山一角。反腐败斗争也终于突破了中国腐败最严重的领域——金融领域。金融领域是最关键的领域，并且是政治和经济的双重关键领域，只要突破了金融领域，中国的反腐败斗争将获得决定性胜利，中国最致命的毒瘤将被摘除，中国社会最大的隐患将被化解，中华民族的复兴也将是一片坦途。金融领域反腐败——决定中华民族生死存亡的最关键搏杀，就要开始了。愿天佑中华！　　2015-2-8　　张宏良微信公众号：zhanghongliang010　　关联阅读：　　安邦实际控制人系陈小鲁 旗下公司资产过万亿　　作者：记者 　来源：南方周末　　一、安邦路线　　仅仅十余年，安邦凭借强大的政商资源，从一家单纯的保险公司强势扩张成万亿规模的金融巨鳄。错综复杂的股权结构，如同一张“超级迷魂阵”，即使再分散，“大格局”从未改变。　　沿长安街，从天安门往东大概7公里，建国门外大街6号，两栋漆黑闪亮的联体建筑厚重大气，这就是安邦保险集团股份有限公司(下称安邦集团)的总部所在地。　　一年前，传媒还以“黑马”来形容成立于2004年的安邦;但此后一年，其在国内外资本市场上纵横捭阖，掀起一次次的收购骇浪，不断刷新各大媒体的头条。　　在安邦集团内部，“翻天覆地”的变化亦在发生：2014年1月、9月，连续两度增资扩股，注册资本由120亿元增至300亿元、再增至619亿元，跃居国内保险公司之首。股东则由8家增至17家，再增至39家，股权由相对集中变得看上去“格外分散”。　　至于安邦集团的总资产，也不再是其官方网站上宣传的7000亿元规模——据安邦保险内部人士透露，至2014年年底，已达到约1万亿元，保险业资产仅占其中的三分之一左右。　　2015年1月26日，保监会批复，同意安邦保险旗下子公司安邦人寿出资5亿元人民币设立安邦基金管理有限公司，出资额占比100%。　　除手握保险业全牌照之外，在国内，安邦还持有银行、金融租赁等数张金融牌照，收购世纪证券有限责任公司基本完成，只待监管层批准;在国外，已全资收购比利时保险公司、银行各一家，跨国性综合金融集团的愿景基本实现。　　保险公司起家的“黑马安邦”，在过去十年间借助于强大政商网络，强势扩张，走出一条和同行截然不同的发展之路，最终成为今日的“巨鳄安邦”。　　“含着金汤匙出生”　　上汽是发起股东和第一大股东，董事会成员里显赫云集。　　2004年9月13日，星期一，在浙江省宁波市海曙区灵桥路255号中宁大厦18楼的会议室里，两位名声显赫的人士——时年58岁的陈毅元帅之子陈小鲁、时年53岁的上海汽车集团股份有限公司(下称上汽)总经理胡茂元，在此相聚。　　宁波是安邦的创立之地。他们作为发起股东代表，参加了在此举行的创立大会。彼时的安邦，称为“安邦财产保险股份有限公司”，注册资本5亿元。上汽等7家法人单位是发起股东。　　这7个股东，上汽是上海市国资委[微博]所辖企业。另外6家，均为民营企业。其中，旅行者主业为汽车销售，联通租赁是汽车租赁公司，它们的主要客户就是上汽。上海标基、浙江标基、浙江中路、嘉兴公路，这4家公司的主业则是基础设施建设。　　工商登记材料显示，陈小鲁至少实际掌控着上海标基、浙江标基、嘉兴公路3家公司，并曾持有浙江中路的部分股权。　　当时的董事会，共有7位董事，来自上汽的两位，胡茂元，以及上汽副总会计师兼财务部经理刘榕;余下则是陈小鲁、吴光辉、陈萍、姚大锋、赵虹五人。胡茂元出任安邦的董事长，陈萍为副董事长。　　至少3位消息人士对南方周末记者表示，吴光辉就是安邦保险集团现任董事长兼总经理吴小晖。1月20日，南方周末记者就此向安邦集团求证，但至截稿时未获回复。　　发起股东里有生产汽车的，有做汽车销售、租赁的，安邦保险自然一开始就顺理成章主攻“车险”业务。时任安邦董事长胡茂元，在开业致词中表示，“安邦将以车险业务为核心业务，从行业和受众两条主线出发，以最快速度拓展汽车保险市场。”　　2005年，安邦与上汽子公司——上海通用汽车，签订了战略合作协议，并得以在上汽的诸多4S店，代理销售车险。　　正式开业第一年，安邦的保费收入就突破了10亿元，分支机构达到22家，“基本上完成了业务网络在全国范围内的铺设”。　　“这点很不容易。”一位保监会官员告诉南方周末记者，保险业类似银行业，开设分支机构时，需要得到各地保监局的审批核准。　　更加不同寻常的是，成立一个多月后，安邦保险即在宁波召开临时股东大会，增选朱云来、龙永图、刘晓光、董一冰4人进入董事会。　　一时间，安邦可谓“群星闪耀”。　　朱云来为国务院原总理朱镕基之子，早年赴美留学，后进入投行工作，在2004年时，就职于中国国际金融有限公司。龙永图原外经贸部副部长、中国加入世贸组织[微博]首席谈判代表，彼时刚刚卸任官职。刘晓光，时任北京首都创业集团总经理。　　这些大名鼎鼎的人物进入安邦，与陈小鲁有关。2014年初，陈小鲁在接受香港媒体采访时表示，当时是他从中牵线，邀得朱云来、龙永图等进入安邦董事会。　　不过，朱云来的董事身份，可能是个“乌龙”。　　2014年10月，财新传媒刊载文章称，“朱云来并非安邦董事”。该文引述“知情人士”消息说：朱云来早期曾受邀出任安邦的董事，但不久后就告知安邦，不打算出任董事，也从未签署任何相关法律文件。但安邦一直没有更新董事名单，后又称工商登记出错，没有及时更新。　　南方周末记者获得的包括“董事签字页”在内的多份安邦集团内部文件里，亦未发现朱云来的签名。但直到2014年9月25日，安邦又一次调整董事会成员时，朱云来才正式从安邦董事会名单上消失。南方周末记者也就此向安邦发出采访函，但始终未获回复。　　上汽是发起股东和第一大股东，董事会成员里又如此显赫云集，因此，一位保监会官员对南方周末记者戏称，“安邦是含着金汤匙出生”。　　“过客”与实际控制人　　上汽、中石化的占股不断被稀释，而上海标基、联通租赁的股份均不断上升，并列第一大股东。　　2005年的6月18日，安邦保险进行了第一次增资扩股，注册资本增加到16.9亿元。在当时的中资财产保险公司里，这家成立不到一年的初来者注册资本排名已高居第三位。　　增资何来?中国石油化工集团公司(下称中石化)，成为新晋股东，其出资3.38亿元，占增资后的20%。　　对于中石化的“入局”，一位与安邦素有往来的企业家对南方周末记者表示，这一定程度上得益于安邦实际控制者们早年间与时任中石化董事长陈同海的“交情”。　　陈同海父亲陈伟达是担任过中顾委委员，曾在宁波、杭州等地长期任职。　　陈同海也曾在宁波工作多年，任过中石化镇海石油化工总厂党委副书记、书记、宁波市长等职务。2003年至2007年，出任中石化董事长。2007年7月被调查，两年后被判处死缓。　　中石化“入局”不到一年，即2006年5月15日，安邦再一次增资扩股，将注册资本扩充至37.9亿元。上汽跟进增资，维持20%的持股比例，依然是名义上的第一大股东。而中石化没有跟进，降为第五大股东。　　同年，安邦注册机构由宁波市工商局，变更到国家工商总局。尽管公司注册在宁波，但安邦从开始就不满足于偏安一隅，无论是开业庆典，还是第一家分支机构，都选在北京。　　南方周末记者查阅了安邦保险呈送给国家工商总局的请示，其变更注册地的理由是：“公司成立不久，业务发展迅猛，人才的缺乏成为制约公司发展的瓶颈，为了提高公司对外形象及公司在保险界的地位，引进大量专业化保险人才”。　　从此，安邦保险的总部，搬到了北京市东三环中路7号财富中心A座45层。　　这处地方，是由“北京国通高盛投资有限公司”(下称国通高盛)，在2005年8月买下，然后以每月35万元的租金租给安邦保险的。　　这或许与此时并未在安邦高管名单中出现，但被外界怀疑为安邦实际控制者的吴小晖有关。温州商人吴小晖曾经公开的身份之一是国通高盛的董事长。时至今日，吴小晖的妹妹吴晓霞，在国通高盛占股99.9%。　　一年后，2007年5月25日，安邦第三次增资扩股，注册资本增加至46亿元。　　仅仅11天之后，安邦保险第四次增资扩股，注册资本增加至51亿元。　　这两次增资，上汽和中石化都没有参与。上汽的股权被稀释至16.478%，降为第三大股东。中石化则被稀释到了6.627%，基本“无足轻重”。此时，上海标基、联通租赁，所占股份均上升为19.765%，并列第一大股东。　　尽管上汽、中石化的占股不断被稀释，但很长时间内安邦在对外宣传时，依然把上汽和中石化“顶在最外面”。　　2007年，安邦保险的原保费收入，达到57.52亿元，同比增加65.29%。自开业以来，累计保费收入，至此超过100亿元。　　一位安邦保险前员工告诉南方周末记者，这个百亿元目标，是吴小晖在2005年安邦的北京“怀柔会议”上提出的。“当时我们还觉得有些‘天方夜谭’。”　　但第二年，安邦的保费收入却突然下降，未能跑赢行业当年的平均水准——2008年安邦财险保费收入48.18亿元，同比下降16.24%，而同期财产险行业的保费收入增加了17.24%。　　或有巧合的是，陷入低迷之时，监管层的政策利好也“适时而来”。　　2008年12月24日，中国保监会批准安邦保险，在其37家分公司1300余家机构开展电话销售业务。在当时全国几十家财产保险公司里，安邦是第一家获批“同时在全国所有省份开展电话营销”的企业。包括平安保险、太平洋保险这些保险业的“老大哥”，乃至央企“人保股份”在内的保险公司，都还只能在部分省市进行电话营销。　　2009年，安邦保险的保费收入，又恢复了两位数的增长。　　这一年，安邦又一次变更了注册地，由国家工商总局变更到北京市工商局，理由是，“为了加快公司发展，提高公司竞争力。” 　　','南京-菜根谭',NULL,'2017-11-21 00:00:00',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'../../statics/picture/a4ea824f292e537f0ccad1ed5d5e3bc9.png'),(13,'memcache常见问题集','\r\n\r\nmemcache\r\n\r\n\r\n\r\n\r\nWrite here... \r\n\r\n\r\n--------------------------------------------------------------------------------\r\n\r\n\r\n     Copyright ©2017 . All Rights Reserved. \r\n\r\nMemcache常见问题集 \r\n\r\nhttp://blog.csdn.net/tanga842428/article/details/52771025\r\n\r\nMemcache：\r\n\r\n1、存储原理\r\n\r\nMemcache采用键值对存储方式。它本质是一个大的 hash表，key的最大长度为255个字符，最长过期时间为30天。\r\n\r\n它的内存模型如下：Memcache预先将可支配的内存空间进行分区（Slab），每个分区里再分为多个块（Chunk）最大1M，但同一个分区中块的大 小是固定的。然后，插入数据时，会根据数据大小寻找最合适的块，然后插入，当然这样也就会有部分内存浪费，但可一定程度上减少内存碎片，总体上，利大于 弊。当Memcache的内存满后，它清除旧数据的原则为：LRU闲置>过期>最少访问。而且它采用的是惰性删除，它并没有提供监控数据过期 的机制，而是惰性的，当查询到某个key的数据时，如果过期，那么直接抛弃。\r\n\r\n2、应用场景\r\n\r\n分布式应用：由于memcached本身基于分布式的系统，所以尤其适合大型的分布式系统。\r\n\r\n数据库前段缓存：数据库常常是网站系统的瓶颈。数据库的大并发量访问，常常造成网站内存溢出。当然我们也可以使用Hibernate的缓存机制。但memcached是基于分布式的，并可独立于网站应用本身，所以更适合大型网站进行应用的拆分。\r\n\r\n服务器间数据共享：举例来讲，我们将网站的登录系统、查询系统拆分为两个应用，放在不同的服务器上，并进行集群，那这个时候用户登录后，登录信息如何从登录系统服务器同步到查询系统服务器呢？这时候，我们便可以使用memcached，登录系统将登录信息缓存起来，查询系统便可以获得登录信息，就像获取本地信息一样。\r\n\r\n不适合应用的场景：\r\n\r\n1、缓存的数据量比较小。\r\n\r\n2、缓存的数据需要持久化。\r\n\r\n  \r\n\r\n4、分布式集群\r\n\r\n首先，集群的概念在我理解来就是多个类似于软件之间有了关联的关系，就可以称之为集群，例如，我们常用的LAMP环境，单个的linux、apach、mysql或者php都不能称之为一个集群，但是，它们关联起来以后，就可以称之为一个集群了。那么，memcache分布式集群是个什么情况那？我们都知道，memcache是一个基于分布式的系统，那么，就意味着memcache可以同时部署到多台服务器上，这时候，如果我们可以把这多台memcache服务器关联起来的话，那么这些服务器就是一个memcache集群了。关联方法如下：\r\n$mem=new Memcache;\r\n$mem->addsever($ip,$host);\r\n$mem->addsever($ip,$host);\r\n$mem->addsever($ip,$host);\r\n这三台memcache服务器的ip和端口号都是不同的，这时候，因为它们之间已经有了关联，同时它们部署在不同的服务器上，所以可以称之为memcache分布式集合。如果数据量巨大，我们可以用取余和一致性哈希算法来将数据部署到memcache服务器上去。\r\n\r\n\r\n\r\n一致性哈希算法的原理：\r\n首先求出memcache服务器（节点）的哈希值，并将其配置到0～232的圆（continuum）上。 然后用同样的方法求出存储数据的键的哈希值，并映射到圆上。 然后从数据映射到的位置开始顺时针查找，将数据保存到找到的第一个服务器上。如果超过232仍然找不到服务器，就会保存到第一台memcache服务器上。\r\n\r\n取余算法的原理:\r\n假如有1000万条数据要分布到3台memcache服务器上，那么就需要用1000万条数据的id去磨3，根据所得的余数决定将数据分布在那个服务器上去。\r\n\r\n\r\n1. Memcache::add\r\n\r\n2. Memcache::set\r\n\r\n3. Memcache::delete\r\n\r\n4. Memcache::flush\r\n\r\n5. Memcache::close\r\n\r\n6. Memcache::replace\r\n\r\n7. Crontab -e   各个参数\r\n\r\n8. Memcache的数据存储在哪\r\n\r\n9. Mysql的数据存储在哪\r\n\r\n10. 真静态 可以减少程序对mysql数据库的访问 \r\n\r\n11. 使用内存缓存 可以减少程序对mysql数据库的访问 \r\n\r\n12. 伪静态 可以减少程序对mysql数据库的访问 \r\n\r\n13. sql语句的预处理 可以减少程序对mysql数据库的访问 \r\n\r\n14. 真静态的缺点有 维护不方便\r\n\r\n15. 真静态的缺点有 空间占用比较大\r\n\r\n16. 真静态的缺点有 生成的文件多了，服务器对html文件的响应负担也较重\r\n\r\n17. 真静态的缺点有 加载不用调动数据库，响应速度快\r\n\r\n18. 伪静态 可以方便的实现对SEO的优化\r\n\r\n19. 伪静态 比生成静态更加方便\r\n\r\n20. 伪静态 占空间比较小\r\n\r\n21. 伪静态 可以生成真静态文件\r\n\r\n22. jsonp，和json没有区别\r\n\r\n23. jsonp，可以跨越同源策略\r\n\r\n24. jsonp，不支持POST等其它类型的HTTP请求\r\n\r\n25. jsonp，不可以跨越同源策略\r\n\r\n26. jsonp，方便于传输，较少冗余的字符\r\n\r\n27. jsonp，方便转换。\r\n\r\n28. jsonp，易于阅读。\r\n\r\n29. jsonp，适用于多种编程语言\r\n\r\n30. Memcache::close — 关闭memcache连接\r\n\r\n31. PV（page view）即页面浏览量\r\n\r\n32. UV是unique visitor的简写，是指通过互联网访问、浏览这个网页的自然人\r\n\r\n33. 在接口开发过程中直接输出字符串即可\r\n\r\n34. Memcache::connect函数有且只有两个参数\r\n\r\n35. 数据库设计三范式是什么\r\n\r\n36. mysql数据索引类型有那些\r\n\r\n37. Mysql 数值类型有哪些，取值范围\r\n\r\nMySQL字段类型详解\r\nMySQL支持大量的列类型，它可以被分为3类：数字类型、日期和时间类型以及字符串(字符)类型。本节首先给出可用类型的一个概述，并且总结每个列类型的存储需求，然后提供每个类中的类型性质的更详细的描述。\r\n\r\n概述有意简化，更详细的说明应该考虑到有关特定列类型的附加信息，例如你能为其指定值的允许格式。由MySQL支持的列类型列在下面。下列代码字母用于描述中：M指出最大的显示尺寸。最大的合法的显示尺寸是 255 。D适用于浮点类型并且指出跟随在十进制小数点后的数码的数量。最大可能的值是30，但是应该不大于M-2。方括号(“[”和“]”)指出可选的类型修饰符的部分。注意，如果你指定一个了为ZEROFILL，MySQL将为该列自动地增加UNSIGNED属性。\r\n\r\ncreate table abc(\r\nid tinyint unsigned\r\n\r\n);\r\n\r\nTINYINT[(M)] [UNSIGNED] [ZEROFILL] ()\r\n\r\n一个很小的整数。有符号的范围是-128到127，无符号的范围是0到255。\r\n\r\nSMALLINT[(M)] [UNSIGNED] [ZEROFILL]\r\n\r\n一个小整数。有符号的范围是-32768到32767，无符号的范围是0到65535。\r\n\r\nMEDIUMINT[(M)] [UNSIGNED] [ZEROFILL]\r\n\r\n一个中等大小整数。有符号的范围是-8388608到8388607，无符号的范围是0到16777215。\r\n\r\nINT[(M)] [UNSIGNED] [ZEROFILL]\r\n\r\n一个正常大小整数。有符号的范围是-2147483648到2147483647，无符号的范围是0到4294967295。\r\n\r\nINTEGER[(M)] [UNSIGNED] [ZEROFILL]\r\n\r\n这是INT的一个同义词。\r\n\r\nBIGINT[(M)] [UNSIGNED] [ZEROFILL]\r\n\r\n一个大整数。有符号的范围是-9223372036854775808到9223372036854775807，无符号的范围是0到\r\n\r\n18446744073709551615。注意，所有算术运算用有符号的BIGINT或DOUBLE值完成，因此你不应该使用大于9223372036854775807(63位)的有符号大整数，除了位函数!注意，当两个参数是INTEGER值时，-、+和*将使用BIGINT运算!这意味着如果你乘2个大整数(或来自于返回整数的函数)，如果结果大于9223372036854775807，你可以得到意外的结果。一个浮点数字，不能是无符号的，对一个单精度浮点数，其精度可以是<=24，对一个双精度浮点数，是在25 和53之间，这些类型如FLOAT和DOUBLE类型马上在下面描述。FLOAT(X)有对应的FLOAT和DOUBLE相同的范围，但是显示尺寸和小数位数是未定义的。在MySQL3.23中，这是一个真正的浮点值。在更早的MySQL版本中，FLOAT(precision)总是有2位小数。该句法为了ODBC兼容性而提供。\r\n\r\nFLOAT[(M,D)] [ZEROFILL]\r\n\r\n一个小(单精密)浮点数字。不能无符号。允许的值是-3.402823466E+38到-1.175494351E-38，0 和1.175494351E-38到3.402823466E+38。M是显示宽度而D是小数的位数。没有参数的FLOAT或有<24 的一个参数表示一个单精密浮点数字。\r\n\r\nDOUBLE[(M,D)] [ZEROFILL]\r\n\r\n一个正常大小(双精密)浮点数字。不能无符号。允许的值是-1.7976931348623157E+308到-2.2250738585072014E-308、 0和2.2250738585072014E-308到1.7976931348623157E+308。M是显示宽度而D是小数位数。没有一个参数的 DOUBLE或FLOAT(X)(25 < = X < = 53)代表一个双精密浮点数字。\r\n\r\nDOUBLE PRECISION[(M,D)] [ZEROFILL]\r\n\r\nREAL[(M,D)] [ZEROFILL]\r\n\r\n这些是DOUBLE同义词。\r\n\r\nDECIMAL[(M[,D])] [ZEROFILL]\r\n\r\n一个未压缩(unpack)的浮点数字。不能无符号。行为如同一个CHAR列：“未压缩”意味着数字作为一个字符串被存储，值的每一位使用一个字符。小数点，并且对于负数，“-”符号不在M中计算。如果D是0，值将没有小数点或小数部分。DECIMAL值的最大范围与DOUBLE相同，但是对一个给定的 DECIMAL列，实际的范围可以通过M和D的选择被限制。如果D被省略，它被设置为0。如果M被省掉，它被设置为10。注意，在MySQL3.22 里，M参数包括符号和小数点。\r\n\r\nNUMERIC(M,D) [ZEROFILL]\r\n\r\n这是DECIMAL的一个同义词。\r\n\r\nDATE\r\n\r\n一个日期。支持的范围是\'1000-01-01\'到\'9999-12-31\'。MySQL以\'YYYY-MM-DD\'格式来显示DATE值，但是允许你使用字符串或数字把值赋给DATE列。\r\n\r\nDATETIME\r\n\r\n一个日期和时间组合。支持的范围是\'1000-01-01 00:00:00\'到\'9999-12-31 23:59:59\'。MySQL以\'YYYY-MM-DD HH:MM:SS\'格式来显示DATETIME值，但是允许你使用字符串或数字把值赋给DATETIME的列。\r\n\r\nTIMESTAMP[(M)]\r\n\r\n一个时间戳记。范围是\'1970-01-01 00:00:00\'到2037年的某时。MySQL以YYYYMMDDHHMMSS、YYMMDDHHMMSS、YYYYMMDD或YYMMDD 格式来显示TIMESTAMP值，取决于是否M是14(或省略)、12、8或6，但是允许你使用字符串或数字把值赋给TIMESTAMP列。一个 TIMESTAMP列对于记录一个INSERT或UPDATE操作的日期和时间是有用的，因为如果你不自己给它赋值，它自动地被设置为最近操作的日期和时间。你以可以通过赋给它一个NULL值设置它为当前的日期和时间。\r\n\r\nTIME\r\n\r\n一个时间。范围是\'-838:59:59\'到\'838:59:59\'。MySQL以\'HH:MM:SS\'格式来显示TIME值，但是允许你使用字符串或数字把值赋给TIME列。\r\n\r\nYEAR[(2|4)]\r\n\r\n一个2或4位数字格式的年(缺省是4位)。允许的值是1901到2155，和0000(4位年格式)，如果你使用2位，1970-2069( 70-69)。MySQL以YYYY格式来显示YEAR值，但是允许你把使用字符串或数字值赋给YEAR列。(YEAR类型在MySQL3.22中是新类型。)\r\n\r\nCHAR(M) [BINARY]\r\n\r\n一个定长字符串，当存储时，总是是用空格填满右边到指定的长度。M的范围是1 ～ 255个字符。当值被检索时，空格尾部被删除。CHAR值根据缺省字符集以大小写不区分的方式排序和比较，除非给出BINARY关键词。NATIONAL CHAR(短形式NCHAR)是ANSI SQL的方式来定义CHAR列应该使用缺省字符集。这是MySQL的缺省。CHAR是CHARACTER的一个缩写。\r\n\r\n[NATIONAL] VARCHAR(M) [BINARY]\r\n\r\n一个变长字符串。注意：当值被存储时，尾部的空格被删除(这不同于ANSI SQL规范)。M的范围是1 ～ 65535个字符。 VARCHAR值根据缺省字符集以大小写不区分的方式排序和比较，除非给出BINARY关键词值。 VARCHAR是CHARACTER VARYING一个缩写。\r\n\r\nTINYBLOB\r\n\r\nTINYTEXT\r\n\r\n一个BLOB或TEXT列，最大长度为255(2^8-1)个字符。\r\n\r\nBLOB\r\n\r\nTEXT\r\n\r\n一个BLOB或TEXT列，最大长度为65535(2^16-1)个字符。\r\n\r\nMEDIUMBLOB\r\n\r\nMEDIUMTEXT\r\n\r\n一个BLOB或TEXT列，最大长度为16777215(2^24-1)个字符。\r\n\r\nLONGBLOB\r\n\r\nLONGTEXT\r\n\r\n一个BLOB或TEXT列，最大长度为4294967295(2^32-1)个字符。\r\n\r\nENUM(\'value1\',\'value2\',...)\r\n\r\n枚举。一个仅有一个值的字符串对象，这个值式选自与值列表\'value1\'、\'value2\', ...,或NULL。一个ENUM最多能有65535不同的值。\r\n\r\nSET(\'value1\',\'value2\',...) set(\'nan\',\'nv\')\r\n\r\n一个集合。能有零个或多个值的一个字符串对象，其中每一个必须从值列表\'value1\', \'value2\', ...选出。一个SET最多能有64个成员。\r\n\r\n38. \r\n','miss_mindada',NULL,'2017-12-11 00:00:00',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,1,NULL,NULL,'../../statics/picture/71501383c3f184e7342c50b535429911.jpg'),(14,'Linux 系统应用编程——网络编程（常用命令解析） ','1、telnet\r\n\r\n      Telnet协议是TCP/IP协议族中的一员，是Internet远程登陆服务的标准协议和主要方式。它为用户提供了在本地计算机上完成远程主机工作的能力。在终端使用者的电脑上使用telnet程序，用它连接到服务器。终端使用者可以在telnet程序中输入命令，这些命令会在服务器上运行，就像直接在服务器的控制台上输入一样。可以在本地就能控制服务器。\r\n\r\n当我们使用Telnet登录进入远程计算机系统时，事实上启动了两个程序：一个是Telnet客户程序，运行在本地主机上；另一个是Telnet服务器程序，它运行在要登录的远程计算机上。\r\n\r\n本地主机上的Telnet客户程序主要完成以下功能：\r\n●建立与远程服务器的TCP联接。\r\n●从键盘上接收本地输入的字符。\r\n●将输入的字符串变成标准格式并传送给远程服务器。\r\n●从远程服务器接收输出的信息。\r\n●将该信息显示在本地主机屏幕上。\r\n\r\n远程主机的“服务”程序通常被昵称为“精灵”，它平时不声不响地守候在远程主机上，一接到本地主机的请求，就会立马活跃起来，并完成以下功能：\r\n●通知本地主机，远程主机已经准备好了。\r\n●等候本地主机输入命令。\r\n●对本地主机的命令作出反应（如显示目录内容，或执行某个程序等）。\r\n●把执行命令的结果送回本地计算机显示。\r\n●重新等候本地主机的命令。\r\n\r\n下面我们利用Telnet 测试我们自己所写的TCP服务器，下面是个TCP服务器的demo，实现\"echo” 功能。\r\n\r\n\r\n\r\n我们可以看到主机IP地址为192.168.3.51，端口号PORT为8888，正在监听中，\r\n\r\n这里我们执行telnet命令\r\n\r\n\r\n\r\n可以看到连接成功，下面我们可以向服务器端发送数据\r\n\r\n\r\n\r\n这里TCP服务器实现的功能是 echo ，就是在客户端输入数据，会显示在下方，图中可以看到效果，下面是服务器端显示\r\n\r\n\r\n\r\n \r\n\r\n2、lsof\r\n\r\nlsof最基本的功能：\r\n   lsof -i:（端口）查看这个端口有那些进程在访问，比如我们上面正在监听的8888端口\r\n\r\n\r\n\r\n这里可以看到我们的TCP服务器和Telnet 都在访问这个端口号。\r\n\r\n \r\n\r\n3、netstat\r\n\r\nNetstat 命令用于显示各种网络相关信息，如网络连接，路由表，接口状态 (Interface Statistics)，masquerade 连接，多播成员 (Multicast Memberships) 等等。\r\n\r\n常见参数\r\n-a (all)显示所有选项，默认不显示LISTEN相关\r\n-t (tcp)仅显示tcp相关选项\r\n-u (udp)仅显示udp相关选项\r\n-n 拒绝显示别名，能显示数字的全部转化成数字。\r\n-l 仅列出有在 Listen (监听) 的服務状态\r\n\r\n-p 显示建立相关链接的程序名\r\n-r 显示路由信息，路由表\r\n-e 显示扩展信息，例如uid等\r\n-s 按各个协议进行统计\r\n-c 每隔一个固定时间，执行该netstat命令。\r\n\r\n提示：LISTEN和LISTENING的状态只有用-a或者-l 才能看到\r\n\r\n \r\n\r\n1. 列出所有端口 (包括监听和未监听的)\r\n  列出所有端口 netstat -a\r\n\r\n\r\n\r\n \r\n\r\n2. 列出所有处于监听状态的 Sockets\r\n  只显示监听端口 netstat -l\r\n\r\n\r\n\r\n可以看到端口8888处于监听状态\r\n','玛丽奥ZJY',NULL,'2017-11-28 00:00:00',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,2,NULL,NULL,'../../statics/picture/b49088133c1af1b68ec23d52601c9ba1.jpg'),(15,'分数','分数格式：a/b\r\n\r\n\r\n\r\n\r\n输入：分子1：2\r\n\r\n          分母1：4\r\n\r\n          分子2：3\r\n\r\n          分母2：9\r\n\r\n\r\n输出：分数1化简结果：1/2\r\n\r\n          分数1 + 分数2 = 5/6\r\n\r\n          分数1 * 分数2 = 1/6\r\n\r\n\r\n\r\n\r\n\r\n\r\n[java] view plain copy \r\n1.public class Main {  \r\n2.  \r\n3.    static Fen huajian(Fen f) {// 分数化简  \r\n4.        // 如果分母为负数，令分子和分母都变为相反数  \r\n5.        if (f.down < 0) {  \r\n6.            f.up = -f.down;  \r\n7.            f.down = -f.down;  \r\n8.        }  \r\n9.        // 如果分子为0，令分母为1  \r\n10.        if (f.up == 0) {  \r\n11.            f.down = 1;  \r\n12.        } else {  \r\n13.            int d = fun(Math.abs(f.up), Math.abs(f.down));// 分子分母的最大公约数  \r\n14.            f.up /= d;// 约去最大公约数  \r\n15.            f.down /= d;  \r\n16.        }  \r\n17.        return f;  \r\n18.    }  \r\n19.  \r\n20.    static int fun(int a, int b) {// 求a和b的最大公约数  \r\n21.        if (b == 0)  \r\n22.            return a;  \r\n23.        else  \r\n24.            return fun(b, a % b);  \r\n25.    }  \r\n26.  \r\n27.    static Fen add(Fen a, Fen b) {// 加法（减法就是把加号换成减号）  \r\n28.        Fen f = new Fen();  \r\n29.        f.up = a.up * b.down + b.up * a.down;  \r\n30.        f.down = a.down * b.down;  \r\n31.        f = huajian(f);  \r\n32.        return f;  \r\n33.    }  \r\n34.  \r\n35.    static Fen multi(Fen a, Fen b) {// 乘法（除法就是把b颠倒再做乘法）  \r\n36.        Fen f = new Fen();  \r\n37.        f.up = a.up * b.up;  \r\n38.        f.down = a.down * b.down;  \r\n39.        f = huajian(f);  \r\n40.        return f;  \r\n41.    }  \r\n42.  \r\n43.    static void show(Fen f) {// 输出分数的正确格式  \r\n44.        f = huajian(f);  \r\n45.        if (f.down == 1)// 整数  \r\n46.            System.out.println(f.up);  \r\n47.        else if (Math.abs(f.up) > f.down) {// 假分数  \r\n48.            System.out.println(f.up / f.down + \" \" + Math.abs(f.up) % f.down + \"/\" + f.down);  \r\n49.        } else {// 真分数  \r\n50.            System.out.println(f.up + \"/\" + f.down);  \r\n51.        }  \r\n52.    }  \r\n53.  \r\n54.    public static void main(String[] args) {  \r\n55.        Scanner in = new Scanner(System.in);  \r\n56.        Fen f1 = new Fen();  \r\n57.        // 分数1  \r\n58.        System.out.print(\"分子1：\");  \r\n59.        f1.up = in.nextInt();  \r\n60.        System.out.print(\"分母1：\");  \r\n61.        f1.down = in.nextInt();  \r\n62.        // 分数2  \r\n63.        Fen f2 = new Fen();  \r\n64.        System.out.print(\"分子2：\");  \r\n65.        f2.up = in.nextInt();  \r\n66.        System.out.print(\"分母2：\");  \r\n67.        f2.down = in.nextInt();  \r\n68.        if (f1.down == 0 || f2.down == 0) {// 分母不能为0  \r\n69.            System.out.println(\"Wrong!\");  \r\n70.            return;  \r\n71.        }  \r\n72.        Fen f3 = new Fen();  \r\n73.        // 化简  \r\n74.        System.out.print(\"分数1化简结果：\");  \r\n75.        show(f1);  \r\n76.        // 相加  \r\n77.        System.out.print(\"分数1 + 分数2 = \");  \r\n78.        show(add(f1, f2));  \r\n79.        // 相乘  \r\n80.        System.out.print(\"分数1 * 分数2 = \");  \r\n81.        show(multi(f1, f2));  \r\n82.    }  \r\n83.  \r\n84.}  \r\n85.  \r\n86.class Fen {  \r\n87.    int up;// 分子  \r\n88.    int down;// 分母  \r\n89.}  \r\n','AI琦玉',NULL,'2017-12-14 00:00:00',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,2,NULL,NULL,'../../statics/picture/cac500abb32429de56fc2020876e8cdc.jpg'),(17,'数据库(Database)是按照数是进行科学研究和决策管理的重要技术手段。','数据库(Database)是按照数据结构来组织、存储和管理数据的仓库，它产生于距今六十多年前，随着信息技术和市场的发展，特别是二十世纪九十年代以后，数据管理不再仅仅是存储和管理数据，而转变成用户所需要的各种数据管理的方式。数据库有很多种类型，从最简单的存储有各种数据的表格到能够进行海量数据存储的大型数据库系统都在各个方面得到了广泛的应用。\r\n在信息化社会，充分有效地管理和利用各类信息资源，是进行科学研究和决策管理的前提条件。数据库技术是管理信息系统、办公自动化系统、决策支持系统等各类信息系统的核心部分，是进行科学研究和决策管理的重要技术手段。','admin',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,13,NULL,NULL,'../../statics/picture/fef6fa64e5d526bc9bc9e1522b9d020d.png'),(18,'数据库(Database)是是进行科学研究和决策管理的重要技术手段。','数据库(Database)是按照数据结构来组织、存储和管理数据的仓库，它产生于距今六十多年前，随着信息技术和市场的发展，特别是二十世纪九十年代以后，数据管理不再仅仅是存储和管理数据，而转变成用户所需要的各种数据管理的方式。数据库有很多种类型，从最简单的存储有各种数据的表格到能够进行海量数据存储的大型数据库系统都在各个方面得到了广泛的应用。\r\n在信息化社会，充分有效地管理和利用各类信息资源，是进行科学研究和决策管理的前提条件。数据库技术是管理信息系统、办公自动化系统、决策支持系统等各类信息系统的核心部分，是进行科学研究和决策管理的重要技术手段。','admin',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,2,NULL,NULL,'../../statics/picture/faab120bd0105d0c68c07447ad7946f1.jpg'),(19,'哈哈,叫兽','                              ka\'j\'s\'d\'f\'h\'ka\'sh\'d\'f\'i\'h\'vkajsdfhkashdfihv ask电话费会计核算空间的花费客户防守对方开价撒娇的发挥佛佛速度佛iuwefuoask的回复可见萨哈电话费教科书地方\r\n                            奥斯丁分iuweifhkjsdaskdjfkjsdf阿萨德恢复iusi毒贩抚平我i额urfoiuwodfs 放松i将对方开价萨克的解放军','admin','0','2018-03-20 13:36:44',NULL,'../../statics/images/fg.png',NULL,NULL,NULL,NULL,NULL,NULL,3,NULL,NULL,NULL),(23,'','','admin1','',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'../../statics/picture/faab120bd0105d0c68c07447ad7946f1.jpg'),(24,'JSP--（out数处对象__向客户端输出数据）','Apache Kafka\r\n一个分布式的消息发布-订阅系统,具有可扩展性、数据分区、低延迟、处理大量不同消费者的能力。\r\n12 •消息队列 \r\n•点对点通讯\r\n •多点广播\r\n •发布/订阅（publish/subscribe)模式 \r\n发送接收者耦合关系松散化，只关心主题和内容，无关地址\r\n •集群（cluster) \r\n域内用集群通道通讯，并且自动负载均衡\r\n\r\n •\r\nApache Kafka\r\n•术语 \r\n\r\n\r\n1.broker:kafka集群包含的一个或多个服务器 \r\n2.Topic:每条发布到kafka集群上的消息都有一个类别 \r\n3.Partition:物理上的概念，每个Topic包含多个Partition \r\n4.Producer \r\n5.Consumer \r\n6.Consumer Group:为每个consumer指定Group，否则默认\r\n\r\n•\r\n交互流程\r\n\r\n\r\n1.kafka在主题中保存消息的消息，生产者向主题写入，消费者从主题读出\r\n\r\n2.信息是字节数组，支持string、json、avro.\r\n\r\n3.Kafka 通过给每一个消息绑定一个键值的方式来保证生产者可以把所有的消息发送到指定位置。\r\n\r\n4.属于某一个消费者群组的消费者订阅了一个主题，通过该订阅消费者可以跨节点地接收所有与该主题相关的消息，每一个消息只会发送给群组中的一个消费者，所有拥有相同键值的消息都会被确保发给这一个消费者。\r\n\r\n5.kafka 设计中将每一个主题分区当作一个具有顺序排列的日志。同处于一个分区中的消息都被设置了一个唯一的偏移量。Kafka 只会保持跟踪未读消息，一旦消息被置为已读状态，Kafka 就不会再去管理它了。Kafka 的生产者负责在消息队列中对生产出来的消息保证一定时间的占有，消费者负责追踪每一个主题 (可以理解为一个日志通道) 的消息并及时获取它们。基于这样的设计，Kafka 可以在消息队列中保存大量的开销很小的数据，并且支持大量的消费者订阅。\r\n \r\n•消息被消费后kafka不是立即被删除的 \r\n对于传统的message queue而言，一般会删除已经被消费的消息，而Kafka集群会保留所有的消息，无论其被消费与否。当然，因为磁盘限制，不可能永久保留所有数据（实际上也没必要），因此Kafka提供两种策略删除旧数据。一是基于时间，二是基于Partition文件大小。例如可以通过配置$KAFKA_HOME/config/server.properties，让Kafka删除一周前的数据，也可在Partition文件超过1GB时删除旧数据，配置如下所示。\r\n •\r\ndelivery gurantee\r\n•at most once:消息可能会丢失，但绝对不会重复传播\r\n •at least one:消息绝对不会丢，但可能重复传输 （默认）\r\n •exactly once:消息肯定会被传输，且仅传输一次\r\n •读完消息先commit再处理消息 ->at most once\r\n •读完消息先处理消息再commit ->at least once (默认)\r\n\r\n\r\n','admin2',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'../../statics/picture/cac500abb32429de56fc2020876e8cdc.jpg');

/*Table structure for table `other` */

DROP TABLE IF EXISTS `other`;

CREATE TABLE `other` (
  `nid` int(20) NOT NULL AUTO_INCREMENT,
  `ntitle` text COMMENT '新闻标题',
  `nconten` text COMMENT '新闻内容',
  `nauthor` varchar(255) DEFAULT NULL COMMENT '新闻作者',
  `ntab` varchar(255) DEFAULT NULL COMMENT '标签',
  `ncreateTime` datetime DEFAULT NULL COMMENT '创建时间',
  `nreads` int(24) DEFAULT NULL COMMENT '阅读量',
  `nimg` varchar(255) DEFAULT NULL COMMENT '图片地址',
  `narticle` varchar(50) DEFAULT NULL COMMENT '文章来源',
  `nfollower` int(20) DEFAULT NULL COMMENT '粉丝',
  `nlike` int(20) DEFAULT NULL COMMENT '喜欢',
  `ndiscuss` int(20) DEFAULT NULL COMMENT '评论',
  `nthumb` int(20) DEFAULT NULL COMMENT '点赞',
  `ngrade` varchar(50) DEFAULT NULL COMMENT '等级',
  `nview` int(20) DEFAULT NULL COMMENT '访问量',
  `nintegration` int(20) DEFAULT NULL COMMENT '积分',
  `nranking` int(30) DEFAULT NULL COMMENT '排名',
  `npicture` varchar(255) DEFAULT NULL COMMENT '广告图片',
  PRIMARY KEY (`nid`)
) ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=utf8;

/*Data for the table `other` */

insert  into `other`(`nid`,`ntitle`,`nconten`,`nauthor`,`ntab`,`ncreateTime`,`nreads`,`nimg`,`narticle`,`nfollower`,`nlike`,`ndiscuss`,`nthumb`,`ngrade`,`nview`,`nintegration`,`nranking`,`npicture`) values (1,'索引表和ES的一点点思考','在电商项目中，物理库存系统是个极其重要的系统，订单支付后，就会开始来占用物理库存。一般情况下，库存系统都是要分库的，因为主要的操作是写操作，例如占用/释放/取消等写操作。使用分库可以降低数据库写的压力。尽管写操作为主，但是读操作也是有的。比如说，库存占用的时候，得先查询是否有库存，而这个查询操作并不都会带上分库因子(用于路由到具体的某个数据库)，而是一些比较宽松的查询条件，这些查询条件对应的数据可能分布在不同的数据库上。这个时候为了查询的方便，会构建一个索引表。这个索引表是存在另外的单独的一个数据库中，不会再分库了的。\r\n这个时候就得从几个DB里面去获取数据，需要遍历DB，相当的麻烦。当然也可以为价格建立索引，加快查询速度，但是要知道，查询的时候，可能还根据其他条件来查询，像上下架状态，商品类别等，不可能都为这些查询条件建立索引，代价太大了，也不合理。引入索引表之后，则不同了。\r\n根据查询条件从索引表中找出主键ID，再根据主键ID从多个数据库中查找数据。这样无论查询条件有哪些，通通只需要根据主键ID查找数据即可。当然索引表的设计不只是像上图那样设计，大概分三种。\r\n如何把业务数据写入到索引表\r\n\r\n--------------------------------------------------------------------------------\r\n\r\n使用MQ\r\n\r\n--------------------------------------------------------------------------------\r\n\r\n一般来说，构建索引数据是使用单独一个应用来做的。比如叫data-index域。这个域会从消息队列中读取消息，用于构建索引数据。当业务数据发生变化后，生产者发送MQ消息到队列上。 \r\n这里的消息设计也分两种情况。一种是消息只是带有数据主键和操作类型(ADD/Update/DELETE),消费者拿到主键后再去DB获取完整的数据并插入到索引表中。另一种方案呢，是消息包含了大部分需要的字段，消费者拿到消息后直接把数据插入到索引表中。这两种消息设计，我在实际项目中都有用过。\r\n直接操作DB\r\n\r\n--------------------------------------------------------------------------------\r\n\r\n这种方案呢就比较粗暴，直接配置一个索引表库的数据源，当业务数据发生变化时，使用Mybatis或者JDBC把数据更新到索引表中。一般不建议这么做，一来构建索引数据的逻辑跟数据的CRUD操作融合在一起了。二来，操作其他数据库的数据，要么通过接口的方式，要么由单独的域来做。建议还是使用MQ的方式来构建索引数据。\r\n\r\n--------------------------------------------------------------------------------\r\n\r\n如何把索引表数据弄到ES上\r\n\r\n--------------------------------------------------------------------------------\r\n\r\n监听数据库表的数据变化\r\n\r\n--------------------------------------------------------------------------------\r\n\r\n像在唯品会这边，自研了一个叫VDP的组件，使用storm job去监听索引表数据的变化，一旦有变化，就把数据同步到队列中，ES直接从队列中获取数据，并存储到ES上。 \r\n这种方案的好处是，我们无需写任何代码，数据自动可以同步到ES上。\r\n\r\n--------------------------------------------------------------------------------\r\n\r\n使用MQ\r\n\r\n--------------------------------------------------------------------------------\r\n\r\n如果公司内部没有开发VDP这样的组件，可以通过发送MQ消息的方式来将索引表的数据同步数据到ES上。\r\n\r\n--------------------------------------------------------------------------------\r\n\r\n让ES暴露CUD接口\r\n\r\n--------------------------------------------------------------------------------\r\n\r\n另外一种方案是，让ES暴露CUD接口，用于同步索引表数据。但是这样就跟ES耦合在一块了。不太推荐这么做。\r\n进一步的思考\r\n\r\n--------------------------------------------------------------------------------\r\n\r\n1、ES不支持Group By这样的操作，所以在构建索引表的时候，可以事先计算好Group By的一些统计数据，并存储到索引表中； \r\n2、一些后台应用中，如果数据库表的数量已经很大，好几个亿了，并且查询的SQL还非常变态，用数据库已经无法支持了，那么可以使用ES，查询速度快，也支持一些统计操作； \r\n3、使用ES输出数据时，也有个坑。经常会拿到脏数据的。例如当数据发送变化后，构建索引数据并把索引数据同步到ES上是需要时间的，但是我们后台通常有将数据下架的操作，下架的操作操作完后，再次点击查询按钮，可能还是看到脏数据，因为数据同步到ES上没那么快。现在我还没想到很好的办法来解决这个问题。欢迎网友提些建议。\r\n','Sam哥哥','运营精选','2018-03-15 00:00:00',2334,NULL,'sdfsfd',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'../../statics/picture/280574d4ca0f081d2751b723c6efc9c2.png'),(2,'神秘！迅雷将推共享计算企业级新品 \r\n','北京时间3月15日上午，迅雷（Nasdaq:XNET）正式公布了2017年第四季度及全年未经审计的财务报告。截止2017年12月31日，迅雷全年总营收约为2亿美元，较2016年增长43.2%。第四季度总营收约为8,240万美元，同比增长128.5%，环比增幅83.9%，是迅雷连续8个季度营收增长以来的最高增幅，也是迅雷自2014年上市以来的最高纪录。\r\n\r\n其中，Q4在线广告收入约为780万美元，同比增长70.6%，环比增长36.0%；包括云计算在内的其他互联网增值服务收入约为5,190万美元，同比增长431.6%，环比增长184.1%。云计算收入同比增长517.2%，环比增长225.8%。\r\n\r\n在取得翻倍的年度增长后，迅雷宣布将在近期把云计算业务场景，从CDN领域扩展至IaaS领域；同时玩客云系统也将进行更新，以优化产品体验。分析认为此举有利于巩固迅雷在云计算行业的创新引领者地位，并扩大在市场占有方面的优势。\r\n\r\n共享计算的升级之作\r\n\r\n共享计算是迅雷首创的一种云计算模式，其中理念与技术都极具创新色彩。推出之后，一度引发行业热议，并最终形成了共享计算浪潮。目前已有多家云计算企业，模仿迅雷的模式推出了自己的共享计算业务。\r\n\r\n但任何一种技术，都必须要有落地的应用场景才可称实用，否则依然是空中楼阁。在共享计算领域，迅雷已经推出了商业化产品星域CDN。历经两年的市场检验，目前星域CDN得到了市场和用户的高度认同，在直播、点播等对流量需求巨大的行业，星域CDN以其出色的性能和高性价比，成为首选的CDN合作品牌，收获了以爱奇艺、小米、触手、熊猫直播、快手等众多头部品牌客户。\r\n\r\n即将推出的新品，会为迅雷拓展更为广阔的市场，更重要的是，将为迅雷的共享计算带来更加丰富的应用场景。这无论是对共享计算当前业绩的提升，还是长远发展的推动，都有很大的好处。\r\n\r\n区块链行业的引领者\r\n\r\n另外迅雷还在财报中透露，目前迅雷已开发了区块链闪电网络技术平台，并开放给第三方合作伙伴，致力于创建更具竞争力的区块链产品应用。据行业人士分析，该项技术能够支撑百万级别的即时结算，弥补当前主流区块链技术计算力偏小、结算周期漫长的缺陷。目前迅雷玩客云生态系统已拥有百万级别的用户规模，如果考虑到以后3500万预约用户的转化，未来整个生态对算力有巨大需求。区块链闪电网络技术平台的推出，将解决这一难题，并帮助迅雷在区块链行业取得更明显的领先优势。\r\n\r\n当前区块链行业发展还处于早期，市场绝大多数都是概念性项目，拥有真实技术能力的寥寥无几，底层技术上更是极度缺乏。行业及政府部门对这一现状均有清醒认识，并开始鼓励对区块链技术特别是底层技术的研发投入。日前央行行长周小川就曾对媒体公开表态，称在区块链发展上将重点放在核心技术的研发上。迅雷推出“区块链闪电网络技术平台”，正是对这一行业趋势的响应。\r\n\r\n此外迅雷也是国内首家开拓区块链2C向应用的企业，旗下玩客奖励计划是国内第一个可落地的区块链大众化应用项目。闪电网络的推出，将有助于迅雷继续保持在区块链行业的领先优势，并推动国内区块链行业整体技术水平的提升，有助于我国在世界区块链技术竞争浪潮中取得优势地位。\r\n\r\n如果说2017年迅雷的财报，还算一份成绩不错的市场“答卷”，那新公布的两项新产品，就是迅雷对未来战略的勾画。已取得的成绩已经属于过去，真正充满想象空间的，还是未来的诸多可能。\r\n','业界要闻','运营精选','2018-03-14 00:00:00',44,NULL,'scdccs',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'../../statics/picture/af8a709a82143a435c2505c1fe9acc97.png'),(3,'大数据存储平台之异构存储实践 \r\n','经常做数据处理的伙伴们肯定会有这样一种体会：最近一周内的数据会被经常使用到，而比如最近几周的数据使用率会有下降，每周仅仅被访问几次；在比如3月以前的数据使用率会大幅下滑，存储的数据可能一个月才被访问几次。这就产生了一种热和冷数据，对需要频繁访问的数据我们称之为“热”数据，反之我们称之为”冷”数据，而处于中间的数据我们称之为”温”数据。在数据被视为公司资产的时代，每个公司基本都会保存最近数年的数据，而这些数据尤其是冷数据的累积也给存储平台带来了甜蜜的负担。下面就来分享下如何解决这些“负担”。首先如何定义数据为冷热数据呢，eBay公司根据数据年龄和使用频率来定义不失为一种办法\r\n\r\n从Hadoop2.6开始，HDFS更好的支持了这种冷热数据的分离存储，我们可以按HDFS路径指定其存储策略，目前HDFS支持的存储策略有：HOT、WARM、COLD、All_SSD、One_SSD、Lazy_Persist,我们着重介绍SSD相关的存储策略，具体如下：\r\n•All_SSD - 用于将所有副本存储在SSD中\r\n •One_SSD - 用于将其中一个副本存储在SSD中。剩余的副本存储在DISK中\r\n •Lazy_Persist - 用于在内存中写入单个副本的块。该副本首先写入RAM_DISK，然后在DISK中延续\r\n\r\n创建文件或目录时，其存储策略未指定。可以使用“hdfs dfsadmin -setStoragePolicy ”命令指定存储策略。文件或目录的有效存储策略由以下规则解决。\r\n\r\n1.  如果文件或目录特定于存储策略，则返回。\r\n\r\n2.  对于未指定的文件或目录，如果是根目录，则返回默认存储策略。否则，返回其父级的有效存储策略。\r\n\r\n我们在实践过程中，因为有一部分实时分析的需求，一部分是历史数据的保存，历史数据很少参与计算，只需偶尔查询会用到。那么对于历史数据来说，我们可以使用一批计算能力较弱，而硬盘较多、容量较大的SATA盘，而实时分析的场景，需要高性能的计算力和硬盘吞吐能力，我们选用SSD硬盘来支撑，此外HDFS还提供了内存存储类型，但我们的内存还是有限，暂未使用到。实际上，我们的每台服务器的12块硬盘slot中有3个是SSD，其余9个是SATA。我们实践结果表明，使用这种策略的效果比以前好了4倍以上。\r\n\r\n要使用存储策略，我们需要在在每个数据节点上hdfs-site.xml中参数dfs.datanode.data.dir配置的由逗号分隔的存储位置使用的存储类型进行标记。例如：\r\n\r\n1.      使用[DISK]file:///dfs/dn来标识这个存储位置为普通硬盘\r\n\r\n2.      使用[SSD]file:/// dfs/dn来标识这个存储位置为SSD硬盘\r\n\r\n此外，默认情况下的存储格式为DISK。\r\n\r\n \r\n\r\n下面介绍设置存储策略命令：\r\n\r\n         hdfsstoragepolicies -setStoragePolicy -path <path> -policy <policy>\r\n\r\n \r\n\r\n相应的获取存储策略命令为：\r\n         hdfs storagepolicies -getStoragePolicy -path <path>\r\n \r\n\r\n \r\n\r\n总结下：我们可以在一个限定的Hadoop集群中进行设置不同的磁盘使用不同的存储策略，还可以利用API将数据存储到不同的存储层。\r\n\r\n注：HDFS新加的ARCHIVE存储类型, 它是一种支持PB级的高容量存储但很少的 计算能力，用于归档数据使用，从上图可以看出冷数据适合使用archive存储类型','代立冬 ','运营精选','2018-03-15 00:00:00',322,NULL,'jufgf',NULL,NULL,NULL,NULL,NULL,3,NULL,NULL,'../../statics/picture/36a508d94ba797fc252b67261cf4fde9.jpg'),(4,'Android开发中遇到关于Byte位运算通信协议类项目的文档解读、分析 ','Android开发中经常会遇到Byte位运算通信协议的项目，一个简单的Byte可能隐藏着极其复杂的数据，需要根据既定的协议来解析和封装。那么开发中要怎么解决这类项目呢，还是要多熟悉文档和源码。\r\n\r\n这类项目笔者15年的时候接触过，是独立开发的。因为当初入行不到两年，所以接触的这类项目可以说是初次接触，看个文档对于那时很菜鸟的我来说简直是要了我的命，但是客户的对接工程师是个C老鸟，人也不错，我有问题就会找他帮忙，而且他也不吝赐教，这让笔者倍感欣慰。然而今天又遇到了一个这样的项目，就想着写一篇博客笔记来记录这个分析的过程，避免以后笔者或读者再遇到这类项目时无从下手。\r\n\r\n首先笔者介绍开发中常接触到的一些位运算符号。\r\n\r\n<<（左移）\r\n\r\n\r\n\r\n[java] view plain copy \r\n1./** \r\n2. * 逻辑运算符 \r\n3. *  \r\n4. * @author Engineer-Jsp \r\n5. *  运算符：<< \r\n6. */  \r\n7.public static void ByteCalc() {  \r\n8.    // 0x01为1的16进制，运行结果是2  \r\n9.    System.out.println(0x01 << 1);  \r\n10.}  \r\n\r\n该段代码的意思是将1向左移1位，先将16进制的0x01转换成10进制即1，运行结果为2。\r\n\r\n解析，先将1转换为二进制数据，然后向左(从右边开始，依次往左)位移1位，在低位处补0：\r\n\r\n左移前：0000 0000 0000 0000 0000 0000 0000 0001\r\n\r\n\r\n左移后：0000 0000 0000 0000 0000 0000 0000 0010\r\n\r\n将二进制数据 0000 0000 0000 0000 0000 0000 0000 0010 转换为10进制数据，结果为2。 \r\n\r\n\r\n>>（右移）\r\n\r\n\r\n\r\n[java] view plain copy \r\n1./** \r\n2. * 逻辑运算符 \r\n3. *  \r\n4. * @author Engineer-Jsp \r\n5. *  运算符：>> \r\n6. */  \r\n7.public static void ByteCalc() {  \r\n8.    // 0x02为2的16进制，运行结果是1  \r\n9.    System.out.println(0x02 >> 1);  \r\n10.}  \r\n\r\n该段代码的意思是将2向右移1位，先将16进制的0x02转换成10进制即2，运行结果为1。\r\n\r\n解析(不考虑负数位移)，先将2转换为二进制数据，然后向右(从左边开始，依次往右)位移1位，高位补0：\r\n\r\n右移前：0000 0000 0000 0000 0000 0000 0000 0010\r\n\r\n\r\n右移后：0000 0000 0000 0000 0000 0000 0000 0001\r\n\r\n将二进制数据 0000 0000 0000 0000 0000 0000 0000 0001 转换为10进制数据，结果为1。\r\n\r\n&（与）\r\n\r\n规则：当相同的位上均为1时结果为1，否则为0。\r\n\r\n\r\n\r\n[java] view plain copy \r\n1./** \r\n2. * 逻辑运算符 \r\n3. *  \r\n4. * @author Engineer-Jsp \r\n5. *  运算符：& \r\n6. */  \r\n7.public static void ByteCalc() {  \r\n8.    // 0x02为2的16进制，运行结果是0  \r\n9.    System.out.println(0x02 & 1);  \r\n10.}  \r\n\r\n该段代码的意思是将2和1进行&的位运算，先将16进制的0x02转换成10进制即2，运行结果为0。\r\n\r\n解析，先将2转换为二进制数据，然后将1也转换为二进制数据再进行与运算：\r\n\r\n2的二进制：0000 0000 0000 0000 0000 0000 0000 0010\r\n\r\n1的二进制：0000 0000 0000 0000 0000 0000 0000 0001\r\n\r\n&运算后的二进制：0000 0000 0000 0000 0000 0000 0000 0000\r\n\r\n将二进制数据 0000 0000 0000 0000 0000 0000 0000 0000 转换为10进制数据，结果为0。\r\n\r\n\r\n|（或）\r\n\r\n规则：当两边操作数的位有一边为1时，结果为1，否则为0。\r\n\r\n\r\n\r\n[java] view plain copy \r\n1./** \r\n2. * 逻辑运算符 \r\n3. *  \r\n4. * @author Engineer-Jsp \r\n5. *  运算符：| \r\n6. */  \r\n7.public static void ByteCalc() {  \r\n8.    // 0x02为2的16进制，运行结果是3  \r\n9.    System.out.println(0x02 | 1);  \r\n10.}  \r\n\r\n该段代码的意思是将2和1进行|的位运算，先将16进制的0x02转换成10进制即2，运行结果为3。\r\n\r\n解析，先将2转换为二进制数据，然后将1也转换为二进制数据再进行或运算：\r\n\r\n2的二进制：0000 0000 0000 0000 0000 0000 0000 0010\r\n\r\n1的二进制：0000 0000 0000 0000 0000 0000 0000 0001\r\n\r\n|运算后的二进制：0000 0000 0000 0000 0000 0000 0000 0011\r\n\r\n将二进制数据 0000 0000 0000 0000 0000 0000 0000 0011 转换为10进制数据，结果为3。\r\n\r\n^（异或）\r\n\r\n规则：两边的位不同时，结果为1，否则为0。\r\n\r\n\r\n\r\n[java] view plain copy \r\n1./** \r\n2. * 逻辑运算符 \r\n3. *  \r\n4. * @author Engineer-Jsp \r\n5. *  运算符：^ \r\n6. */  \r\n7.public static void ByteCalc() {  \r\n8.    // 0x02为2的16进制，运行结果是3  \r\n9.    System.out.println(0x02 ^ 1);  \r\n10.}  \r\n\r\n该段代码的意思是将2和1进行^的位运算，先将16进制的0x02转换成10进制即2，运行结果为3。\r\n\r\n解析，先将2转换为二进制数据，然后将1也转换为二进制数据再进行异或运算：\r\n\r\n\r\n2的二进制：0000 0000 0000 0000 0000 0000 0000 0010\r\n\r\n1的二进制：0000 0000 0000 0000 0000 0000 0000 0001\r\n\r\n^运算后的二进制：0000 0000 0000 0000 0000 0000 0000 0011\r\n\r\n将二进制数据 0000 0000 0000 0000 0000 0000 0000 0011 转换为10进制数据，结果为3。\r\n\r\n关于常用的位运算就介绍到这里，下面介绍项目案例，根据文档需求，分析位的运算。\r\n\r\n\r\n\r\n看上述表中的状态字段，DWORD为无符号四字节整型（双字，32 位），那怎么对需求文档中所述，对位0进行赋值来表示定位状态、对位1赋值表示经度类型......\r\n\r\n分析：既然DWORD为无符号四字节整型（双字，32 位），又因为Java int类型占4个字节，所以把其视为Java中的int类型。\r\n\r\n处理：Java中一个Byte占一个字节(8个位)，把int拆分成4个Byte进行重组赋值来表示位的变化。\r\n\r\n\r\n\r\n[java] view plain copy \r\n1./** \r\n2. * 位赋值运算 \r\n3. *  \r\n4. * @author Engineer-Jsp \r\n5. */  \r\n6.public static void ByteCalc() {  \r\n7.    // 将Bytes(由4个Byte组成的Byte数组)视为一个int类型的值  \r\n8.    byte[]Bytes = new byte[4];  \r\n9.      \r\n10.    // 伪代码假设满足条件：定到位置  \r\n11.    if(定位成功)  \r\n12.        //表示对位0进行赋值  \r\n13.        Bytes[3] |= 0x01;  \r\n14.      \r\n15.    // 伪代码假设满足条件：西经  \r\n16.        if(西经)  \r\n17.            //表示对位1进行赋值  \r\n18.            Bytes[3] |= 0x02;  \r\n19.          \r\n20.        // 伪代码假设满足条件：南纬  \r\n21.        if(南纬)  \r\n22.            //表示对位2进行赋值  \r\n23.            Bytes[3] |= 0x04;  \r\n24.          \r\n25.        // 伪代码假设满足条件：震动  \r\n26.        if(震动)  \r\n27.            //表示对位8进行赋值  \r\n28.            Bytes[2] |= 0x01;  \r\n29.          \r\n30.        // 伪代码假设满足条件：切断电源  \r\n31.        if(切断电源)  \r\n32.        //表示对位9进行赋值  \r\n33.            Bytes[2] |= 0x02;  \r\n34.          \r\n35.        // 伪代码假设满足条件：Acc 开  \r\n36.        if(Acc 开)  \r\n37.            //表示对位10进行赋值  \r\n38.            Bytes[2] |= 0x04;  \r\n39.}  \r\n\r\n上述代码是分别对 位0~位2、位8~位10 进行了赋值，下面用图加文字分析来介绍为什么要这么写。\r\n\r\n\r\n\r\n\r\n见上图，笔者进行逐步分解介绍：\r\n\r\n1.Bytes是长度为4(即4个16进制字节组成)的字节数组，因为是空数组，所以元素值均为0。\r\n\r\n2.Bytes[0]~Bytes[3]分别为Bytes数组的元素，每个元素对应一个16进制的字节。\r\n\r\n3.每个字节对应Bytes(看作4个字节的int类型，总共32位)的8个位，升序排列从右开始，依次往左。\r\n\r\n4.0000 0000 0000 0000 0000 0000 0000 0000二进制数据由int类型的值即十进制的0转换而来。\r\n\r\n5.0000 0000 0000 0000 0000 0000 0000 0000二进制数据顶部的小字体的数字就代表着位，最后一位应该是31，因为是从0开始的，这里笔者作图的时候写错了，所以最后一位应该是31。\r\n\r\n搞清楚这个之后，开始详细介绍伪代码的位运算。\r\n\r\n因为Bytes是长度为4(即4个16进制字节组成)的字节数组，因为是空数组，所以元素值均等于0，转换成int也是0，再将0转换成二进制数据 0000 0000 0000 0000 0000 0000 0000 0000。\r\n\r\n\r\n①位0表示定位状态：\r\n\r\n位计算：\r\n\r\n因为位0~位2处于Bytes数组元素的第3个即Bytes[3](从0开始，所以元素下标为0~3)，所以只需要将位0进行赋值即可。\r\n\r\nBytes[3]|=0x01;\r\n\r\n\r\nBytes[3]= 0x00 = 0 = 0000 0000 0000 0000 0000 0000 0000 0000 将第三个16进制元素byte转换成10进制，然后再将其转换成2进制\r\n\r\nBytes[3]二进制：0000 0000 0000 0000 0000 0000 0000 0000 \r\n\r\n\r\n0x01二进制     ：0000 0000 0000 0000 0000 0000 0000 0001 \r\n\r\n\r\n或运算结果：0000 0000 0000 0000 0000 0000 0000 0001\r\n\r\n结果说明 位0 已为1，表示定位成功。\r\n\r\n\r\n②位1表示经度类型：\r\n\r\n位计算：\r\n\r\n因为位0~位2处于Bytes数组元素的第3个即Bytes[3](从0开始，所以元素下标为0~3)，所以只需要将位1进行赋值即可。\r\n\r\nBytes[3]|=0x02;\r\n\r\n\r\nBytes[3]= 0x00 = 0 = 0000 0000 0000 0000 0000 0000 0000 0000 将第三个16进制元素byte转换成10进制，然后再将其转换成2进制\r\n\r\n\r\nBytes[3]二进制：0000 0000 0000 0000 0000 0000 0000 0000 \r\n\r\n\r\n0x02二进制     ：0000 0000 0000 0000 0000 0000 0000 0010 \r\n\r\n\r\n或运算结果：0000 0000 0000 0000 0000 0000 0000 0010\r\n\r\n结果说明 位1 已为1，表示经度为西经。\r\n\r\n\r\n③位2表示纬度类型：\r\n\r\n位计算：\r\n\r\n因为位0~位2处于Bytes数组元素的第3个即Bytes[3](从0开始，所以元素下标为0~3)，所以只需要将位2进行赋值即可。\r\n\r\nBytes[3]|=0x04;\r\n\r\n\r\nBytes[3]= 0x00 = 0 = 0000 0000 0000 0000 0000 0000 0000 0000 将第三个16进制元素byte转换成10进制，然后再将其转换成2进制\r\n\r\n\r\nBytes[3]二进制：0000 0000 0000 0000 0000 0000 0000 0000 \r\n\r\n\r\n0x04二进制     ：0000 0000 0000 0000 0000 0000 0000 0100 \r\n\r\n\r\n或运算结果：0000 0000 0000 0000 0000 0000 0000 0100\r\n\r\n结果说明 位2 已为1，表示纬度为南纬。\r\n\r\n\r\n④位8表示防盗震动报警状态：\r\n\r\n位计算：\r\n\r\n因为位8~位10处于Bytes数组元素的第2个即Bytes[2](从0开始，所以元素下标为0~3)，所以只需要将位8进行赋值即可。\r\n\r\nBytes[2]|=0x01;\r\n\r\n\r\nBytes[2]= 0x00 = 0 = 0000 0000 0000 0000 0000 0000 0000 0000 将第三个16进制元素byte转换成10进制，然后再将其转换成2进制\r\n\r\n\r\nBytes[2]二进制：0000 0000 0000 0000 0000 0000 0000 0000 \r\n\r\n\r\n0x01二进制     ：0000 0000 0000 0000 0000 0000 0000 0001 \r\n\r\n\r\n或运算结果：0000 0000 0000 0000 0000 0000 0000 0001\r\n\r\n结果说明 位8 已为1，表示报警。\r\n\r\n\r\n\r\n\r\n\r\n⑤位9表示终端电源状态：\r\n\r\n位计算：\r\n\r\n因为位8~位10处于Bytes数组元素的第2个即Bytes[2](从0开始，所以元素下标为0~3)，所以只需要将位9进行赋值即可。\r\n\r\nBytes[2]|=0x02;\r\n\r\n\r\nBytes[2]= 0x00 = 0 = 0000 0000 0000 0000 0000 0000 0000 0000 将第三个16进制元素byte转换成10进制，然后再将其转换成2进制\r\n\r\n\r\nBytes[2]二进制：0000 0000 0000 0000 0000 0000 0000 0000 \r\n\r\n\r\n0x02二进制     ：0000 0000 0000 0000 0000 0000 0000 0010 \r\n\r\n\r\n或运算结果：0000 0000 0000 0000 0000 0000 0000 0010\r\n\r\n结果说明 位9 已为1，表示电源被切断。\r\n\r\n\r\n\r\n\r\n\r\n⑥位10表示Acc状态：\r\n\r\n位计算：\r\n\r\n因为位8~位10处于Bytes数组元素的第2个即Bytes[2](从0开始，所以元素下标为0~3)，所以只需要将位10进行赋值即可。\r\n\r\nBytes[2]|=0x04;\r\n\r\n\r\nBytes[2]= 0x00 = 0 = 0000 0000 0000 0000 0000 0000 0000 0000 将第三个16进制元素byte转换成10进制，然后再将其转换成2进制\r\n\r\n\r\nBytes[2]二进制：0000 0000 0000 0000 0000 0000 0000 0000 \r\n\r\n\r\n0x04二进制     ：0000 0000 0000 0000 0000 0000 0000 0100 \r\n\r\n\r\n或运算结果：0000 0000 0000 0000 0000 0000 0000 0100\r\n\r\n结果说明 位10 已为1，表示Acc开。\r\n\r\n6个位的值全部赋值完后，Bytes数组的元素应为：{ 0x00 , 0x00 , 0x07 , 0x07 }\r\n\r\n转换成10进制后应为：{ 0 , 0 , 7 , 7 }\r\n\r\n\r\n\r\n[java] view plain copy \r\n1.// 输出结果：{0,0,7,7}  \r\n2.for (int i = 0; i < Bytes.length; i++) {  \r\n3.    int v = Bytes[i] & 0xFF;  \r\n4.    if (i == Bytes.length - 1) {  \r\n5.        result += v + \"}\";  \r\n6.    } else {  \r\n7.        result += v + \",\";  \r\n8.    }  \r\n9.}  \r\n\r\n若转换成2进制后应为(简写)：{ 0 , 0 , 111 , 111 }\r\n\r\n再将Bytes转换成10进制应为：1799；1799 对应的二进制数据为：0000 0000 0000 0000 0000 0111 0000 0111\r\n\r\n红色的部分正好对应 位0~位2、位8~位10。\r\n\r\n至此，关于Byte通信协议的介绍就结束了，如发现其中存在问题的，欢迎随时批评指正，以免误人子弟。因为本博客的目的是帮助更多的人，而不是害读者，所以各位读者发现问题请在评论区评论指出，谢谢大家！\r\n','Engineer-Jsp ','运营精选','2018-03-08 00:00:00',322,NULL,'jufgf',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'../../statics/picture/633575ce3e5cdf77ff89a22e747b5bb3.jpg'),(5,'因为太难而被禁用的17道Google面试题 \r\n','vddvrt即使是最成功的公司，它的招聘过程有时也会很不靠谱，经常会出一些奇怪的看似没有答案的面试问题，但标准答案却让应聘者还没来得及接近「起跑线」就被「退赛」了。Google 曾经就是这样的公司，招聘人员会出一些难为应聘者的高质量问题。事实上，有些问题实在是太古怪了，最终被完全禁用。2009 年，西雅图工作教练 Lewis 列出了他的客户被 Google 公司问过的 140 个问题，并选出了 17 个最让人抓狂的问题。这些问题已经被禁用了，Google 公司未来的新员工应该感到庆幸。下面让我们看看这些让人崩溃的问题吧。1、清洗所有西雅图的窗户需要多少钱？2、为什么井盖是圆的？3、如何在不直接询问你朋友 Bob 的情况下，确认他是否有你的电话号码？你必须在卡片上写下问题并将卡片给 Eve，Eve 将卡片转交给 Bob 并将问题的回复转达给你。你不能直接将问题写在卡片上，但要确保让 Bob 对回复的信息进行加密，将电话号码对 Eve 保密。4、全世界有多少钢琴调音师？5、在一个有 100 对已婚夫妇的村庄里，每个男人都欺骗他的妻子村里的每个妇人都会立刻知道其他妇人的丈夫是否欺骗了他的妻子，但不知道自己的丈夫有没有欺骗自己。村里规定不允许私通。任何妇人只要能证明她的丈夫对她不忠，她的丈夫就必须在当天被处死。村里的妇人们都遵守这项规定。有一天，村庄的女王宣布至少有一个丈夫不忠。究竟发生了什么？6、一个人把车推到了一家旅馆并失去了他的财产，发生了什么？7、钟表的指针每天重叠多少次？8、美国每年生产多少个真空装置？9、为旧金山设计一个疏散计划10、解释一下「死牛肉」的重要性11、如果一个人在电话上拨了一串数字，这些数字最有可能组成什么单词或是字符串？12、如果保证人体密度不变的情况下，将你缩小到一个硬币的大小，并且被扔进了一个空的玻璃搅拌机中，搅拌机将在 60 秒之后启动，你将怎么做？13、一辆校车能装多少个高尔夫球？14、两个鸡蛋和 100 层大楼的问题你拥有两个鸡蛋，鸡蛋从某一特定楼层及以上的楼层扔下会破粹，从以下的楼层扔下会完好无损。两个鸡蛋完全相同。现在有一个 100 层的大楼，只有两个鸡蛋可以使用，你需要找出让鸡蛋摔碎的临界楼层，问题是你将扔多少次鸡蛋？15、你必须从 A 点到达 B 点，但你并不清楚能否到达，你将怎么办？16、你和你的朋友一起参加一个派对，同时出席的一共有十个人（包括你和你的朋友）17、用三句话向你八岁大的侄子解释什么是数据库','运维派V','运营精选','2018-03-14 00:00:00',364,NULL,'fggf',NULL,NULL,NULL,NULL,NULL,2,NULL,NULL,'../../statics/picture/f1c9aca64561ae2b6d26ea3d6abc4588.jpg'),(6,'不只是英特尔，AMD也被爆出硬件安全漏洞 \r\n','以色列硬件安全公司CTS Labs于日前发布了一份白皮书，指出AMD芯片存在四类共计12个安全漏洞。如果得到证实，则表明AMD设计的处理器架构也存在安全问题。\r\n\r\n\r\n\r\n\r\n在该白皮书中，CTS Labs列举了一系列能够获得运行AMD“Zen”处理器架构的计算机访问权的新方法。在最坏的情况下，该公司所描述的安全漏洞能够让攻击者绕过防止篡改计算机操作系统的安全防范措施，并且植入无法检测或删除的恶意软件。\r\n\r\n\r\n\r\n\r\n“我们相信这些漏洞会使应用AMD芯片的计算机网络面临相当大的风险，”CTS研究人员在发表的文章中写道，“这些安全漏洞向恶意软件敞开了大门，而植入的恶意软件可能在计算机重新启动或重新安装操作系统后仍然存在，而大多数计算机终端的安全解决方案几乎无法检测到恶意软件的存在，这可能会让攻击者深入到目标计算机系统中。“\r\n\r\n\r\n\r\n\r\n\r\n\r\n图示：CTS研究人员在白皮书中列举的四类安全问题\r\n\r\n\r\n\r\n\r\nCTS的研究人员似乎已经发现了AMD的Zen体系架构芯片的真正脆弱点，并将其分解为四类攻击，分别称为Ryzenfall，Masterkey，Fallout和Chimera。\r\n\r\n\r\n\r\n\r\n他们说，前三种攻击技术利用了AMD安全处理器中的安全漏洞，安全处理器是AMD芯片中的一个独立处理器，旨在对其操作执行独立的安全检测。如果黑客拥有目标机器的管理权限，类似于CTS的攻击允许他们在这些安全处理器上运行自己的代码。这将能够让攻击者绕过保护加载操作系统完整性的安全启动保护措施以及防止黑客窃取密码的Windows系统凭证防护功能。这些攻击甚至可能让黑客在安全处理器中植入自己的恶意软件，在完全躲避杀毒软件的同时监控计算机的其他元素，甚至于在重新安装计算机的操作系统后仍然存在。\r\n\r\n\r\n\r\n\r\n在这四次攻击中的最后一种，也就是Chimera攻击中，研究人员表示，他们利用的不仅仅是漏洞，而是一个后门。CTS表示，它发现AMD使用ASMedia出售的芯片组来处理外围设备的操作。研究人员说，他们早先发现，ASMedia的芯片组具有这样一个功能，允许有人通过电脑在外围芯片上运行代码，这似乎是开发人员留下的调试机制。这种调试后门显然不仅仅存在于ASMedia的产品中，而且还存在于AMD的产品中。\r\n\r\n\r\n\r\n\r\n因此，在机器上具有管理权限的黑客可能会在那些不太起眼的外设芯片中植入恶意软件，从而读取计算机的内存或网络数据。由于后门内置于芯片的硬件设计中，因此可能无法用单纯的软件补丁来修复。CTS Labs首席执行官Ido Li On表示：“它是芯片制造本身的问题。“这可能意味着，解决AMD安全问题的唯一解决方案是完全更换硬件。\r\n\r\n\r\n\r\n\r\n虽然CTS并未公开披露其攻击行为的任何细节，但它确实与总部位于纽约的安全公司Trail of Bits私下分享这些信息，后者也基本上证实了CTS的调查结果。“无论如何，他们的确发现了像描述那样的安全漏洞，” Trail of Bit创始人Dan Guido表示，“如果您已经在某种程度上接管了一台计算机，这些安全漏洞将允许你扩展该访问权限，或者隐藏到通常认为不存在恶意软件的部分处理器中。”\r\n\r\n\r\n\r\n\r\n需要注意的是，所有这四种攻击都需要管理权限，这意味着为了执行它们，黑客需要事先对设备进行特殊访问。也就说，即便没有进行Ryzenfall、Masterkey、Fallout以及Chimera这四类攻击，也可能已经对目标计算机系统造成了各种破坏。\r\n\r\n\r\n\r\n\r\nGuido指出，Chimera后门可能是CTS攻击中最严重和最难修补的部分，但他也表示，他无法仅凭CTS的发现证实后门访问计算机的程度。他说：“要想知道如何利用攻击手段，需要更多的努力来弄清楚。”\r\n\r\n\r\n\r\n\r\n但一个不寻常的举动是，CTS研究人员在公开信息前一天才与AMD分享他们的全部发现。通常安全漏洞的披露窗口会持续数月，旨在为受影响的制造商提供解决问题的机会。此外在发表的文章中几乎没有任何技术细节可以让任何人重现他们描述的攻击。而且CTS在其网站上包含一个不寻常的免责声明，报告可能涉及到对“公司证券表现的经济利益”产生影响，这引起安全分析师的担忧，认为CTS可能从AMD股价的下跌中受益。\r\n\r\n\r\n\r\n\r\n“由于我不认为他们的行为是真诚的，并且缺乏细节使得其无法验证，所以我们很难全面解析它，“阿姆斯特丹自由大学硬件安全研究员Ben Gras写道，”这让我担心，这种影响可能被人为夸大了。”\r\n\r\n\r\n\r\n\r\n谷歌安全研究员Arrigo Triulzi在Twitter上用简单的语言描述了这项研究：“过度炒作超出了信念。”\r\n\r\n\r\n\r\n\r\n而AMD则针对该报告发布声明称，“在AMD公司，安全是首要任务。因为新的安全风险不断出现，我们一直在努力确保用户安全，”AMD在其自己对WIRED的简短声明中写道，“我们正在调查刚刚收到的这份报告，以了解研究结果的方法和价值。”\r\n\r\n\r\n\r\n\r\nCTS表示，之所以没有公开技术细节是为了不让通其他黑客利用其发现的安全漏洞和后门。“我们不会让任何人处于危险之中，”CTS联合创始人Yaron Luk-Zilberman表示，“我们原本没有意向为公众提供完整的技术细节，我们只会为那些能够提供安全问题解决方案的公司提供技术细节。”\r\n','大数网','运营精选','2018-03-13 00:00:00',524,NULL,'ascd',NULL,NULL,NULL,NULL,NULL,1,NULL,NULL,'../../statics/picture/3b1fca6be181efb23a9d75629a46c755.jpg'),(7,'AI2想从常识测试开始让AI理解物理世界，数据集已公布 \r\n','林鳞 编译自 MIT Technology Review\r\n量子位 出品 | 公众号 QbitAI\r\n\r\n\r\n\r\n到现在，智能音箱还是没能摆脱“智障”的魔咒。或许，人工智能需要一种全新的方法学习语言。\r\n\r\n近日，坐落在西雅图的艾伦人工智能研究所(AI2)的研究人员发起了新项目AI2逻辑挑战（AI2 Reasoning Challenge，ARC)，他们将用小学难度水平的知识考验AI系统，看看它们的常识水平在什么“段位”。\r\n\r\n在这项测试中，回答每一个问题都需都要了解物理世界的规律，否则将很难答对。\r\n\r\n这是一些怎样的神奇题目？来，我们现在看一道真题。\r\n\r\n\r\n下面哪个选项中的物体，不是由自然生长的材料制成的？\r\n\r\nA. 棉衬衫\r\nB. 木椅\r\nC. 塑料勺子\r\nD. 草编的储物筐\r\n\r\n对人类来说，这道题再简单不过。即使是小孩子，也能根据“常识”得到正确答案。\r\n\r\n但对AI来说，难就难在这“常识”二字上。\r\n\r\n“我们需要用常识填充语言和所能看到的世界之间的空白，从而组合成一个连贯的图景，”ARC项目负责人Peter Clark说，“机器没有这种常识，所能看到的全部世界就是能写出来的那部分，因此通常会忽略一段文字背后的许多含义和假设。”\r\n\r\n\r\n\r\n这项新测试，也是AI2最新计划的一部分，即让AI系统真正了解世界。虽然现在经常能看到“机器的理解能力超过人类”的类似报道，但从真正意义上说，机器和人类的差别还远得很。\r\n\r\n就拿今年一月微软和阿里巴巴的AI在斯坦福问答数据集的表现超过人类这事来说，这些AI还无法回答更复杂的问题，也很难利用其他的知识来源。\r\n\r\n再比如，昨天微软宣布人工智能新闻翻译可以媲美人类，但如果处理如医学注释等不熟悉领域的对话或文本时，AI还将再次陷入困境。\r\n\r\n目前，ARC项目的进展和相关的数据集已经公开，感兴趣同学可以移步ARC项目的官网看看AI2是怎样测试AI对物理世界的理解的。\r\n\r\n大侠请接好项目地址：\r\n\r\nhttp://data.allenai.org/arc/\r\n\r\n还有一份AI2给出的相关研究报告，也请一同接好：\r\n\r\nhttp://ai2-website.s3.amazonaws.com/publications/AI2ReasoningChallenge2018.pdf\r\n\r\n— 完 —\r\n\r\n加入社群\r\n\r\n量子位AI社群15群开始招募啦，欢迎对AI感兴趣的同学，加小助手微信qbitbot6入群；\r\n\r\n\r\n\r\n\r\n此外，量子位专业细分群(自动驾驶、CV、NLP、机器学习等)正在招募，面向正在从事相关领域的工程师及研究人员。\r\n\r\n\r\n\r\n\r\n进群请加小助手微信号qbitbot6，并务必备注相应群的关键词~通过审核后我们将邀请进群。（专业群审核较严，敬请谅解）\r\n\r\n诚挚招聘\r\n\r\n量子位正在招募编辑/记者，工作地点在北京中关村。期待有才气、有热情的同学加入我们！相关细节，请在量子位公众号(QbitAI)对话界面，回复“招聘”两个字。\r\n','量子位 ','业界最新 ','2018-03-12 00:00:00',3,NULL,'fvhfgd',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'../../statics/picture/80f783d3a86393bd2bfa091c9c9d9323.png'),(8,'秘密：从程序员到领导者的微妙之处','读到一篇关于程序员、领导力和领导者的好文章，翻译过来分享下。借用一句文中的话：“好吧，我只是个程序员，为什么需要领导？” ，读完你就知道了。\r\n\r\n\r\n--------------------------------------------------------------------------------\r\n\r\n做一个优秀的领导者可能不是大部分程序员会立即认同的东西。许多人的脑海里立即浮现出这样一种形象：宏大的讲台与高昂的演讲。\r\n\r\n然而，让我们看看塞斯·高汀（Seth Godin）对领导力的定义：\r\n\r\n\r\n领导力的秘密很简单：做相信的事，画出一幅未来的图像。去那里，人们自会跟随。\r\n\r\n突然之间，领导力似乎唾手可得，就像是每个人都能做的事情。领导力并不是仅保留给那些被授予权力的人，比如 CEO，CTO 或公司的创始人。\r\n\r\n领导力可能是你缺失的一块，它能让你的职业生涯跨越一大步；领导力也可以是一种工具，它能解决你代码库中遍布的大隐患。\r\n\r\n也许我们想要成为一位优秀的领导者，然而领导者们为了获得他们的影响力与尊重，所做的事情比表面上看起来更微妙。优秀的领导者具有一些微妙的习惯和行为，他们把这些习惯融入了日常的互动与关系之中。\r\n\r\n好吧，但我只是个程序员，为什么我需要领导？\r\n\r\n领导力发生在所有的层级上，不仅仅是 CTO 或创始人他们才能领导，领导力可以来自组织架构树的任何层级。由于大多数程序员都处在执行层面的核心位置，所以他们有绝佳的机会注意到效率问题，并带头创新。\r\n\r\n\r\n领导力让你与众不同。那种 “我只是一个程序员” 的心态会严重妨碍你的职业生涯发展，一个技术熟练又善于领导的人将会脱颖而出。\r\n\r\n你可以一边领导一边写代码，变成一个领导者并不意味着放弃你作为程序员的日常工作。领导者是一个有想法的人，他有足够的勇气来描绘一个愿景，并坚持不懈地追求它。你甚至可以带领你的团队走向一个技术愿景，这个愿景将你与你所热爱的开发工作更紧密地联系在一起，而不是让你远离它。\r\n\r\n领导力是永恒的。你使用 Java、C 或 Ruby 编写代码的能力可能会随着时间的推移或语言、平台与需求的变化而减弱。然而，领导一个团队走向成功的能力是永恒的，而且永远是人们所需要的。\r\n\r\n领导力需要时间，培育领导力需要时间。也许，当下领导团队不是你的优先事项，但在未来，你很可能发现自己要么处在一个领导位置，要么想要成为一个领导者 —— 那么现在做好准备可能是个好主意。\r\n\r\n领导力将给予你在团队中的影响力。对如何改进代码库有一个很好的主意？想要使用一种新的编程语言或框架？对新产品有一个好主意？棒极了，然而，严酷的现实是，每个人都有想法。问题是：你能实现它们吗？领导者是这样的人，他们的想法才会被倾听并且推动其前行。\r\n\r\n那些推动变化的人才会获得奖励。你的头衔可能是 “软件开发工程师” 并且容易陷入这种身份认知。然而，你不仅仅是你的头衔。你被雇佣来解决问题（诚然，主要是用代码解决问题），为了解决问题，你要能够利用他人的力量和经验 —— 这就是领导力。当你实现了改变并产生了影响，你就会得到回报。不要坐等改变 —— 让它发生。\r\n\r\n英雄般的传奇程序员一直是个神话，没有程序员能够单独完成任何事情，软件开发如今成了一项团队运动。为了取得成功，你需要能够让周围的人支持你或你的团队。如果你能证明你能激励一个团队，让他们行动起来，你就会变得无价。\r\n\r\n并不存在十倍效能于他人的程序员，但的确有让 5 个队友技能倍增的程序员。\r\n\r\n成为一个领导者不是那么简单的任务\r\n\r\n做为一个初级程序员，当我第一次尝试成为领导者时，我犯了一个巨大的错误：我模仿周围的人。我痛苦的发现我的作法是多么的天真，并了解到领导力比我最初想象的要微妙的多。\r\n\r\n事实上，我是在健身房学会了领导力课程。我持续健身有七年多了，我观察到在每个健身房都存在一种新手现象，让人想笑，他们都在做一样的动作，无论我走到哪个健身房都一样。\r\n\r\n这些新手到底有什么共同点？他们直接复制与模仿他人。\r\n\r\n想象一下：你正在完成你的第一次锻炼，然后走开，开始你的第二次锻炼。一旦你离开，回头看，你就会发现一些健身新手就在你身后，像影子一样模仿你的一举一动！\r\n\r\n当你对一个领域知之甚少，照搬别人似乎是有意义的。但是，以我的经验来看，这是一个巨大的错误。\r\n\r\n在健身训练中，实质发生在表象之后。高级健身会员可能会通过做一些你看不到的事情来获得你想要的成果。\r\n\r\n作为一名新手，我没有意识到高级健身会员训练中的以下几点：\r\n•\r\n他们已经策略性的分析了自己的弱点\r\n\r\n•\r\n他们在用不同的方式加固他们的核心\r\n\r\n•\r\n他们专注于建立 “思维-肌肉” 的联系\r\n\r\n\r\n所有这些都无法被明显地观察到 —— 这些就是其中的微妙之处，就像高效领导者的行为一样。\r\n\r\n当你观察你的资深程序员或团队领导时，你可能没有意识到他们在幕后投入了多少基础工作来支持和鼓励团队。\r\n\r\n一个资深程序员在弹指间驱动团队的强大能力，可不是朝夕之间建立起来的 —— 并且这无关乎他们有多好的编码能力。多年来，他们的影响力被持续精心打磨，并在其所加入的所有团队中被精心实现。\r\n\r\n我在我的第一个领导角色中犯下的 “复制错误” —— 我模仿其他人看上去是如何领导的 —— 创造了一种不真实，机械且虚假的风格。我没能观察到领导力的微妙之处。我当时以为领导是这样的：\r\n•\r\n委派任务!\r\n\r\n•\r\n发布命令！\r\n\r\n•\r\n表现权威！\r\n\r\n\r\n好尴尬！（如今想来）\r\n\r\n我错过了什么？一个简单的事实：好的领导是支持与说服的大师。\r\n\r\n仅仅观察一个领导者的行为，只会给你全貌的一半。\r\n\r\n作为一名程序员，当你想让你的想法获得通过时，你需要能够理解他人，理解他们的动机和他们的需求，以便得到你想要的行动与改变。\r\n\r\n领导者的微妙习惯\r\n\r\n好吧，我想你已经确信成为一个领导者对你做为软件开发工程师的职业生涯来说是很重要的，但你该如何去做呢？\r\n\r\n1. 领导者基于同理心控制自己的情绪\r\n\r\n当我们对批评或困难作出情绪化反应时，结果可能很难接受。领导者需要保持平易近人的态度，这样他们的队友就会觉得可以对他们保持开放与诚实。做为一个领导者，你想要诚实的信息而非糖衣包裹的美化物。\r\n\r\n为了实现这种情绪稳定，领导者们一直在努力理解他人的感受。\r\n\r\n在对情况作出反应之前，好的领导者会作出如下思考：\r\n•\r\n为什么其他人是以这样的方式感觉的\r\n\r\n•\r\n为什么其他人是以这样的方式行为的\r\n\r\n•\r\n为什么其他人会说这些话\r\n\r\n\r\n例如：你可能评审了其他程序员的代码，而他们对你的反馈感到不快。一种未经考虑的情绪反应可能会对你们的关系产生负面影响。\r\n\r\n你可能会想：“但我写下这些评价，是因为我想帮助他们啊！”。\r\n\r\n尽管有这样的想法，一个好的领导者还是会花一点时间去理解他们同事的观点，并意识到批评有时是很难接受的。考虑到这种更有同理心的反应，你可能会平静地解释所要求的改变的目的，甚至可能会主动提出结对编程。\r\n\r\n2. 领导者建立个人关系\r\n\r\n非正式且个人化的探讨建立信任。\r\n\r\n成组的 “团队建设” 有它的作用。优秀的领导者不仅要花时间在团队环境中，而且要寻求与团队成员进行一对一的高质量的交流。个人与个人相处的时间让你有机会在更有意义和更个人的层面上与某人建立联系，这会建立你们之间的信任。\r\n\r\n结对编程是建立这种一对一信任的另一个重要机会。与其他团队成员坐在一起，帮助他们一起完成工作。与他们分享你的知识，保持耐心与理解。\r\n\r\n编码可能是个相当孤独的游戏。尽量找到机会，花一点时间与队友远离键盘。一起吃午餐，或者在他们戴上耳机潜心代码之前，激发起一些关于周末安排的交谈。这些对建立关系的小投资将会获得长期的回报。\r\n\r\n3. 领导者不做评价（Don\'t Judge）\r\n\r\n领导者期望深思熟虑的冒险者为自己工作，他们希望围绕在自己身边的人能够自我驱动。\r\n\r\n为了更好地给予帮助，领导者不去做评价或嘲笑周围人的决策，这样做会削弱领导者的权力与影响力。\r\n\r\n当你的队友意外提交了一些他们不该提交的代码时，会发生什么？你会谴责他们吗？当众说他们是笨蛋？还是帮他们私下清理干净，甚至承认你曾经也犯过很多次类似同样的错误？\r\n\r\n谦卑一点，行将至远。\r\n\r\n4. 领导者给予反馈\r\n\r\n领导者优先考虑他人。\r\n\r\n领导者以建设性的方式向同事提供反馈，以支持他们的成长。他们把团队的最大利益放在心上。\r\n\r\n作为一个程序员，到处都有提供反馈的机会：最困难的部分是有勇气以建设性的方式表达自己的感受。\r\n\r\n当一个团队成员主持一次正式会议，一次敏捷站立会，一次复盘等等，抓住机会，提供一些你认为哪里是好的和哪里还可以改进的洞察。\r\n\r\n记住，一个好反馈的核心在于意愿 —— 你希望其他队友或程序员知道你提供反馈是因为你想帮助他们。\r\n\r\n5. 领导者慷慨而公开的赞扬\r\n\r\n领导者表现得正面积极时会更有力量。假如你是一个充满活力的人，当你离开后也会被想念。当你看见某人做了一件了不起的事情时，要特别强调它，并且公开地这样做。\r\n\r\n赞扬能在团队中产生最大的影响。好的，公开的赞扬建立起了那些被你赞扬的人的信心，并让别人有机会模仿这样的行为，从而获得同样的赞扬。\r\n\r\n赞扬的好时机 —— 包括敏捷计划会，每日站立会和复盘回顾。\r\n\r\n总结\r\n\r\n这就是，成为一个领导者的一些更微妙的方面。\r\n\r\n记住：如果你想成为团队中的领导者，它不需要浮夸的演讲或者骑着马走进办公室。\r\n\r\n要成为领导者，你可以通过每天建立这些小的行为习惯来投资自己，通过花时间有意识地自我反思，并提醒自己想要展示的行为以及你希望如何被你的团队看到。\r\n\r\n很快，可能在你意识到之前，你将会展现出这些微妙的习惯，并会发现其他人蜂拥向你寻求建议、支持与机会。很快，你将发现你的职业生涯实现了一大步的跨越。\r\n\r\n--------------------------------------------------------------------------------\r\n\r\n作者：Lou Bichard\r\n日期：2017-06-07\r\n原文：5 Subtle Secrets Of Effective Leaders\r\n\r\n\r\n此刻瞬间\r\n\r\n程序员成长路上，挡住很多人的一道天堑，就是从执行者向领导者思维的转变，而领导者未必需要是管理者。\r\n','瞬息之间_','业界最新 ','2018-03-11 00:00:00',53,NULL,'sfnbvc',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'../../statics/picture/62105f7c32ace884d10dbf5d38003607.png'),(9,'Linux定时任务','一 cron\r\n\r\ncron是一个linux下的定时执行工具（相当于windows下的scheduled task），可以在无需人工干预的情况下定时地运行任务task。由于cron 是Linux的service（deamon），可以用以下的方法启动、关闭这个服务： \r\n/sbin/service crond start //启动服务 \r\n/sbin/service crond stop //关闭服务 \r\n/sbin/service crond restart //重启服务 \r\n/sbin/service crond reload //重新载入配置 \r\n\r\n你也可以将这个服务在系统启动的时候自动启动： \r\n在/etc/rc.d/rc.local这个脚本的末尾加上： \r\n/sbin/service crond start \r\n\r\n现在cron这个服务已经在进程里面了，我们就可以用这个服务了。\r\n\r\n \r\n\r\n二 crontab\r\n\r\ncrontab位于/usr/bin/crontab。\r\n\r\n \r\n\r\ncron服务提供crontab命令来设定cron服务的，以下是这个命令的一些参数与说明： \r\ncrontab -u //设定某个用户的cron服务，一般root用户在执行这个命令的时候需要此参数 \r\ncrontab -l //列出某个用户cron服务的详细内容 \r\ncrontab -r //删除某个用户的cron服务 \r\ncrontab -e //编辑某个用户的cron服务  \r\n\r\n\r\n\r\n\r\n比如说root查看自己的cron设置：crontab -u root -l \r\n再例如，root想删除fred的cron设置：crontab -u fred -r \r\n在编辑cron服务时，编辑的内容有一些格式和约定，输入：crontab -u root -e 进入vi编辑模式，编辑的内容一定要符合下面的格式：\r\n\r\n*/1 * * * * ls >> /tmp/ls.txt \r\n这个格式的前一部分是对时间的设定，后面一部分是要执行的命令，如果要执行的命令太多，可以把这些命令写到一个脚本里面，然后在这里直接调用这个脚本就可以了，调用的时候记得写出命令的完整路径。时间的设定我们有一定的约定，前面五个*号代表五个数字，数字的取值范围和含义如下： \r\n\r\n分钟　（0-59） \r\n小時　（0-23） \r\n日期　（1-31） \r\n月份　（1-12） \r\n星期　（0-6）//0代表星期天 \r\n\r\n除了数字还有几个个特殊的符号就是\"*\"、\"/\"和\"-\"、\",\"，*代表所有的取值范围内的数字，\"/\"代表每的意思,\"*/5\"表示每5个单位，\"-\"代表从某个数字到某个数字,\",\"分开几个离散的数字。以下举几个例子说明问题： \r\n\r\n每天早上6点 \r\n0 6 * * * echo \"Good morning.\" >> /tmp/test.txt //注意单纯echo，从屏幕上看不到任何输出，因为cron把任何输出都email到root的信箱了。 \r\n\r\n每两个小时 \r\n0 */2 * * * echo \"Have a break now.\" >> /tmp/test.txt \r\n\r\n晚上11点到早上8点之间每两个小时，早上八点 \r\n0 23-7/2，8 * * * echo \"Have a good dream：）\" >> /tmp/test.txt \r\n\r\n每个月的4号和每个礼拜的礼拜一到礼拜三的早上11点\r\n0 11 4 * 1-3 command line \r\n\r\n1月1日早上4点\r\n0 4 1 1 * command line \r\n\r\n每次编辑完某个用户的cron设置后，cron自动在/var/spool/cron下生成一个与此用户同名的文件，此用户的cron信息都记录在这个文件中，这个文件是不可以直接编辑的，只可以用crontab -e 来编辑。cron启动后每过一份钟读一次这个文件，检查是否要执行里面的命令。因此此文件修改后不需要重新启动cron服务。 \r\n\r\n\r\n \r\n\r\n三 编辑/etc/crontab配置文件 \r\n\r\n\r\ncron的系统级配置文件位于/etc/crontab。\r\n\r\ncron服务每分钟不仅要读一次/var/spool/cron内的所有文件，还需要读一次/etc/crontab配置文件,因此我们配置这个文件也能运用 cron服务做一些事情。用crontab -e进行的配置是针对某个用户的，而编辑/etc/crontab是针对系统的任务。此文件的文件格式是：\r\n\r\nSHELL=/bin/bash \r\nPATH=/sbin:/bin:/usr/sbin:/usr/bin \r\nMAILTO=root      //如果出现错误，或者有数据输出，数据作为邮件发给这个帐号 \r\nHOME=/    //使用者运行的路径,这里是根目录 \r\n\r\n# run-parts \r\n\r\n01 * * * * root run-parts /etc/cron.hourly //每小时执行/etc/cron.hourly内的脚本 \r\n02 4 * * * root run-parts /etc/cron.daily //每天执行/etc/cron.daily内的脚本\r\n22 4 * * 0 root run-parts /etc/cron.weekly //每星期执行/etc/cron.weekly内的脚本 \r\n42 4 1 * * root run-parts /etc/cron.monthly //每月去执行/etc/cron.monthly内的脚本 \r\n\r\n大家注意\"run-parts\"这个参数了，如果去掉这个参数的话，后面就可以写要运行的某个脚本名，而不是文件夹名了。\r\n\r\n \r\n\r\n四 实例\r\n\r\n--------------------------------------\r\n\r\n基本格式 : [参数间必须使用空格隔开]\r\n*　　*　　*　　*　　*　　command\r\n分　时　日　月　周　命令\r\n\r\n第1列表示分钟1～59 每分钟用*或者 */1表示\r\n第2列表示小时1～23（0表示0点）\r\n第3列表示日期1～31\r\n第4列表示月份1～12\r\n第5列标识号星期0～6（0表示星期天）\r\n第6列要运行的命令\r\n','Linux知识积累','业界最新 ','2018-03-10 00:00:00',563,NULL,'sfnbvc',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'../../statics/picture/70d8dfd3ba8c89236c747f181ea71b16.jpg'),(10,'夜读 | 当你扛不住的时候，不妨静下心来看看这3句话','1、能力是逼出来的，每个人都是有潜能\r\n\r\n\r\n\r\n\r\n2012年时，我从事网站开发，因工作需要，领导让我做一个安卓项目，由于有一定的基础，最后顺利完成了。后来客户也需要iOS版本的，由于我有移动开发的基础，领导也让我做，花了一周学习Object-C基本语法，后装了个黑苹果就开始摸索了，最后成功开发了一个功能简单的项目。\r\n\r\n\r\n\r\n\r\n看到这，你或许会觉得有点厉害，其实不是，只是逼出来的。我曾在《每天5：30下班，我是如何做到的》这篇文章中提到我很对程序天资并不聪颖。\r\n\r\n\r\n\r\n\r\n我只知道工作不养闲人，当工作相对轻松时，要懂得给自己安排学习计划，经济条件允许下，适当投资自己，提高自己，沉淀自己。不为别的，为自己。你懂的！不要怕这怕那，敢于去尝试，给自己一点点压力。一件事情，只要我们认真去做了，假以时日，这件事情会以不可思议的方式丰富你。\r\n\r\n\r\n\r\n\r\n特别喜欢这样一句话：喷泉之所以漂亮是因为她有了压力；瀑布之所以壮观是因为她没有了退路；水之所以能穿石是因为永远在坚持。\r\n\r\n\r\n\r\n\r\n人的成长和进步也一样，没有压力，潜能得不到开发，智慧就不能开花，最大的损失还是自己。偶尔给自己一点压力，适时地让自己绽放一次，肯定自己的能力，当取得好成绩时，懂得戒骄戒躁，继往开来，再创佳绩。\r\n\r\n\r\n\r\n\r\n当压力过大时，请不要沮丧，或许眼前的压力只是一份考验，只要能妥当处理好，你就是在为自己创造奇迹，看似可望而不及原来我也可以做到。\r\n\r\n\r\n\r\n\r\n\r\n\r\n2、别人把你傻子，没关系，自己不傻就好\r\n\r\n\r\n\r\n\r\n刚开始学习编程的时候，有人说我很天资愚笨不适合做程序员，也有人说我适合当程序员。\r\n\r\n\r\n\r\n\r\n别人把你认为傻，没关系，自己不傻就好，傻不傻都是别人看的，自己心里清楚就好，外面表现的傻点没关系，重要是不要真傻。\r\n\r\n\r\n\r\n\r\n太过于纠结他人的看法，只会缓慢自己进步的节奏。自己的生活要自己把控，自己才是自己人生的掌舵者。\r\n\r\n\r\n\r\n\r\n3、一个人的时候，要学会适应孤独\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n刚毕业时，独自在20多平方的出租屋里，每天一个人上下班，一个人吃饭，一个人看电视。内向的我，觉得领导是那么的高高在上，工作积极性也提不起来。我也不知道这样的状态还要持续多久？总有种莫名有种失落感。\r\n\r\n后多主动和同事交流，把自己融入到团队里，情况果然有好转。\r\n\r\n \r\n\r\n周末，待在小屋里，打扫一下卫生，整理一些没常用的东西，看着如此干净清新的小屋。偶尔写写文字，看看书，泡一壶清茶，看着袅袅吹起的烟，阳光映射在书桌上，倒也十分惬意！\r\n\r\n \r\n\r\n承受孤独的能力，在浮躁的心理一锤锤打下一个桩。静下心来，好好琢磨琢磨，无论你经历过好的还是坏的，坏的，就像不加糖的黑巧克力，让生活先苦后甜。不因一点点挫折而打退堂鼓，熬过去，属于我们的，总会有的。遗憾丛生才叫生活，瑕疵偶现才算真实。\r\n\r\n \r\n\r\n\r\n\r\n【END】\r\n','爱开发V','最新文章 ','2018-03-09 00:00:00',56,NULL,'bvvbb',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'../../statics/picture/a7f37fbad97f3cdb0ee36c0fcd9628ae.jpg'),(11,'5本书，完美跳槽加薪','3、4 月份，很多人都想跳槽，但有几个问题，常常困扰着我们，比如什么机会值得看，怎样写简历，笔试如何准备，怎样为面试做准备……\r\n\r\n\r\n\r\n\r\n换工作是重大选择，必须得有备而战，怎么重视都不为过。因此，我挑了几本书，送给大家，它们提供的方法、思路、工具，可以帮助你更好的跳槽加薪。\r\n\r\n\r\n\r\n\r\n1. 《你的降落伞是什么颜色》\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n这本书的作者是理查德·尼尔森·鲍利斯，他是全球最受认可的职业指导大师，美国最顶尖的职业专家，职业规划师的开山鼻祖。他改变了全世界数百万人看待工作和生活的方式，帮助迷茫的求职者和跳槽者了解自我，掌握求职技巧，找到理想工作。\r\n\r\n\r\n\r\n\r\n这本书是全球最权威、最畅销的求职和跳槽使用指南。如果说你只能有一本关于求职的书，非它莫属！\r\n\r\n\r\n\r\n\r\n2. 《程序员的成长课》\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n这本书的作者是安晓辉（我本人啦），它的第 5 章讲跳槽常见问题，包括怎么分析离职原因、理想工作的特点等，第 6 章讲简历优化，提高简历通过率，第 7 章讲如何获得你想要的薪水。这 3 章特别适合更换工作时阅读。\r\n\r\n\r\n\r\n\r\n这本书的购买链接：https://item.jd.com/12243573.html 。\r\n\r\n\r\n\r\n\r\n3. 《剑指 Offer》\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n这本书其实不仅是面试的书，还是编程书。结合在一起，它其实更多的在谈技术面试会遇到的各种问题，包括解法、思路。里面提到的题目，基本是 C 、C++ 的，这和作者在微软工作的背景有关。\r\n\r\n\r\n\r\n\r\n第一章有讲到技术面试的最后环节——应聘者提问，作者说最推荐的问题是与招聘职位或者项目相关的问题，这点大家要记住。因为这是技术面哦，什么薪水啊、会不会被录用啊、公司发展战略啊，都不大合适。你准备的问题，一定要和坐在你对面的那个人的角色匹配才行。\r\n\r\n\r\n\r\n\r\n这本书的购买链接：https://item.jd.com/12163054.html 。\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n4. 《程序员面试宝典》\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n这本书最新版本是第 5 版，我手上的是第 4 版。\r\n\r\n\r\n\r\n\r\n这本书大部分内容也是在讲 C 和 C++ 的面试题……需要参加笔试的可以多练练。回想我当年找工作时还没这类书，是在一次次参加笔试被鄙视的过程中把笔试能力练出来的。\r\n\r\n\r\n\r\n\r\n这本书有个 Java 版本的姊妹篇，书名是《Java 程序员面试宝典》，依赖 Java 语言求职的小伙伴可以买这个版本。\r\n\r\n\r\n\r\n\r\n这本书的购买链接：https://item.jd.com/11772830.html 。\r\n\r\n\r\n\r\n\r\n5. 《程序员生存手册（面试篇）》\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n这本书的特点是，涵盖的知识面比较宽广，比如常见算法、数据结构、操作系统、多线程、大数据、云计算、数据库、网络、移动开发等等，语言也比较多，Java、Perl、C++、PHP等。还没了解过这些面试题的，翻翻还是不错的。\r\n\r\n\r\n\r\n\r\n后面还提到几项软技能，表达、交流、自我营销、展示等，都比较重要，还提到了提高软技能的方法——反思、计划、实践，不过更推荐《内向者沟通圣经》中的 4P 法。\r\n\r\n\r\n\r\n\r\n这本书 2016 年出的，京东自营已经找不到了链接了，也许卖得不好吧。\r\n\r\n\r\n\r\n\r\n0. 大家来推荐\r\n\r\n\r\n\r\n\r\n\r\n肯定还有很多适合跳槽时看的书，欢迎大家留言推荐哦。\r\n\r\n\r\n\r\n\r\n戳阅读原文，可以购买我的书《程序员的成长课》。\r\n','程序视界','最新文章 ','2018-03-09 00:00:00',33,NULL,'fgbf',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'../../statics/picture/d53977a1da22a0ba27f38bf71f16d4f3.jpg'),(12,'这本 “写不完” 的黑科技笔记本，恐怕要颠覆整个行业！ \r\n','这是一本可以“阅后即焚”的笔记本？\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n别想太多\r\n\r\n这个“焚”不是那个“焚”哦~\r\n\r\nTA非常神奇！风筒吹吹，\r\n\r\n笔记本上字迹都会自动消失。\r\n\r\nwhat？\r\n\r\n\r\n\r\n\r\n\r\n\r\n（暂时保密，一会见证奇迹）\r\n\r\n\r\n\r\n\r\n每个人在步入学生时代，到社会工作，不管是写作业还是记录工作，纸质笔记本大家都非常熟悉，不仅方便记录，用纸质笔记本写字的感觉还是有满足感。\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n每一天我们都在纸质笔记本上写写写~对于笔记本，我们是再熟悉不过了。\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n但神奇又黑科技， 号称一辈子都写不完的笔记本——你见过么？\r\n\r\n\r\n\r\n\r\n\r\n\r\nElfinbook智能笔记本\r\n\r\n（帮你分类管理内容，非常黑科技）\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n乍眼一看，也就是个挺普通笔记本啊。\r\n\r\n\r\n\r\n\r\n没错，设计师并没有赋予它任何电子感，而是将它设计成了时尚文艺的活页笔记本，回归最原始的书写体验。\r\n\r\n\r\n\r\n\r\n不过看了下本子的使用方法，超神奇！像魔术一样！\r\n\r\n\r\n\r\n\r\n\r\n\r\n（看看视频，见证神奇的一刻！）\r\n\r\n\r\n\r\n\r\n\r\n\r\n 重复抒写500次，轻松擦除 \r\n\r\n\r\n\r\n\r\nElfinbook最神奇的功能就是写错字，丝毫不用担心。用笔尾部轻轻擦一擦，就像橡皮泥一样，即可清除笔迹～\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n还有更神奇的，用吹风机吹吹，能让整页笔记本焕然一新～\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n没有吹风机？\r\n\r\n\r\n\r\n\r\n也可以拿一个湿布或湿纸巾轻轻一抹，字迹消失无踪！\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n写了擦，擦了写，本子受得了？\r\n\r\n\r\n\r\n\r\nElfinbook X可支持500次重复书写，就按你一年用8本笔记本，500次可以使用60多年！\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n是的，用一辈子，就是这么黑科技！\r\n\r\n\r\n\r\n\r\n那么问题来了，笔记本里的资料我都想保留啊，擦除了那之前写的不是白费？\r\n\r\n\r\n\r\n\r\n不着急，第二个黑科技——见证奇迹的时刻！\r\n\r\n\r\n\r\n\r\n APP智能云端同步，高科技 \r\n\r\n\r\n\r\n\r\n通过配套的APP，我们还可以对书写的内容扫描，将创作的内容能够同步到云端进行保存。\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n就像这样，打开扫描，立马就完成了内容的导入，非常方便简单~\r\n\r\n\r\n\r\n\r\n\r\n\r\n自动边框识别、OCR识别内容，还支持图片转文字，中英双语都可以自己识别。渣渣的拍照技术也不愁了！\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n扫描后你可以将内容编辑成PDF的格式，同步至不同的平台，也能分享给好友。\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n同时，APP还配套了与Windows一致的树状文件管理结构，还支持搜索查找，再也不会为找本子而折腾翻箱倒柜了。\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n还能增强效果就像是给你的笔迹进行“美颜”，让笔迹更加清晰明了。绝对是笔记、画画神器。\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n拥有那么强大的功能，是因为它使用了一种特殊的材料——\r\n\r\n\r\n\r\n\r\n 石头纸，防水防折！安全环保 \r\n\r\n\r\n\r\n\r\n要知道一吨石头纸可以取代一吨木浆纸，这样大约可以保住 20 棵成龄树木，岂不是非常棒的纸质替代品？\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n那么，到底什么是石头纸？\r\n\r\n\r\n石头纸是一种介于纸张和塑料之间的新型材料，从替代传统部分纸张角度看，它能为社会节省大量的林木资源，又能减少造纸过程中产生的二次污染；从替代传统部分塑料包装物角度看，它能为国家节省大量的战略资源石油（每使用1吨可节省石油2.3吨），产品使用后能够降解，不会造成二次白色污染。\r\n\r\n\r\n\r\n\r\n相比于木浆纸，石头纸没有添加剂，所以更安全；继承石头特性的材质，防水又耐折。\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n防水的功能，不仅让写字顺畅不说，遇水字迹也不会晕开。\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n 黑科技+颜值=精致 \r\n\r\n\r\n\r\n\r\n黑科技的石头纸材料，上色十分容易，轻轻一描就能写上去，书写再久手腕都不会感到酸痛，简直是记录者的福音！\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n而光有黑科技还不够，颜值要跟的上，送礼，自用才有档次。\r\n\r\n\r\n\r\n\r\n\r\n','数据与算法之美','热门文章 ','2018-03-08 00:00:00',444,NULL,'sdscsc',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'../../statics/picture/fd7c5c8fd40a537feb63fb44df8cf5ea.jpg'),(13,'福耀遇上Dell EMC | 让工业4.0在福耀落户','福耀集团\r\n\r\n\r\n\r\n\r\n全国最大，世界第二大，\r\n\r\n汽车玻璃生产商，\r\n\r\n生产基地遍布国内16个省市\r\n\r\n及全球9个国家。\r\n\r\n\r\n\r\n\r\n在中国，每三辆汽车中有两辆使用福耀玻璃。\r\n\r\n在全球，福耀集团占据20%以上份额。\r\n\r\n\r\n\r\n\r\n制造业是国民经济发展的脊梁。是立国之本、兴国之器，更是强国之基。高度发达的制造业是实现工业化的必备条件，也是一个国家综合竞争力的重要体现。\r\n\r\n\r\n\r\n\r\n经过30年的发展，成立于1987年的福耀玻璃工业集团股份有限公司（以下简称：福耀集团）又一次进入到发展的重要关口。面对全新的数字化挑战及竞争态势，福耀集团率先向工业4.0转型，开启了迈向数字化转型，走上智能制造之路的新征程。\r\n\r\n\r\n\r\n数字化重塑\r\n\r\n助力福耀革新\r\n\r\n\r\n\r\n\r\n与中国制造业做大做强的方向一致，在全球制造业转型升级的大趋势下，福耀集团同样面临着如何通过信息化和智能化，实现企业智能“蜕变”，从而进一步提升在全球市场竞争力的难题。\r\n\r\n\r\n\r\n\r\n2015年4月，福耀集团董事局主席曹德旺提出“让工业4.0在福耀落户”，这一指导思路与一个月后国务院印发的《中国制造2025》行动纲领，可谓相得益彰。\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n自此，福耀集团制定了向工业4.0转型的推进路线图，开始了向数字化转型，走智能制造之路的新征程，并在2016年成为国家工信部智能制造的首批试点示范企业。\r\n\r\n\r\n\r\n\r\n福耀集团的信息化起步较早，已先后建成了包括ERP、CRM、PLM、MES等在内的多个业务信息系统。在企业转型升级、实现智能制造的过程中，他们既要解决以往IT建设中存在的问题，也要为今后实现智能制造打下基础，并解决以下问题：\r\n\r\n\r\n\r\n\r\n① 如何打通信息孤岛？\r\n\r\n\r\n\r\n\r\n从研发设计、工艺制造、生产交付、运营服务，到质量管理、设备维护、物流仓储等环节，福耀集团包含近30个系统，系统之间相互独立。同时，不同系统的数据缺乏标准化，数据无法共享，难以互联互通，成为实现智能制造首先要面对和解决的问题。\r\n\r\n\r\n\r\n\r\n② 如何实现IT现代化？\r\n\r\n\r\n\r\n\r\n早期的信息化建设中，福耀集团的部分系统运行在Unix系统的小型机上，已经难以灵活、快速地响应业务需求的变化。此外，福耀集团还要面对容灾的合规要求，在主数据中心200公里外搭建灾备中心，以保证业务系统的高可用性、安全性和可持续性。\r\n\r\n\r\n\r\n\r\n③ 如何体现智能化？\r\n\r\n\r\n\r\n\r\n智能制造的核心是智能化，仅仅靠独立的信息系统、割裂的流程无法提升制造生产的协同效率，也无法实现柔性制造和敏捷制造，福耀集团亟需构建全流程端到端的智能协作平台，实现统一的业务管理和流程协作，以及实时智能的监控反馈。\r\n\r\n\r\n\r\n\r\n通过领先的IT解决方案，以及在柔性制造、智能制造、供应链管理的先进经验，辅之以全面的咨询服务，戴尔易安信公司成为福耀集团的重要合作伙伴，为该集团的数字化重塑提供从咨询、产品到服务的端到端的解决方案。\r\n','比特网','最新文章 ','2018-03-07 00:00:00',321,NULL,'cccccc',NULL,NULL,NULL,NULL,NULL,1,NULL,NULL,'../../statics/picture/481f31224e31a114adbf35cbdde4b24b.png'),(14,'运维2018专享面试指南，助你秒收高薪offer！','又到了一年一度的金三银四跳槽季，升值、加薪、改变人生轨迹的时刻又来临了，想想就很激动了吧，老铁们！\r\n\r\n\r\n\r\n\r\n关于“年前找工作好”还是“年后找工作好”这个话题，就如同“先有鸡还是先有蛋”一样，正方反方各执一词均有理由，但是无论是年前找还是年后找，都应遵循下面的一些前车之鉴。没时间解释了，快上车！\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n一、职场工作生存技能\r\n\r\n\r\n\r\n\r\n1、专业知识技能\r\n\r\n　　掌握的知识的体现。\r\n\r\n\r\n\r\n\r\n2、可迁移技能\r\n\r\n　　沟通社交能力体现。\r\n\r\n\r\n\r\n\r\n3、自我管理技能\r\n\r\n　　个人状态的体现。\r\n\r\n\r\n\r\n\r\ntips：看过《荒野求生》的都知道在野外必须要拥有和“贝爷”一样的生存技巧，同样，在竞争激烈的IT行业，过硬的专业技能也关系到你的“钱途”。咱们运维人员要提升Linux运维技能，要多多了解一些新的技术以及运维行业新的发展前景及趋势。\r\n\r\n\r\n\r\n\r\n二、面试前的准备工作\r\n\r\n\r\n\r\n\r\n写简历的几点注意事项：\r\n\r\nWORD文档格式：网上03—07的版本，格式容易打开。WPS仿WORD格式有些企业是不太合适的。原因：外企的企业文化不太适应山寨。\r\n\r\n\r\n\r\n\r\n文档大小：企业邮箱有文档太小的限制。相片、视频不要太大，文档不超过1M。\r\n\r\n\r\n\r\n\r\n字体: 通用宋体或仿宋体。\r\n\r\n\r\n\r\n\r\n最好是word文档，不要用excel表格及其他的办公软件。\r\n\r\n可以到网站上去下载一些简洁明了的版本，比较方便。\r\n\r\n文件名最好是“姓名+会计简历+手机号码”。\r\n\r\n\r\n\r\n\r\ntips:投递简历的技巧\r\n\r\n求职信发送时间也是颇有讲究的，建议求职者遵循以下几点来把握发送时间：\r\n\r\n大部分邮件都是在1小时内被阅读，超过4小时，你的邮件可能永远不会被打开。\r\n\r\n下午5点，也就是下班前夕发邮件，阅读率非常低，人们忙着吃饭、回家。\r\n\r\n发邮件的最佳时机是：早上7点至8点，下午2点至3点。比高峰期提前1小时。\r\n\r\n\r\n\r\n\r\n看到这里，各位同学们是否觉得眼前一亮？这些骚操作我们这些Linuxer平时可没想到啊！！没关系，下面还有3个绝招，马上回来！\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n三、简历5大要素如何写好？\r\n\r\n\r\n\r\n\r\n1、简历-基本信息\r\n\r\n这一部分主要是把自己的基本情况做一简单介绍，用一目了然的格式、简洁的语言说明个人的基本情况。\r\n\r\n内容包括：姓名、性别、民族、年龄、照片、籍贯、家庭住址、是否婚育、最高学历、所学专业、政治面貌、身高 联系方式等。\r\n\r\ntips：有些项目可写，有些项目可以不写，有一定的技巧。\r\n\r\n\r\n\r\n\r\n2、简历-求职意向\r\n\r\n既然是简历组成重要的一部分，最好是单独作为一行表列清楚。\r\n\r\n求职岗位要明确，同一级别的岗位写一到两个岗位名称即可。\r\n\r\n如果是网站上注册的简历会分别有行业的选项、岗位的选项，建议大家在行业选项最好是选“不限”，岗位选项参照第二条即可，不要所有岗位都去勾选。\r\n\r\n\r\n\r\n\r\n3、简历-自我评价\r\n\r\n文字要简单明了、言辞中自信、积极但切记勿过于吹捧自己\r\n\r\n内容一般份两方面的内容:\r\n\r\nA、个人工作态度、人品的概述；\r\n\r\nB、个人工作能力、特长的概述；\r\n\r\nC、排版清晰，最好是1、2、3、4分行写。\r\n\r\n\r\n\r\n\r\n4、简历-教育经验\r\n\r\n是指传统学历教育的经历和除此之外的职业技能培训经历。\r\n\r\n\r\n\r\n\r\n5、简历-工作经历\r\n\r\ntips：写经历和经验也需要很小心。\r\n\r\n<1>、通常只需要写最高的学历教育经历和跟运维行业相关的培训经历。\r\n\r\n<2>、培训经历时间尽量写长一点，至少一年以上。\r\n1.\r\n工作年限3-5年的，所有的工作单位最好不要超过两家。\r\n\r\n2.\r\n工作年限3年以内的，低于一年的工作经历不要写。\r\n\r\n\r\n<3>、跟运维不相关的工作经历简化，最好少写或者不写。\r\n\r\n<4>、工作经历中，最近一份工作一定要写运维相关工作经历。\r\n\r\n<5>、运维相关的工作经历，工作内容、参与项目的描述要写具体、明确。\r\n\r\n\r\n\r\n\r\n今天给大家介绍了这么多看家本领，希望对大家2018年面试有所提升，圆满实现升值、加薪、走向人生巅峰！\r\n\r\n\r\n\r\n\r\n免费接触学习热门高薪运维技术的机会来喽！\r\n\r\nLinux云计算免费课程距离开讲倒计时9天，5天免费运维干货内容免费听，点击文末“阅读原文”即可免费听运维课！火速抢先~~~~\r\n','Linux云计算数据自学v','热门文章 ','2018-03-06 00:00:00',421,NULL,'fffff',NULL,NULL,NULL,NULL,NULL,1,NULL,NULL,'../../statics/picture/fef6fa64e5d526bc9bc9e1522b9d020d.png'),(15,'想跳槽？！AI机器人会收留你吗？','\r\n\r\n\r\n据韩媒报道，近日，人工智能在韩国国内招聘市场正迅速崭露头角。从筛选简历，到分析应聘者的人品和职业性格，再到“幕后面试官”，人工智能都在发挥重要作用。 \r\n\r\n\r\n\r\n\r\n韩媒称，人工智能面试官可排除面试受人类主观因素影响，且效率高成本低。\r\n\r\n\r\n\r\n\r\n据报道，人工智能招聘系统的最大优点在于，它可以防止招聘过程受到人类主观因素的影响。\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n不愿公开姓名的一位公司人事主管表示，“最近接连爆出招聘过程中的人事腐败问题，也提高了人们对人工智能招聘系统的关注度”，“希望人工智能可增强大家对招聘系统的信任度”。\r\n\r\n\r\n\r\n\r\n对企业来说，人工智能招聘系统具有效率高且成本低的优点。人工智能分析一份自我介绍仅3秒钟，8个小时就能分析完一万名应聘者的自我介绍，而相同的工作量需要10名人事负责人，按照一天8小时的工作时间工作七天才能做完。\r\n\r\n\r\n\r\n\r\n据报道，在面试过程中，人工智能会锁定应聘者面部68个关键点，实施分析应聘者的面部表情、肌肉动作、声音和语速等，感应出应聘者的心跳、脉搏数和脸色变化。\r\n\r\n\r\n\r\n同时，人工智能还会将应聘者的脑部分为六个部位进行脑电波分析。之后，人工智能可以对应聘者各方面的能力做出评价，并给出一个综合评估，将评估建议书提交给人事负责人。\r\n\r\n\r\n\r\n\r\n\r\n当然，其副作用也颇为令人担忧。据报道，人工智能只能根据已知的数据进行分析，完全不考虑应聘者的未来潜力。\r\n\r\n\r\n\r\n\r\n而且，应聘者对于面试过程中必须面对计算机而不是人类面试官回答问题的方式也感到颇为抗拒，不少应聘者反应这种面试方式导致自己在面试过程中无法紧张起来，感到颇为不适。\r\n','遇见人工智能v','热门文章 ','2018-03-05 00:00:00',367,NULL,'sdcscs',NULL,NULL,NULL,NULL,NULL,2,NULL,NULL,'../../statics/picture/9b4ea6a8403891f274d3f8b714658744.png');

/*Table structure for table `user` */

DROP TABLE IF EXISTS `user`;

CREATE TABLE `user` (
  `uid` int(11) NOT NULL AUTO_INCREMENT,
  `uname` varchar(50) DEFAULT NULL,
  `upwd` varchar(50) DEFAULT NULL,
  `upicture` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`uid`)
) ENGINE=InnoDB AUTO_INCREMENT=44 DEFAULT CHARSET=utf8;

/*Data for the table `user` */

insert  into `user`(`uid`,`uname`,`upwd`,`upicture`) values (1,'admin','123','../../statics/fg.png');

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;
